var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"SQCCQCHCCCEECCCEHIFGTPPTTFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFFFIFKFFKFFFKFFINNNNNNNNNNMMNNNNNNNNNNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNCNNNNNNNNNNNMMMMHNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFMNMONNNHNKKNNNNNNNNNNNNKMKKNMFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCCFIKKNNNNNMNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPKKFFPNNNMMMMMMNMCNNNNNNMMNNNNNNNNNNNNNNOONNNNNNMMNNNNNNNMCMMCNNNNNNNNCMMCMMMMNNNNNNNNNNNMMOONNNNNOONNNMMMOOMNNNMNMMCMMMMMCMMNNMMMNNNNNNNNNNNNMNNNNNNNNNNNNNNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFOOOOOOOOMMCHHHHHHHHHPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPPIFPPIFPPPPIFPPPPIFPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFPRIIIIIKKKKRGPKPPPIPFPPPFPPPPPIFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHHNNHNNNNNNNNNNNNNNNNNNNNNNNNNNONNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMFFFKGPFPPPGHMHHCCGPPPPGFNNNNNHNNHNNNNNNNHNCCCPPPPPFPPPPPGIGPPPPPPNNNNNNNCNNNNNNNNNNNNQNNNNNNNNNNNNNNNHNNNNNNHQQQQHHNNNNNNNNNNNNNNOOOOJJJPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHPPGPFPPPPPIPGPPKFFPPPPPGFKPPKPPRIKPKKFIGFFGKKPFKKPKKGPPJPPPFFPPPPIIPPKPIFPFKPPPPPPIFGFIPPFFPFPPPFPPPFFGKFGFPPFFKKKKKKKKKKKKKKFIKKKKKKKKKKKKFKKKKPGGPPPPPPGPPPPPPKGFFFFFPPPPPJJFKKPPPGPPPPPIKPFPPFIKFPPPPIFPKPPPPPPGPPPFPPPPFIKFIFPPPPPPGPPGKFPPPJJFFIFIFIPIGPPPPPPPPFPPPPPPPIFPPPPIFPPPPPPPKKKRPGKPPPKPIPFFPGPFGGFFIPPPPFPPRRRPSJPPPIIIIIPPFPKGKKKPIPPIFPPPPIFPPPPIFPPPPIFPPPPIFPGPKKKKKPGFFFFFFFFPPKPPPKPPRPPPRPPFFGKFPGGPGFPFFFPPPGPIPIIPPPPPFKFFFPPPPPIPPKPPPPPFFKIPKFKKFFFKPGPFPPKPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPSPPPPKKPPPPRPPPPPPKPFGPPPPPPPPPFPPPPPPPGIFKKKPPIPFPPPGFPPRPPRPFFGGFFFFFKIPRKFIIIIIPKKGKKKKKKKIKKKRKPGFPPKGGPPPPPPPGFKPKPPPGPPPPPPFPPFFFFKFPPKIPPRPFFFFPPIGPPPKKFFPKKKKKKKKPPPPPPPPPPPKFPPPPFFFFPGKPPPPPPPFPIIPKKPFFPPPFFPPFPPPPPPKPKPFPPPPPPIKFGIPKPRRPFPPPPPIFPPPPIFPPPPIFPPPPIFKPPPFPGPPGPFPPPPRRPPKKPFPFPPGGPPPRRPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHNNNNNNNNNNHNMNNNMNNNCNHNHNNONNNNONNNHNMMNNMMMNNHNMMNNHMMHNMNNNMNNNMNNHNMNNHOCNMNNMCNMMNNNNNMNNNNNNMNNNNNMMNNNNMHNNNHNNNHONNNNNNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOMNHMMNNHMMMNNNMCNNNNNONHHHOOMNMMOCMMHNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCNOONNHNNOHHNHNNNNNNNNNNNHNOONONNOONHNHNNHHHHNNNNNNNNHHNNNNHHNNNONNNHNHHNHNHNHHNNONNOCOHCHOHHHHHNNNOMNONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNHOQOHNNNOMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHCNMNOHHOHOONNONNHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMMOONNNNNNNMCONNNNNNNNNOONNNNNNNNOOONNCNNNMMMNNNMNNNMMMMNNNNNNNNNNNNNNNMNNNNHNNNCNOCNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOOHNOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNMNNNNMNNONNNMMNNNNMNNCMNMMOCNCNNNMNNNNNMNMNNNNNNMNNNMMNNNNNNNMNNNNNNNHMHMNNNNONMNNHHNMNNMNOMNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHMNNOMONOONOHHNHNOONONNHOOMNNHHNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONHHOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNMNNNHNHHNNNNNNHNNNHNNHNNNNNNNNHMNHMNNNOHNNNNNNNNNNMNNNNNNNNNNNNNNNNNONNNOOHNNNNMNNONNNMMMHMNNNNNNNNONHMNNNNOONNOOONNNNNNNNNNNNNNNNNNNNNNMNNMNOOOOOOHHNNNNHNNNNNNNNNNHNNHNNNNNNNHHHNNNNNNNOHNNNNNHNNNNNNMNNOONNHOOOOMONMOHNNNNNNNNOOOOMNNOMOOCNNNNOMMNNMNNMOONMNNOOOOONONNNNNMNOOOONNCMNNMNONNNHHNMNNNMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNHNNNNNNNNNNNNNNNNNNNNHNMMHCNNOMNNOOOONOOOOMNNONNNNNNNNNONNOOONMMNOONNMNNOMNNOONNNQQQQNOOONNHONNNOOONNHNNNMNNNNNOOOONNNNNNNNNMMNNOOOOHNNMNMNMNNNHHNHNNNNNNHNHOMMNNNNONMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNOOOOMNNOOOOOONNNNOMNNNNNMMMNNNNNNNNOOOOOCMNNOMONNNOOOCMNNNNNNNNNNNMMNNNNMNNNNNMNNOONNNNOOOOCMNNNNNOOOMNMNNNNNCMNNNNNNMNNNNNHNHNNONNONNNNNNMNNNHNNNNNNOOOONONCHNHNHNHNHNNNMNMNNNONHNNNNNNNNNNNNMMMMMMMMNHNNOHOOONNNNNNNNMNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONMMMMNNNNNNNNONNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMCMNNNNNNNNNNNNNMMNOOCNONNNNNOMONMNNNNNNNMNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNONOHNNOOONNNNNNMMNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMMMMMMMMMMMMMMMMMMNNNNNNNOCMOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOKKHHHHHHHHMMMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHKKNNNNNNNNNNNNNNNNMFNNNNNNNNNNNNNNNFKKKFKKKNNNNNONNMOMNMNNNNMMOMNMNNMNMNNMMNNNNNNNNNNNNNNNNNMNMCONNNNONNKPPPPPGKNNNNNMNNNNNNNNNNNNNNNCNNNNNNNNFRKKNNNNNNNNNHNNONMNNONNMNNNNNPPFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNPPFGPPPOPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPPIFPPIFPPPPIFPPPPIFPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFPRIIIIIKKKKRGPKPPPIPFPPPFPPPPPIFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRMNNMMNHMCNNNNHMOMNNNMNNNMMNMNHHHOMMMNNMNNNNNMMMMMFFFKGPFPPPGHMHHCCGPPPPGFHHHHHHKKKMMMFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMMFNNNNNNNNNNNNNNNNNNOHHPPPPPPPPPPPPGPGPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPCCCCOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNHHHHHHHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPGHHKKMNNNNNNNNNNNNNNNNNNNKMMKHCCCMMHHHHHHHHKFFOOOOOOOOMMKFKMNNNNNNNNNNNNNNNNNHNNNNNNNHNHNHNNNNNNHNHNHNHNHNNNNNFOOOOOKKNNPKPKGRPFFIKNNNNNNNNNNNNNNCNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNMNNNMNNNNNNNCNNNNNNNNNMNNNNNNMMNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNMNNNNMCNNNMNNNMNNMNNNNNMNNNNMNNNNNNNNNNNNNNNMNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNKKKRHMMNCMMNMMNMMNMMNKKMNMNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNN","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkIdIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitand","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast","cast","cast","cast","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","checked_div","checked_div_num","chunk_id","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","explode_and_offsets","extend","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_name","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_flags","get_inner","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","inner_dtype","insert","intersection","intersects","into","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_as_series","max_as_series","max_as_series","max_as_series","mean","mean","median","median","median","median_as_series","median_as_series","median_as_series","min","min","min_as_series","min_as_series","min_as_series","min_as_series","min_max","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_as_series","prune_empty_chunks","quantile","quantile","quantile","quantile_as_series","quantile_as_series","quantile_as_series","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","remove","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","std","std_as_series","std_as_series","std_as_series","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_as_series","sum_as_series","sum_as_series","sum_as_series","symmetric_difference","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_as_series","var_as_series","var_as_series","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","width","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","One","Reinterpret","SlicedArray","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_time_unit","cast_time_unit","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max_as_series","merge_dtypes","merge_map","microseconds","milliseconds","min_as_series","minute","minutes","month_end","month_end","month_start","month_start","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","performance","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","lazy","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","AggregationContext","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","CommentPrefix","ComputeError","ConcatExpr","Context","Count","Count","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeMethods","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","Enum","Enum","Eq","EqValidity","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Higher","IDX_DTYPE","INTEGER_RE","IO","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","LeftJoinIds","Len","Lexical","LhsNumOps","Linear","Linear","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microseconds","Midpoint","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Mode","Modulus","Monday","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","Out","OutOfBounds","Outer","Output","Over","OwnedBatchedCsvReader","OwnedObject","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PartitionedAggregation","PathIterator","Physical","Physical","PhysicalExpr","PhysicalIoHelper","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsMonthEnd","PolarsMonthStart","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Reshape","RevMapping","Reverse","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","Saturday","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","Snappy","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","SplitNChars","Sqrt","StartBy","StaticArray","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","TakeChunked","TemporalExpr","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeType","TimeUnit","TimeZone","Timestamp","ToDummies","ToPhysical","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","Xor","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_outer_join","_collect_post_opt","_create_left_df_from_slice","_finish_left_join","_join_suffix_name","_left_join_from_series","_outer_join_from_series","_sum_as_series","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_expression","as_fd","as_list","as_partitioned_aggregator","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_stats_evaluator","as_stats_evaluator","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cat","cat","cause","cbrt","ceil","ceil","center","century","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","check_sorted","check_sorted","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","evaluate","evaluate_io","evaluate_on_groups","evaluate_partitioned","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","finalize","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_validity","has_validity","has_window_function","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_reader_with_file_handle","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_literal","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_as_series","max_as_series","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_as_series","median_as_series","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_as_series","min_as_series","min_max","min_periods","min_periods","min_periods","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","month_end","month_start","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","outer_join","outer_join","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_as_series","product","profile","projection","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_as_series","quantile_as_series","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_overwrite","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_as_series","std_as_series","store","str","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_as_series","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_as_series","var_as_series","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn_if_unsorted","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_extension","with_float_precision","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","warn_if_unsorted","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","BinaryExpr","Boolean","BooleanFunction","Categorical","CategoricalFunction","Cbrt","Ceil","Clip","Coalesce","ConcatExpr","CumCount","CumMax","CumMin","CumProd","CumSum","Diff","DropNans","DropNulls","ExtendConstant","FillNull","FillNullWithStrategy","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Interpolate","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","ListExpr","LowerBound","MaxHorizontal","MeanHorizontal","MinHorizontal","Mode","Negate","Not","NullCount","Pow","PowFunction","Random","Range","Rank","RepeatBy","Replace","Reshape","Reverse","RollingExpr","RollingExprBy","Round","RoundSF","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sqrt","StringExpr","StructExpr","SumHorizontal","TemporalExpr","ToPhysical","Unique","UpperBound","ValueCounts","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","Any","Left","Right","SearchSortedSide","binary_search_array","slice_sorted_non_null_and_offset","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_sum_as_series","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_as_series","mean","mean_as_series","median","median_as_series","min","min_as_series","mul","mul","mul","mul","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_as_series","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","std","std_as_series","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_as_series","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","unstable","var","var_as_series","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array"],"q":[[0,"polars"],[17,"polars::chunked_array"],[866,"polars::chunked_array::arithmetic"],[894,"polars::chunked_array::builder"],[1151,"polars::chunked_array::builder::list"],[1168,"polars::chunked_array::collect"],[1182,"polars::chunked_array::float"],[1184,"polars::chunked_array::from_iterator_par"],[1188,"polars::chunked_array::iterator"],[1258,"polars::chunked_array::iterator::par"],[1260,"polars::chunked_array::object"],[1331,"polars::chunked_array::object::builder"],[1354,"polars::chunked_array::object::registry"],[1382,"polars::chunked_array::ops"],[1580,"polars::chunked_array::ops::arity"],[1615,"polars::chunked_array::ops::float_sorted_arg_max"],[1617,"polars::chunked_array::ops::gather"],[1620,"polars::chunked_array::ops::search_sorted"],[1649,"polars::chunked_array::ops::sort"],[1656,"polars::chunked_array::ops::sort::arg_bottom_k"],[1657,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1664,"polars::chunked_array::ops::sort::options"],[1677,"polars::chunked_array::temporal"],[1684,"polars::chunked_array::temporal::conversion"],[1687,"polars::datatypes"],[3026,"polars::datatypes::categorical"],[3043,"polars::datatypes::categorical::revmap"],[3049,"polars::datatypes::categorical::string_cache"],[3068,"polars::docs"],[3071,"polars::error"],[3155,"polars::error::PolarsError"],[3159,"polars::error::constants"],[3162,"polars::frame"],[3415,"polars::frame::explode"],[3444,"polars::frame::group_by"],[3679,"polars::frame::group_by::GroupByMethod"],[3680,"polars::frame::group_by::GroupsProxy"],[3682,"polars::frame::group_by::aggregations"],[3695,"polars::frame::group_by::expr"],[3698,"polars::frame::row"],[3805,"polars::functions"],[3807,"polars::prelude"],[8650,"polars::prelude::AggExpr"],[8657,"polars::prelude::BooleanFunction"],[8660,"polars::prelude::DslPlan"],[8711,"polars::prelude::Expr"],[8745,"polars::prelude::FunctionExpr"],[8765,"polars::prelude::GroupByMethod"],[8766,"polars::prelude::GroupsProxy"],[8768,"polars::prelude::LiteralValue"],[8771,"polars::prelude::PolarsError"],[8775,"polars::prelude::aggregations"],[8788,"polars::prelude::arity"],[8823,"polars::prelude::array"],[8842,"polars::prelude::binary"],[8858,"polars::prelude::cat"],[8859,"polars::prelude::chunkedarray"],[8927,"polars::prelude::chunkedarray::string"],[8965,"polars::prelude::chunkedarray::string::infer"],[8995,"polars::prelude::cloud"],[9042,"polars::prelude::cloud::options"],[9050,"polars::prelude::datatypes"],[9314,"polars::prelude::datatypes::categorical"],[9331,"polars::prelude::datatypes::categorical::revmap"],[9337,"polars::prelude::datatypes::categorical::string_cache"],[9341,"polars::prelude::datetime"],[9344,"polars::prelude::default_arrays"],[9350,"polars::prelude::dt"],[9402,"polars::prelude::expr"],[9405,"polars::prelude::fixed_size_list"],[9425,"polars::prelude::float_sorted_arg_max"],[9427,"polars::prelude::function_expr"],[9514,"polars::prelude::function_expr::BooleanFunction"],[9517,"polars::prelude::function_expr::FunctionExpr"],[9537,"polars::prelude::function_expr::cat"],[9539,"polars::prelude::function_expr::pow"],[9543,"polars::prelude::function_expr::rolling"],[9572,"polars::prelude::function_expr::rolling_by"],[9601,"polars::prelude::gather"],[9604,"polars::prelude::mode"],[9605,"polars::prelude::nan_propagating_aggregate"],[9609,"polars::prelude::null"],[9639,"polars::prelude::search_sorted"],[9645,"polars::prelude::series"],[9667,"polars::prelude::slice"],[9670,"polars::prelude::sort"],[9677,"polars::prelude::sort::arg_bottom_k"],[9678,"polars::prelude::sort::arg_sort_multiple"],[9685,"polars::prelude::sort::options"],[9698,"polars::prelude::strings"],[9752,"polars::prelude::udf"],[9758,"polars::prelude::utf8"],[9762,"polars::series"],[10163,"polars::series::arithmetic"],[10184,"polars::series::arithmetic::checked"],[10190,"polars::series::ops"],[10216,"polars::series::unstable"],[10240,"dyn_clone::sealed"],[10241,"polars_core::datatypes"],[10242,"polars_core::chunked_array"],[10243,"num_traits"],[10244,"num_traits::cast"],[10245,"polars_core::series"],[10246,"polars_error"],[10247,"core::result"],[10248,"polars_core::series::arithmetic::borrowed"],[10249,"polars_core::frame::group_by::proxy"],[10250,"polars_core::chunked_array::object"],[10251,"core::option"],[10252,"polars_arrow::array"],[10253,"alloc::boxed"],[10254,"core::iter::traits::iterator"],[10255,"polars_core::chunked_array::list::iterator"],[10256,"core::ops::function"],[10257,"core::marker"],[10258,"alloc::borrow"],[10259,"polars_core::series::unstable"],[10260,"polars_core::datatypes::dtype"],[10261,"alloc::string"],[10262,"polars_core::chunked_array::ops::sort::options"],[10263,"polars_core::series::arithmetic::borrowed::checked"],[10264,"core::slice::iter"],[10265,"core::iter::adapters::map"],[10266,"alloc::vec"],[10267,"core::iter::traits::double_ended"],[10268,"polars_arrow::offset"],[10269,"core::iter::traits::collect"],[10270,"core::fmt"],[10271,"polars_utils::iter::fallible"],[10272,"polars_arrow::bitmap::immutable"],[10273,"polars_core::chunked_array::from_iterator"],[10274,"core::convert"],[10275,"core::borrow"],[10276,"rayon::iter"],[10277,"polars_arrow::pushable"],[10278,"polars_arrow::trusted_len"],[10279,"polars_core::datatypes::any_value"],[10280,"polars_core::series::series_trait"],[10281,"polars_core::chunked_array::logical"],[10282,"polars_core::datatypes::time_unit"],[10283,"core::iter::traits::exact_size"],[10284,"polars_core::chunked_array::iterator"],[10285,"bitflags::iter"],[10286,"core::ops::range"],[10287,"polars_arrow::legacy::kernels::rolling::no_nulls"],[10288,"polars_core::datatypes::field"],[10289,"polars_core::chunked_array::ops::rolling_window"],[10290,"polars_ops::chunked_array::scatter"],[10291,"polars_utils::index"],[10292,"ahash::random_state"],[10293,"polars_utils::hashing"],[10294,"ndarray"],[10295,"ndarray::dimension::dim"],[10296,"ndarray::data_repr"],[10297,"either"],[10298,"core::any"],[10299,"polars_core::chunked_array::arithmetic::numeric"],[10300,"polars_core::chunked_array::builder::list::anonymous"],[10301,"polars_core::chunked_array::builder::list::boolean"],[10302,"polars_core::chunked_array::builder::list::primitive"],[10303,"polars_core::chunked_array::builder::list"],[10304,"polars_core::chunked_array::builder"],[10305,"polars_core::chunked_array::builder::list::binary"],[10306,"polars_core::chunked_array::builder::list::null"],[10307,"polars_core::chunked_array::builder::string"],[10308,"polars_arrow::array::binview"],[10309,"polars_core::chunked_array::builder::boolean"],[10310,"polars_core::chunked_array::builder::null"],[10311,"polars_core::chunked_array::builder::primitive"],[10312,"core::clone"],[10313,"polars_core::series::implementations::null"],[10314,"polars_core::chunked_array::collect"],[10315,"polars_core::chunked_array::float"],[10316,"polars_core::chunked_array::from_iterator_par"],[10317,"polars_arrow::array::boolean"],[10318,"polars_arrow::array::fixed_size_list"],[10319,"polars_arrow::datatypes"],[10320,"polars_arrow::bitmap::utils::iterator"],[10321,"polars_arrow::bitmap::utils::zip_validity"],[10322,"alloc::sync"],[10323,"polars_core::chunked_array::object::builder"],[10324,"polars_core::chunked_array::object::registry"],[10325,"polars_core::chunked_array::ops"],[10326,"core::hash"],[10327,"polars_arrow::legacy::array::slice"],[10328,"polars_core::chunked_array::ops::arity"],[10329,"polars_arrow::array::static_array"],[10330,"core::error"],[10331,"polars_arrow::array::primitive"],[10332,"polars_core::chunked_array::ops::search_sorted"],[10333,"polars_core::utils"],[10334,"polars_row::row"],[10335,"chrono::naive::datetime"],[10336,"chrono_tz::timezones"],[10337,"chrono::naive::time"],[10338,"polars_core::chunked_array::logical::struct_"],[10339,"polars_core::chunked_array::logical::categorical"],[10340,"polars_core::chunked_array::logical::categorical::builder"],[10341,"polars_arrow::array::static_array_collect"],[10342,"bytemuck::zeroable"],[10343,"polars_core::chunked_array::logical::categorical::revmap"],[10344,"polars_core::chunked_array::logical::categorical::merge"],[10345,"polars_arrow::datatypes::physical_type"],[10346,"polars_arrow::types"],[10347,"chrono::time_delta"],[10348,"chrono::naive::date"],[10349,"smartstring::config"],[10350,"smartstring"],[10351,"core::cmp"],[10352,"polars_time::windows::duration"],[10353,"polars_core::frame"],[10354,"polars_core::chunked_array::logical::categorical::string_cache"],[10355,"polars_error::warning"],[10356,"alloc::collections"],[10357,"polars_parquet::parquet::error"],[10358,"simdutf8::basic"],[10359,"planus::errors"],[10360,"std::io::error"],[10361,"regex::error"],[10362,"polars_core::schema"],[10363,"polars_core::series::from"],[10364,"hashbrown::set"],[10365,"polars_arrow::datatypes::schema"],[10366,"polars_core::frame::row"],[10367,"polars_core::frame::group_by"],[10368,"polars_time::group_by::dynamic"],[10369,"polars_lazy::frame"],[10370,"polars_core::frame::explode"],[10371,"polars_core::chunked_array::ndarray"],[10372,"polars_arrow::array::struct_"],[10373,"polars_arrow::record_batch"],[10374,"polars_utils::idx_vec"],[10375,"rayon::iter::plumbing"],[10376,"polars_plan::logical_plan::aexpr"],[10377,"polars_core::frame::group_by::into_groups"],[10378,"core::iter::adapters::copied"],[10379,"core::iter::adapters::zip"],[10380,"polars_utils::float"],[10381,"polars_arrow::types::native"],[10382,"polars_core::frame::group_by::aggregations::agg_list"],[10383,"polars_core::frame::group_by::aggregations"],[10384,"polars_core::frame::group_by::expr"],[10385,"polars_core::frame::row::av_buffer"],[10386,"polars_utils::arena"],[10387,"polars_plan::logical_plan::alp"],[10388,"polars_ops::frame::join::hash_join"],[10389,"polars_ops::frame::join::args"],[10390,"polars_ops::chunked_array::gather::chunked"],[10391,"polars_ops::frame"],[10392,"polars_io::csv::read::reader"],[10393,"polars_io::predicates"],[10394,"polars_io::mmap"],[10395,"polars_plan::dsl::expr"],[10396,"core::alloc"],[10397,"polars_plan::logical_plan::anonymous_scan"],[10398,"polars_lazy::scan::ndjson"],[10399,"polars_lazy::scan::anonymous_scan"],[10400,"polars_plan::dsl::expr_dyn_fn"],[10401,"polars_plan::logical_plan::visitor"],[10402,"polars_plan::dsl::function_expr"],[10403,"polars_ops::series::ops::arg_min_max"],[10404,"polars_plan::dsl::array"],[10405,"polars_plan::dsl::list"],[10406,"polars_io::ipc::ipc_stream"],[10407,"std::io"],[10408,"polars_ops::chunked_array::binary"],[10409,"polars_time::chunkedarray::string"],[10410,"polars_lazy::physical_plan::expressions"],[10411,"std::os::fd::owned"],[10412,"polars_ops::chunked_array::list"],[10413,"std::os::fd::raw"],[10414,"polars_ops::series::ops"],[10415,"polars_ops::chunked_array::strings"],[10416,"core::mem::maybe_uninit"],[10417,"polars_ops::chunked_array::strings::namespace"],[10418,"polars_io::csv::read::read_impl::batched"],[10419,"polars_io::csv::write::writer"],[10420,"polars_io::ipc::write"],[10421,"polars_io::parquet::read::reader"],[10422,"polars_io::parquet::read::read_impl"],[10423,"polars_io::parquet::write::writer"],[10424,"polars_io::parquet::write::batched_writer"],[10425,"polars_plan::dsl::binary"],[10426,"polars_plan::dsl::udf"],[10427,"polars_lazy::frame::exitable"],[10428,"hashbrown::map"],[10429,"polars_plan::dsl::cat"],[10430,"polars_ops::series::ops::round"],[10431,"polars_time::series"],[10432,"polars_time::chunkedarray::rolling_window"],[10433,"polars_time::windows::bounds"],[10434,"polars_time::windows::group_by"],[10435,"polars_time::windows::window"],[10436,"polars_io::csv::read::options"],[10437,"polars_io::csv::write::options"],[10438,"polars_io::ipc::ipc_file"],[10439,"polars_ops::chunked_array::interpolate"],[10440,"polars_io::json"],[10441,"polars_io::parquet::read::options"],[10442,"polars_io::parquet::write::options"],[10443,"polars_ops::frame::join::asof"],[10444,"polars_ops::series::ops::is_between"],[10445,"polars_lazy::scan::csv"],[10446,"polars_ops::series::ops::rank"],[10447,"polars_lazy::scan::ipc"],[10448,"polars_lazy::scan::parquet"],[10449,"polars_plan::logical_plan"],[10450,"polars_plan::dsl::arity"],[10451,"polars_plan::dsl::function_expr::boolean"],[10452,"polars_plan::dsl::function_expr::cat"],[10453,"polars_plan::dsl::function_expr::pow"],[10454,"polars_plan::dsl::functions::temporal"],[10455,"polars_plan::dsl::options"],[10456,"polars_plan::frame::opt_state"],[10457,"polars_plan::logical_plan::lit"],[10458,"polars_plan::logical_plan::options"],[10459,"polars_parquet::parquet::metadata::file_metadata"],[10460,"polars_arrow::legacy::kernels::rolling"],[10461,"polars_arrow::legacy::kernels::time"],[10462,"polars_lazy::scan::file_list_reader"],[10463,"polars_io::cloud::options"],[10464,"polars_parquet::parquet::metadata::column_order"],[10465,"polars_ops::chunked_array::binary::namespace"],[10466,"std::path"],[10467,"polars_io::shared"],[10468,"polars_ops::frame::join::cross_join"],[10469,"polars_lazy::dsl::eval"],[10470,"polars_time::chunkedarray::date"],[10471,"polars_time::chunkedarray::datetime"],[10472,"polars_time::chunkedarray::duration"],[10473,"core::default"],[10474,"polars_parquet::parquet::metadata::row_metadata"],[10475,"polars_core::series::ops"],[10476,"polars_plan::dsl::dt"],[10477,"polars_arrow::scalar"],[10478,"polars_lazy::dsl::list"],[10479,"polars_lazy::physical_plan::state"],[10480,"crossterm::command"],[10481,"polars_plan::dsl::struct_"],[10482,"polars_io::ndjson::core"],[10483,"std::fs"],[10484,"polars_plan::logical_plan::apply"],[10485,"polars_plan::dsl::function_expr::list"],[10486,"polars_plan::dsl::function_expr::strings"],[10487,"polars_plan::dsl::function_expr::array"],[10488,"polars_plan::dsl::function_expr::binary"],[10489,"polars_plan::dsl::function_expr::range"],[10490,"polars_plan::dsl::function_expr::datetime"],[10491,"polars_plan::dsl::function_expr::struct_"],[10492,"alloc::ffi::c_str"],[10493,"core::ffi::c_str"],[10494,"std::ffi::os_str"],[10495,"polars_parquet::arrow::read::statistics"],[10496,"polars_arrow::array::struct_::mutable"],[10497,"polars_arrow::array::growable::structure"],[10498,"polars_arrow::legacy::array::default_arrays"],[10499,"polars_arrow::buffer::immutable"],[10500,"polars_arrow::array::list"],[10501,"polars_core::named_from"],[10502,"polars_plan::dsl::function_expr::schema"],[10503,"polars_arrow::legacy::array"],[10504,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[10505,"polars_time::chunkedarray::time"],[10506,"polars_ops::frame::join"],[10507,"parquet_format_safe::parquet_format"],[10508,"polars_ops::series::ops::various"],[10509,"polars_arrow::array::struct_::iterator"],[10510,"polars_ops::frame::join::asof::groups"],[10511,"polars_ops::chunked_array::list::namespace"],[10512,"polars_plan::dsl::name"],[10513,"polars_io::options"],[10514,"polars_core::chunked_array::ops::aggregate"],[10515,"polars_core::chunked_array::ops::aggregate::quantile"],[10516,"polars_time::month_end"],[10517,"polars_time::month_start"],[10518,"polars_arrow::legacy::index"],[10519,"polars_ops::chunked_array::strings::split"],[10520,"core::pin"],[10521,"core::io::borrowed_buf"],[10522,"parquet_format_safe::thrift::varint::decode"],[10523,"polars_time::chunkedarray::rolling_window::dispatch"],[10524,"polars_time::round"],[10525,"polars_parquet::parquet::metadata::schema_descriptor"],[10526,"polars_core::chunked_array::ops::aggregate::var"],[10527,"polars_plan::dsl::string"],[10528,"polars_ops::series::ops::to_dummies"],[10529,"polars_time::truncate"],[10530,"std::sync::rwlock"],[10531,"polars_time::upsample"],[10532,"polars_core::hashing::vector_hasher"],[10533,"core::num::nonzero"],[10534,"alloc::collections::btree::map"],[10535,"polars_ops::chunked_array::array::namespace"],[10536,"polars_ops::chunked_array::array"],[10537,"polars_time::chunkedarray::string::patterns"],[10538,"polars_time::chunkedarray::string::infer"],[10539,"polars_arrow::legacy::array::fixed_size_list"],[10540,"polars_plan::dsl::function_expr::rolling"],[10541,"polars_plan::dsl::function_expr::rolling_by"],[10542,"polars_arrow::legacy::array::null"],[10543,"polars_arrow::bitmap::mutable"],[10544,"polars_arrow::array::utf8"],[10545,"polars_arrow::array::binary"],[10546,"polars_core::series::iterator"],[10547,"polars_core"],[10548,"polars_core::chunked_array::iterator::par"],[10549,"polars_core::chunked_array::ops::float_sorted_arg_max"],[10550,"polars_core::chunked_array::ops::gather"],[10551,"polars_core::chunked_array::ops::sort"],[10552,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[10553,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[10554,"polars_core::chunked_array::temporal"],[10555,"polars_core::chunked_array::temporal::conversion"],[10556,"polars_core::chunked_array::temporal::time"],[10557,"polars_core::chunked_array::logical::date"],[10558,"polars_core::chunked_array::logical::datetime"],[10559,"polars_core::chunked_array::logical::decimal"],[10560,"polars_core::chunked_array::logical::duration"],[10561,"polars_core::datatypes::aliases"],[10562,"polars_utils::aliases"],[10563,"polars_core::chunked_array::logical::time"],[10564,"polars_error::constants"],[10565,"polars_core::functions"],[10566,"polars_io::utils"],[10567,"polars_io::parquet::metadata"],[10568,"polars_arrow::legacy::prelude"],[10569,"polars_ops::series::ops::rolling"],[10570,"polars_parquet::parquet::write"],[10571,"polars_ops::frame::join::general"],[10572,"polars_ops::series::ops::abs"],[10573,"polars_plan::dsl::functions::selectors"],[10574,"polars_plan::dsl::functions::horizontal"],[10575,"polars_plan::dsl::functions::arity"],[10576,"polars_plan::dsl"],[10577,"polars_plan::dsl::functions::range"],[10578,"polars_plan::dsl::functions::index"],[10579,"polars_ops::chunked_array"],[10580,"polars_plan::dsl::functions::coerce"],[10581,"polars_plan::dsl::functions::syntactic_sugar"],[10582,"polars_time::base_utc_offset"],[10583,"polars_time"],[10584,"polars_ops::series::ops::clip"],[10585,"polars_io"],[10586,"polars_ops::series::ops::horizontal"],[10587,"polars_lazy::dsl::functions"],[10588,"polars_plan::dsl::functions::concat"],[10589,"polars_ops::series::ops::index"],[10590,"polars_io::csv::read::parser"],[10591,"polars_ops::series::ops::cum_agg"],[10592,"polars_ops::series::ops::diff"],[10593,"polars_time::dst_offset"],[10594,"polars_ops::series::ops::floor_divide"],[10595,"polars_ops::chunked_array::strings::concat"],[10596,"polars_ops::chunked_array::datetime::replace_time_zone"],[10597,"polars_time::date_range"],[10598,"polars_io::csv::read::utils"],[10599,"polars_ops::series::ops::is_first_distinct"],[10600,"polars_ops::series::ops::is_in"],[10601,"polars_ops::series::ops::is_last_distinct"],[10602,"polars_io::parquet::read::utils"],[10603,"polars_ops::series::ops::negate"],[10604,"polars_ops::series::ops::not"],[10605,"polars_ops::series::ops::int_range"],[10606,"polars_plan::dsl::functions::repeat"],[10607,"polars_ops::chunked_array::repeat_by"],[10608,"polars_ops::series::ops::replace"],[10609,"polars_ops::chunked_array::strings::strip"],[10610,"polars_time::chunkedarray"],[10611,"polars_io::cloud"],[10612,"polars_ops::chunked_array::mode"],[10613,"polars_ops::chunked_array::nan_propagating_aggregate"],[10614,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}```````````{{{f{c}}h}b{}}0{{{f{{l{j}}}}}d}{{{f{{l{n}}}}{f{{Ab{A`}}}}}}{{{l{c}}e}{}Ad{AfAh}}{{{f{{l{Aj}}}}{f{Al}}}}{{{l{c}}{l{c}}}{}Ad}{{{l{Aj}}{l{Aj}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{l{n}}{l{n}}}}{{{f{{l{n}}}}{f{{l{n}}}}}}{{{f{{l{c}}}}e}{}Ad{AfAh}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{l{An}}{l{An}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}{f{Bh}}}B`Ad}{{{f{{l{j}}}}{f{Bh}}}B`}{{{f{{l{An}}}}{f{Bh}}}B`}{{{f{{l{Bj}}}}{f{Bh}}}B`}{{{f{{l{Aj}}}}{f{Bh}}}B`}{{{f{{l{{Bl{c}}}}}}{f{Bh}}}B`Bn}{{{f{{l{n}}}}{f{Bh}}}B`}{{{f{{l{An}}}}}d}{{}C`}{{{f{{l{An}}}}}{{Cb{d}}}}{{{f{{l{j}}}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}{{{f{{l{Bj}}}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}{{{f{{l{j}}}}{f{Al}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}{{{f{{l{Bj}}}}{f{Al}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}64{{{f{Cn{l{c}}}}{f{{l{c}}}}}b{{Dd{}{{D`{Db}}}}}}{{{f{{l{An}}}}c}{{l{An}}}{{Dh{{Cb{d}}}{{Df{{Cb{d}}}}}}Dj}}{{{f{{l{j}}}}c}{{l{j}}}{{Dh{{Cb{B`}}}{{Df{{Cb{B`}}}}}}Dj}}{{{f{{l{c}}}}e}{{l{c}}}Ad{{Dh{Cb}{{Df{Cb}}}}Dj}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Dh{{Cb{{f{c}}}}}{{Df{{Cb{c}}}}}}Dj}}{{{f{{l{n}}}}c}{{l{n}}}{{Dh{{Cb{{f{{Ab{A`}}}}}}}{{Df{{Cb{{Dl{{Ab{A`}}}}}}}}}}Dj}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dh{{Cb{{f{Al}}}}}{{Df{{Cb{{Dl{Al}}}}}}}}Dj}}{{{f{{l{j}}}}c}{{l{j}}}{{E`{Dn}{{Df{B`}}}}}}{{{f{{l{Bj}}}}e}{{l{g}}}{}{{E`{{Cb{Dn}}}{{Df{{Cb{c}}}}}}Dj}Dd}{{{f{{l{j}}}}e}{{l{g}}}{}{{E`{{Cb{Dn}}}{{Df{{Cb{c}}}}}}Dj}Dd}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{E`{Dn}{{Df{B`}}}}}}{{{f{{l{Eb}}}}c}B`{{Dh{{f{B`}}}{{Df{B`}}}}}}{{{f{{l{Ed}}}}c}B`{{Dh{{f{B`}}}{{Df{B`}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dd{}{{E`{Cb}{{Df{{Cb{e}}}}}}}Dd}{{{l{c}}e}{{l{c}}}Ad{{Dh{}{{Df{}}}}Dj}}{{{f{{l{Aj}}}}{f{Dh}}}{{l{Aj}}}}{{{f{{l{An}}}}{f{Dh}}}{{l{An}}}}{{{f{{l{c}}}}{f{Dh}}}{{l{c}}}Ad}{{{f{{l{n}}}}{f{Dh}}}{{l{n}}}}{{{f{{l{n}}}}{f{Dh}}}{{l{c}}}Dd}{{{f{{l{An}}}}{f{Dh}}}{{l{c}}}Dd}{{{f{{l{Aj}}}}{f{Dh}}}{{l{c}}}Dd}{{{f{{l{c}}}}{f{Dh}}}{{l{e}}}AdDd}{{{f{{l{n}}}}c}{{l{n}}}{{E`{{f{{Ab{A`}}}}}{{Df{{f{{Ab{A`}}}}}}}}}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{E`{{f{Al}}}{{Df{{f{Al}}}}}}}}{{{f{Cn{l{c}}}}e}bAd{{Dh{}{{Df{}}}}Dj}}{{{f{{l{c}}}}Efg}{{l{i}}}Dd{}{{E`{}{{Df{e}}}}}Dd}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{E`{{f{Al}}{f{CnEh}}}}}}{{{f{{l{Bj}}}}{f{Dh}}}{{Bd{{l{Bj}}Bb}}}}{{{f{{l{j}}}}{f{Dh}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{n}}}}e{f{Cn{Ab{c}}}}}b{}{{Dh{{Cb{{f{{Ab{A`}}}}}}{f{c}}}{{Df{c}}}}}}{{{f{{l{c}}}}g{f{Cn{Ab{e}}}}}bAd{}{{Dh{Cb{f{e}}}{{Df{e}}}}}}{{{f{{l{j}}}}e{f{Cn{Ab{c}}}}}b{}{{Dh{{Cb{B`}}{f{c}}}{{Df{c}}}}}}{{{f{{l{Aj}}}}e{f{Cn{Ab{c}}}}}b{}{{Dh{{Cb{{f{Al}}}}{f{c}}}{{Df{c}}}}}}{{{f{{l{An}}}}e{f{Cn{Ab{c}}}}}b{}{{Dh{{Cb{d}}{f{c}}}{{Df{c}}}}}}{{{f{{l{{Bl{c}}}}}}g{f{Cn{Ab{e}}}}}bBn{}{{Dh{{Cb{{f{c}}}}{f{e}}}{{Df{e}}}}}}{{{f{{l{j}}}}c}{{l{j}}}{{Dh{B`}{{Df{B`}}}}Dj}}{{{f{{l{n}}}}c}{{l{n}}}{{Dh{{f{{Ab{A`}}}}}{{Df{{Dl{{Ab{A`}}}}}}}}Dj}}{{{f{{l{c}}}}e}{{l{c}}}Ad{{Dh{}{{Df{}}}}Dj}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Dh{{f{c}}}{{Df{c}}}}Dj}}{{{f{{l{An}}}}c}{{l{An}}}{{Dh{d}{{Df{d}}}}Dj}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dh{{f{Al}}}{{Df{{Dl{Al}}}}}}Dj}}{{{f{{l{c}}}}g}{{l{i}}}Dd{}{{E`{}{{Df{e}}}}}Dd}{{{f{{l{An}}}}Ej}{{l{El}}}}{{{f{{l{Aj}}}}Ej}{{l{El}}}}{{{f{{l{c}}}}Ej}{{l{El}}}Ad}{{{f{{l{En}}}}Ej}{{l{El}}}}{{{f{{l{n}}}}Ej}{{l{El}}}}{{{f{{l{En}}}}{f{{Ab{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}{f{{Ab{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}Ad}{{{f{{l{An}}}}{f{{Ab{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Aj}}}}{f{{Ab{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{n}}}}{f{{Ab{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Aj}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{n}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{An}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{El}}Bb}}}Bn}{{{f{{l{c}}}}}{{Bd{{l{El}}Bb}}}Ad}`{{{f{{l{Bj}}}}}{{f{{l{Bj}}}}}}{{{f{{l{n}}}}}{{f{{l{n}}}}}}{{{f{{l{Aj}}}}}{{l{n}}}}{{{f{{l{j}}}}}{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dd}{{{f{{l{c}}}}}{{f{Ef}}}Dd}{{{f{{l{Aj}}}}}{{f{{l{Aj}}}}}}0{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}DdDd{{E`{{Cb{Dn}}CbCb}{{Df{{Cb{B`}}}}}}}}{{{l{An}}{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fb}{{{f{{l{An}}}}{f{{l{An}}}}}}{{C`C`}C`}{{{f{CnC`}}C`}b}42310{{{f{C`}}}A`}035421{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00``{{{f{{l{An}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{Bj}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ef}}}{{Bd{B`Bb}}}Ad}{{{f{{l{Aj}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{En}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}e}{{l{g}}}Ad{{Dh{}{{Df{}}}}Dj}Ad}6547321{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Fd}{{{f{{l{c}}}}e}{{Bd{B`Bb}}}FdAh}{{{f{{l{c}}}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{Fh}}}}}}}Dd}{{{f{{l{c}}}}}{{f{{Fn{{Ch{Cf}}}}}}}Dd}{{{f{Cn{l{c}}}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}Dd}{{{f{{l{c}}}}}{{l{c}}}Dd}0{{{f{C`}}}C`}{{{f{c}}{f{Cne}}}b{}{}}0``{C`C`}{{{f{{l{c}}}}}{{Bd{{f{Ab}}Bb}}}Ad}{{{f{C`}}C`}d}{{{f{{l{c}}}}}{{`{G`}}}Ad}{{}{{l{c}}}Dd}{{}C`}{Fh{{f{c}}}{}}00{Fh{{f{Cnc}}}{}}00{{C`C`}C`}{{{l{c}}{l{c}}}{}Ad}{{{f{{l{c}}}}e}{}Ad{AfAh}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{l{c}}e}{}Ad{AfAh}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cn{l{c}}}}}bDd}{Fhb}00{{{f{{l{c}}}}}{{f{Ef}}}Dd};{{{f{C`}}{f{C`}}}d}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{An}}}}{{{f{{l{n}}}}{f{{Ab{A`}}}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{Al}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Ad}{{{f{{l{c}}}}e}{{l{An}}}AdAh}763548210{{{f{{l{j}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{{l{Bj}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{{l{Aj}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{Cn{l{c}}}}{f{{l{c}}}}}bAd}{{{f{CnC`}}c}b{{Gh{}{{Cd{C`}}}}}}{{{f{{l{n}}}}{f{{Ab{A`}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Ad}{{{f{{l{An}}}}d}{{Bd{{l{An}}Bb}}}}{{{f{{l{c}}}}{f{{l{An}}}}}{{Bd{{l{c}}Bb}}}Ad}{{{f{{l{{Bl{c}}}}}}{f{{l{An}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{Bj}}}}{f{{l{An}}}}}{{Bd{{l{Bj}}Bb}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{Bd{{l{An}}Bb}}}}{{{f{{l{En}}}}{f{{l{An}}}}}{{Bd{{l{En}}Bb}}}}{{{f{{l{Aj}}}}{f{{l{An}}}}}{{Bd{{l{Aj}}Bb}}}}{{{f{{l{n}}}}{f{{l{An}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{j}}}}{f{{l{An}}}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{c}}}}}{{Cb{Fh}}}Dd}`{{{f{{l{c}}}}{f{CnGj}}}{{Bd{bGl}}}Ad}{{{f{{l{{Bl{c}}}}}}{f{CnGj}}}{{Bd{bGl}}}Bn}{{{f{{l{Aj}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{j}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{n}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{An}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{Bj}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C`}}{f{CnGj}}}{{Bd{bGl}}}}0000{{{f{{l{c}}}}e}bDd{{E`{Cb}}}}{{{f{{l{j}}}}c}b{{E`{{Cb{Dn}}}}}}{{{f{{l{Bj}}}}c}b{{E`{{Cb{Dn}}}}}}{c{{l{e}}}Cf{{Dd{}{{Gn{c}}}}}}{cc{}}00{A`{{Cb{C`}}}}{A`C`}00{{{f{Al}}c}{{l{e}}}Gh{{Dd{}{{Gn{}}}}Dd}}{{{f{{l{c}}}}e}{{l{c}}}{{Dd{}{{Gn{}}}}Dd}Gh}{{{f{Al}}{Fn{{Ch{Cf}}}}}{{l{c}}}Dd}{{{f{Al}}{Fn{{Ch{Cf}}}}Ef}{{l{c}}}Dd}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}0{c{{l{An}}}{{Gh{}{{Cd{{Cb{d}}}}}}}}{c{{l{e}}}{{Gh{}{{Cd{{Gf{Fn{Cb{Hb}}}}}}}}}Ad}{e{{l{n}}}{{Hd{{Ab{A`}}}}}{{Gh{}{{Cd{c}}}}}}{e{{l{Aj}}}{{Hf{Al}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{e{{l{{Bl{c}}}}}Bn{{Gh{}{{Cd{{Cb{c}}}}}}}}{e{{l{Aj}}}{{Hd{Al}}}{{Gh{}{{Cd{c}}}}}}{e{{l{n}}}{{Hf{{Ab{A`}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{c{{l{j}}}{{Gh{}{{Cd{{Cb{B`}}}}}}}}{c{{l{An}}}{{Gh{}{{Cd{d}}}}}}{c{{l{j}}}{{Gh{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}{c{{l{e}}}{{Gh{}{{Cd{Cb}}}}}Ad}{e{{l{j}}}{{Hh{B`}}}{{Gh{}{{Cd{c}}}}}}{cC`{{Gh{}{{Cd{C`}}}}}}{{{f{Al}}e}{{l{{Bl{c}}}}}Bn{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{Al}}e}{{l{n}}}{{Hf{{Ab{A`}}}}}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{Al}}e}{{l{Aj}}}{{Hf{Al}}}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{Al}}c}{{l{e}}}{{Cj{}{{Cd{Cb}}}}}Ad}{{{f{Al}}c}{{l{An}}}{{Cj{}{{Cd{{Cb{d}}}}}}}}9=>7:<6?{e{{l{En}}}{{Hf{{Ab{A`}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{e{{l{En}}}{{Hd{{Ab{A`}}}}}{{Gh{}{{Cd{c}}}}}}{c{{l{An}}}{{Gh{}{{Cd{{Cb{d}}}}}}}}>{{{f{Al}}c}{{l{An}}}{{Cj{}{{Cd{d}}}}}}{{{f{Al}}e}{{l{{Bl{c}}}}}Bn{{Cj{}{{Cd{c}}}}}}{{{f{Al}}e}{{l{n}}}{{Hf{{Ab{A`}}}}}{{Cj{}{{Cd{c}}}}}}{{{f{Al}}e}{{l{Aj}}}{{Hf{Al}}}{{Cj{}{{Cd{c}}}}}}{{{f{Al}}c}{{l{e}}}{{Cj{}{{Cd{}}}}}Ad}`{{{f{Al}}}{{Cb{C`}}}}{c{{l{e}}}{{Hj{}{{Cd{Cb}}}}}Ad}{c{{l{An}}}{{Hj{}{{Cd{d}}}}}}{e{{l{n}}}{{Hd{{Ab{A`}}}}HlHnI`}{{Hj{}{{Cd{c}}}}}}{c{{l{An}}}{{Hj{}{{Cd{{Cb{d}}}}}}}}{c{{l{j}}}{{Hj{}{{Cd{{Cb{B`}}}}}}}}{e{{l{n}}}{{Hf{{Ab{A`}}}}HlHn}{{Hj{}{{Cd{{Cb{c}}}}}}}}{e{{l{Aj}}}{{Hf{Al}}HlHn}{{Hj{}{{Cd{{Cb{c}}}}}}}}{e{{l{Aj}}}{{Hd{Al}}HlHnI`}{{Hj{}{{Cd{c}}}}}}{{c{f{Al}}Ef}{{l{j}}}{{Hj{}{{Cd{{Cb{B`}}}}}}}}{{{f{Al}}{f{{Ab{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Al}}{f{{Ab{d}}}}}{{l{An}}}}{{{f{Al}}{f{Ab}}}{{l{c}}}Ad}{{{f{Al}}{f{{Ab{c}}}}}{{l{Aj}}}{{Hf{Al}}}}{{{f{Al}}{f{{Ab{c}}}}}{{l{n}}}{{Hf{{Ab{A`}}}}}}{{{f{Al}}{f{{Ab{Cb}}}}}{{l{c}}}Ad}{{{f{Al}}{f{{Ab{{Cb{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Al}}{f{{Ab{{Cb{d}}}}}}}{{l{An}}}}{{{f{Al}}{f{{Ab{{Cb{c}}}}}}}{{l{Aj}}}{{Hf{Al}}}}{{{f{Al}}{f{{Ab{{Cb{c}}}}}}}{{l{n}}}{{Hf{{Ab{A`}}}}}}{c{{l{An}}}{{Ib{}{{Cd{{Cb{d}}}}}}}}{c{{l{e}}}{{Ib{}{{Cd{Cb}}}}}Ad}{{{f{Al}}Fn}{{l{c}}}Ad}{{{f{Al}}Fn{Cb{Hb}}}{{l{c}}}Ad}{{{f{Al}}{f{B`}}Fh}{{l{j}}}}{{{f{Al}}{f{Al}}Fh}{{l{Aj}}}}{{{f{Al}}{f{{Ab{A`}}}}Fh}{{l{En}}}}{{{f{Al}}{f{B`}}Fh}{{l{Bj}}}}{{{f{Al}}cFh}{{l{{Bl{c}}}}}Bn}{{{f{Al}}{f{{Ab{A`}}}}Fh}{{l{n}}}}{{{f{Al}}Fh}{{l{c}}}Ad}{{{f{Al}}dFh}{{l{An}}}}{{{f{Al}}Fh}{{l{An}}}}{{{f{Al}}Fh}{{l{Bj}}}}{{{f{Al}}Fh}{{l{j}}}}4{{{f{Al}}Fh}{{l{En}}}}{{{f{Al}}Fh}{{l{n}}}}{{{f{Al}}Fh}{{l{Aj}}}}{{{f{Al}}Fh}{{l{{Bl{c}}}}}Bn}{{{f{{l{c}}}}Fh}{{l{c}}}Dd}{{{f{Al}}Fh{f{Ef}}Fh}{{l{Bj}}}}{{{f{Al}}Fh{f{Ef}}}{{l{j}}}}{{{f{{l{c}}}}Fh}CbDd}{{{f{{l{c}}}}Fh}{{Bd{IdBb}}}Ad}{{{f{{l{En}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{An}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{n}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{Aj}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{{Bl{c}}}}}}Fh}{{Bd{IdBb}}}Bn}{{{f{{l{Bj}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{j}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{c}}}}Fh}IdAd}{{{f{{l{An}}}}Fh}Id}{{{f{{l{En}}}}Fh}Id}{{{f{{l{Bj}}}}Fh}Id}{{{f{{l{j}}}}Fh}Id}{{{f{{l{Aj}}}}Fh}Id}{{{f{{l{n}}}}Fh}Id}{{{f{{l{{Bl{c}}}}}}Fh}IdBn}{{{f{{l{j}}}}Fh}{{Cb{B`}}}}{{{f{{l{Bj}}}}Fh}{{Cb{B`}}}}{{{f{{l{c}}}}}C`Dd}{{{f{{l{j}}}}}B`}{{{f{{l{Bj}}}}}B`}{{{f{{l{{Bl{c}}}}}}Fh}{{Cb{{f{If}}}}}Bn}0{{{f{C`}}}Ih}{{{f{{l{c}}}}Fh}CbDd}{{{f{{l{Bj}}}}}Fh}{{{f{{l{j}}}}}Fh}{{{f{{l{En}}}}}Fh}{{{f{{l{Aj}}}}}Fh}{{{f{{l{c}}}}dd}{{Bd{BhBb}}}Ad}{{{f{{l{j}}}}dd}{{Bd{BhBb}}}}{{{f{{l{{Bl{c}}}}}}dd}{{Bd{BhBb}}}Bn}{{{f{{l{Bj}}}}dd}{{Bd{BhBb}}}}{{{f{{l{n}}}}dd}{{Bd{BhBb}}}}{{{f{{l{An}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Aj}}}}dd}{{Bd{BhBb}}}}{{{f{{l{En}}}}dd}{{Bd{BhBb}}}}{{{f{{l{c}}}}FhdFh}BhFb}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{Al}}}{{l{An}}}}{{{f{{l{n}}}}{f{{Ab{A`}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AdAh}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Ad}503468712{{{f{{l{c}}}}}dDd}{{{f{{l{c}}}}{Cb{Fh}}}{{l{c}}}Dd}{{}Fh}00{{FhIj{Cb{Il}}}{{l{c}}}Ad}{{{f{{l{j}}}}}Ef}{{{f{{l{Bj}}}}}Ef}{{{f{CnC`}}C`}b}{{C`C`}C`}{{{f{C`}}C`}d}{ce{}{}}00{{{l{In}}}{{Jb{J`In}}}}{{{l{Jd}}Jf{Cb{Eh}}}{{Jb{JhJd}}}}{{{l{Jj}}{Cb{Fh}}Fh}{{Bd{{Jb{JlJj}}Bb}}}}{{{l{Jj}}{Cb{Fh}}Fh}{{Jb{JlJj}}}}{{{l{Jd}}Jf}{{Jb{JnJd}}}}{{{f{{l{n}}}}}}{{{f{{l{An}}}}}}{{{f{{l{Aj}}}}}}{{{f{{l{j}}}}}}{{{f{{l{En}}}}}}{{{f{{l{Bj}}}}}}{{{f{{l{c}}}}}{}Ad}{{{f{{l{{Bl{c}}}}}}}{}Bn}{C`}{{{f{{l{c}}}}}{{`{HlHnK`G`Ib}}}Ad}{{{l{c}}}B`Dd}{{{l{Jj}}}B`}{{{l{Jd}}}{{Jb{KbJd}}}}{{{f{C`}}}d}{{{f{{l{c}}}}}dDd}1{{{f{{l{c}}}}}{{l{An}}}Kd}000{{{f{{l{c}}}}}{{l{An}}}Dd}02{{{f{{l{c}}}}}IhDd}{{{f{{l{c}}}}}{{`{Kf}}}Dd}{{{f{C`}}}{{Kh{C`}}}}{{{f{C`}}}{{Kj{C`}}}}{{{f{{l{c}}}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{{Cb{{f{Hb}}}}}}}}}}}Dd}`{{{f{{l{c}}}}}CbDd}{{{f{{l{c}}}}}{{Cb{Fh}}}Dd}{{{f{{l{c}}}}}{{Kl{c}}}Dd}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{l{c}}{l{c}}}{}Ad}{{{f{{l{c}}}}}{}Ad}{{{l{c}}}{}Ad}10{{{f{{l{c}}}}}FhDd}{{{f{{l{c}}}}e}{{l{c}}}Ad{AfKn}}00{{{f{{l{c}}}}Fh}{{l{c}}}Dd}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AdAh}{{{f{{l{n}}}}{f{{Ab{A`}}}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{Al}}}{{l{An}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Ad}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}482017356{{{f{{l{An}}}}}{{Cb{d}}}}{{{f{{l{c}}}}}CbAd}{{{f{{l{c}}}}}B`Ad}{{{f{{l{Aj}}}}}B`}{{{f{{l{n}}}}}B`}{{{f{{l{An}}}}}B`}{{{f{{l{An}}}}}{{Cb{L`}}}}{{{f{{l{c}}}}}{{Cb{L`}}}Ad}{{{f{{l{Eb}}}}}{{Cb{Ij}}}}{{{f{{l{Ed}}}}}{{Cb{L`}}}}{{{f{{l{c}}}}}{{Cb{L`}}}Fb}{{{f{{l{Eb}}}}}B`}{{{f{{l{Ed}}}}}B`}{{{f{{l{c}}}}}B`Fb}<=:89;{{{f{{l{c}}}}}{{Cb{Gf}}}Ad}{{{f{Al}}{f{Ab}}}{{l{c}}}Ad}{{{f{Al}}{f{{Ab{A`}}}}FhFh}{{l{An}}}}{{{l{c}}{l{c}}}{}Ad}{{{l{c}}e}{}Ad{AfAh}}{{{f{{l{c}}}}e}{}Ad{AfAh}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}{{Bd{FhBb}}}Ad}{{{f{{l{n}}}}}{{Bd{FhBb}}}}{{{f{{l{Aj}}}}}{{Bd{FhBb}}}}{{{f{{l{c}}}}}{{f{Al}}}Dd}{{{f{Al}}{Lb{Il}}}{{l{Ld}}}}{{{f{Al}}c}{{l{In}}}{{Hf{{Ab{{Cb{Lf}}}}}}}}{{{f{Al}}c}{{l{Aj}}}{{Hf{{Ab{Eh}}}}}}{{{f{Al}}c}{{l{Lh}}}{{Hf{{Ab{{Cb{Lj}}}}}}}}{{{f{Al}}c}{{l{n}}}{{Hf{{Ab{{Cb{{Dl{{Ab{A`}}}}}}}}}}}}{{{f{Al}}c}{{l{Ll}}}{{Hf{{Ab{Ln}}}}}}{{{f{Al}}c}{{l{Ld}}}{{Hf{{Ab{{Cb{Il}}}}}}}}{{{f{Al}}c}{{l{Ll}}}{{Hf{{Ab{{Cb{Ln}}}}}}}}{{{f{Al}}c}{{l{Aj}}}{{Hf{{Ab{{Cb{{f{Al}}}}}}}}}}{{{f{Al}}{Lb{Lf}}}{{l{In}}}}{{{f{Al}}c}{{l{Eb}}}{{Hf{{Ab{Ij}}}}}}{{{f{Al}}c}{{l{An}}}{{Hf{{Ab{d}}}}}}{{{f{Al}}{Lb{M`}}}{{l{El}}}}{{{f{Al}}c}{{l{n}}}{{Hf{{Ab{{Cb{{Fn{A`}}}}}}}}}}{{{f{Al}}c}{{l{Ed}}}{{Hf{{Ab{L`}}}}}}{{{f{Al}}c}{{l{n}}}{{Hf{{Ab{{Dl{{Ab{A`}}}}}}}}}}{{{f{Al}}c}{{l{n}}}{{Hf{{Ab{{f{{Ab{A`}}}}}}}}}}{{{f{Al}}c}{{l{n}}}{{Hf{{Ab{{Fn{A`}}}}}}}}{{{f{Al}}c}{{l{Lh}}}{{Hf{{Ab{Lj}}}}}}{{{f{Al}}c}{{l{Mb}}}{{Hf{{Ab{{Cb{Md}}}}}}}}{{{f{Al}}c}{{l{Mf}}}{{Hf{{Ab{A`}}}}}}{{{f{Al}}c}{{l{Mb}}}{{Hf{{Ab{Md}}}}}}{{{f{Al}}c}{{l{Ed}}}{{Hf{{Ab{{Cb{L`}}}}}}}}{{{f{Al}}c}{{l{Aj}}}{{Hf{{Ab{{Dl{Al}}}}}}}}{{{f{Al}}c}{{l{An}}}{{Hf{{Ab{{Cb{d}}}}}}}}{{{f{Al}}e}{{l{{Bl{c}}}}}Bn{{Hf{{Ab{{Cb{c}}}}}}}}{{{f{Al}}c}{{l{In}}}{{Hf{{Ab{Lf}}}}}}{{{f{Al}}{Lb{Gb}}}{{l{Jd}}}}{{{f{Al}}c}{{l{El}}}{{Hf{{Ab{M`}}}}}}{{{f{Al}}c}{{l{Eb}}}{{Hf{{Ab{{Cb{Ij}}}}}}}}{{{f{Al}}{f{{Ab{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Al}}c}{{l{El}}}{{Hf{{Ab{{Cb{M`}}}}}}}}{{{f{Al}}c}{{l{Jd}}}{{Hf{{Ab{Gb}}}}}}{{{f{Al}}c}{{l{Jd}}}{{Hf{{Ab{{Cb{Gb}}}}}}}}{{{f{Al}}c}{{l{Aj}}}{{Hf{{Ab{{Cb{{Dl{Al}}}}}}}}}}{{{f{Al}}c}{{l{n}}}{{Hf{{Ab{{Cb{{f{{Ab{A`}}}}}}}}}}}}{{{f{Al}}c}{{l{Aj}}}{{Hf{{Ab{{f{Al}}}}}}}}{{{f{Al}}c}{{l{Mf}}}{{Hf{{Ab{{Cb{A`}}}}}}}}{{{f{Al}}c}{{l{Aj}}}{{Hf{{Ab{{Cb{Eh}}}}}}}}{{{f{Al}}c}{{l{Ld}}}{{Hf{{Ab{Il}}}}}}{{{f{Al}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{n}}}}FhFh}{{l{n}}}}{{{f{{l{En}}}}FhFh}{{l{En}}}}{{{f{{l{Aj}}}}FhFh}{{l{Aj}}}}{{{f{{l{j}}}}FhFh}{{l{j}}}}{{{f{{l{Bj}}}}FhFh}{{l{Bj}}}}{{{f{{l{An}}}}FhFh}{{l{An}}}}{{{f{{l{c}}}}FhFh}{{l{c}}}Ad}{{{f{{l{{Bl{c}}}}}}FhFh}{{l{{Bl{c}}}}}Bn}{{{f{Al}}{Fn{c}}}{{l{{Bl{c}}}}}Bn}{{{f{Al}}{Fn{c}}Hb}{{l{{Bl{c}}}}}Bn}{{{f{Al}}Fn}{{l{c}}}Ad}{{{f{{l{c}}}}}{{l{c}}}Kd}{{{f{{l{An}}}}}}{{{l{An}}}}{C`C`}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AdAh}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Ad}{{{f{{l{n}}}}{f{{Ab{A`}}}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{Al}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{An}}}}57614{{{f{{l{Bj}}}}{f{{l{Bj}}}}}}413{{{f{{l{c}}}}}FhDd}`{{{f{{l{Aj}}}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{{l{Bj}}}}}{{Bd{{Gd{Gb}}Bb}}}}`{{{f{{l{j}}}}}{{`{{Mh{}{{Cd{{Cb{B`}}}}}}}}}}{{{f{{l{Aj}}}}}{{`{{Mh{}{{Cd{{Cb{{f{Al}}}}}}}}}}}}{{{f{{l{Aj}}}}}{{`{Mj}}}}{{{f{Cn{l{j}}}}}{{`{Mj}}}}{{{f{{l{c}}}}}B`Ad}{{{f{Cn{l{c}}}}}bDd}{{{f{{l{c}}}}L`Ml}{{Bd{{Cb{L`}}Bb}}}Fb}{{{f{{l{Eb}}}}L`Ml}{{Bd{{Cb{Ij}}Bb}}}}{{{f{{l{Ed}}}}L`Ml}{{Bd{{Cb{L`}}Bb}}}}{{{f{{l{c}}}}L`Ml}{{Bd{B`Bb}}}Fb}{{{f{{l{Ed}}}}L`Ml}{{Bd{B`Bb}}}}{{{f{{l{Eb}}}}L`Ml}{{Bd{B`Bb}}}}{{{f{Al}}FhL`}{{Bd{{l{An}}Bb}}}}{{{f{Al}}FhL`L`}{{Bd{{l{c}}Bb}}}Ad}{{{f{Al}}Fh}{{l{c}}}Ad}{{{f{Al}}FhL`L`}{{l{c}}}Ad}{{{f{{l{c}}}}}{{l{c}}}Dd}{{{f{{l{c}}}}}{{f{Mn}}}Dd}{{{f{{l{Ed}}}}}B`}{{{f{{l{Mf}}}}}B`}{{{f{{l{Eb}}}}}B`}{{{f{{l{Jd}}}}}B`}{{{f{{l{In}}}}}B`}{{{f{{l{Ld}}}}}B`}{{{f{{l{Ll}}}}}B`}{{{f{{l{Mb}}}}}B`}{{{f{{l{Lh}}}}}B`}{{{f{{l{El}}}}}B`}{{{f{{l{j}}}}}B`}350:4761829{{{f{{l{c}}}}e}{}Ad{AfAh}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{l{c}}{l{c}}}{}Ad}{{{l{c}}e}{}Ad{AfAh}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{CnC`}}C`}b}{{{f{Cn{l{c}}}}{f{Al}}}bDd}{{{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{En}}}}}{{l{En}}}}{{{f{{l{{Bl{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{n}}}}}{{l{n}}}}{{{f{{l{c}}}}}{{l{c}}}Ad}{{{f{{l{c}}}}{f{Dh}}N`}{{Bd{B`Bb}}}Ad}{{{f{{l{c}}}}Fhe}{{Bd{{l{c}}Bb}}}Kd{{E`{{f{Cn{l{c}}}}}{{Df{Cb}}}}}}{{{f{{l{c}}}}L`dd{Cb{Il}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{{l{c}}}}Fhdd{Cb{Il}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{{l{An}}}}{f{{Ab{M`}}}}c}{{Bd{B`Bb}}}{{Gh{}{{Cd{{Cb{d}}}}}}}}{{{l{c}}{f{{Ab{M`}}}}e}{{Bd{B`Bb}}}Nb{{Gh{}{{Cd{Cb}}}}}}{{{f{{l{Aj}}}}{f{{Ab{M`}}}}c}{{Bd{B`Bb}}}{{Gh{}{{Cd{{Cb{{f{Al}}}}}}}}}}{{{f{{l{An}}}}c{Cb{d}}}{{Bd{{l{An}}Bb}}}{{Gh{}{{Cd{M`}}}}}}{{{f{{l{c}}}}eCb}{{Bd{{l{c}}Bb}}}Ad{{Gh{}{{Cd{M`}}}}}}{{{f{{l{n}}}}c{Cb{{f{{Ab{A`}}}}}}}{{Bd{{l{n}}Bb}}}{{Gh{}{{Cd{M`}}}}}}{{{f{{l{Aj}}}}c{Cb{{f{Al}}}}}{{Bd{{l{Aj}}Bb}}}{{Gh{}{{Cd{M`}}}}}}{{{f{{l{Aj}}}}ce}{{Bd{{l{Aj}}Bb}}}{{Gh{}{{Cd{M`}}}}}{{Dh{{Cb{{f{Al}}}}}{{Df{{Cb{Eh}}}}}}}}{{{f{{l{An}}}}ce}{{Bd{{l{An}}Bb}}}{{Gh{}{{Cd{M`}}}}}{{Dh{{Cb{d}}}{{Df{{Cb{d}}}}}}}}{{{f{{l{c}}}}eg}{{Bd{{l{c}}Bb}}}Ad{{Gh{}{{Cd{M`}}}}}{{Dh{Cb}{{Df{Cb}}}}}}{{{f{{l{n}}}}ce}{{Bd{{l{n}}Bb}}}{{Gh{}{{Cd{M`}}}}}{{Dh{{Cb{{f{{Ab{A`}}}}}}}{{Df{{Cb{{Fn{A`}}}}}}}}}}{{{f{{l{Aj}}}}{f{{l{An}}}}{Cb{{f{Al}}}}}{{Bd{{l{Aj}}Bb}}}}{{{f{{l{An}}}}{f{{l{An}}}}{Cb{d}}}{{Bd{{l{An}}Bb}}}}{{{f{{l{c}}}}{f{{l{An}}}}Cb}{{Bd{{l{c}}Bb}}}Ad}{{{f{{l{n}}}}{f{{l{An}}}}{Cb{{f{{Ab{A`}}}}}}}{{Bd{{l{n}}Bb}}}}{{{f{CnC`}}C`d}b}{{{f{Cn{l{j}}}}}b}{{{f{Cn{l{j}}}}Ef}b}{{{f{Cn{l{c}}}}M`}bDd}{{{f{Cn{l{c}}}}Ih}bDd}{{{f{CnC`}}Ih}b}{{{f{{l{j}}}}Gb}{{l{j}}}}{{{f{{l{n}}}}Gb}{{l{n}}}}{{{f{{l{Bj}}}}Gb}{{l{Bj}}}}{{{f{{l{Aj}}}}Gb}{{l{Aj}}}}{{{f{{l{{Bl{c}}}}}}Gb}{{l{{Bl{c}}}}}Bn}{{{f{{l{En}}}}Gb}{{l{En}}}}{{{f{{l{c}}}}Gb}{{l{c}}}Ad}{{{f{{l{An}}}}Gb}{{l{An}}}}{{{f{{l{n}}}}Gb{Cb{{f{{Ab{A`}}}}}}}{{l{n}}}}{{{f{{l{c}}}}GbCb}{{l{c}}}Ad}{{{f{{l{{Bl{c}}}}}}Gb{Cb{{Bl{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{j}}}}Gb{Cb{{f{B`}}}}}{{l{j}}}}{{{f{{l{Bj}}}}Gb{Cb{{f{B`}}}}}{{l{Bj}}}}{{{f{{l{An}}}}Gb{Cb{d}}}{{l{An}}}}{{{f{{l{En}}}}Gb{Cb{{f{{Ab{A`}}}}}}}{{l{En}}}}{{{f{{l{Aj}}}}Gb{Cb{{f{Al}}}}}{{l{Aj}}}}{{{f{Cn{l{c}}}}}bDd}{{{f{{l{c}}}}GbFh}{{l{c}}}Dd}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{c}}}}d}{{l{c}}}Ad}{{{f{{l{n}}}}d}{{l{n}}}}{{{f{{l{En}}}}d}{{l{En}}}}{{{f{{l{Aj}}}}d}{{l{Aj}}}}{{{f{{l{n}}}}Ej}{{l{n}}}}{{{f{{l{Aj}}}}Ej}{{l{Aj}}}}{{{f{{l{c}}}}Ej}{{l{c}}}Ad}{{{f{{l{En}}}}Ej}{{l{En}}}}{{{f{{l{An}}}}Ej}{{l{An}}}}{{{f{{l{c}}}}A`}{{Cb{L`}}}Ad}{{{f{{l{Ed}}}}A`}B`}{{{f{{l{Eb}}}}A`}B`}{{{f{{l{c}}}}A`}B`Fb}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{f{{l{c}}}}e}{}Ad{AfAh}}{{{l{c}}e}{}Ad{AfAh}}{{{l{c}}{l{c}}}{}Ad}{{C`C`}C`}{{{f{CnC`}}C`}b}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{An}}}}}{{Cb{M`}}}}{{{f{{l{c}}}}}CbAd}{{{f{{l{An}}}}}B`}{{{f{{l{n}}}}}B`}{{{f{{l{Aj}}}}}B`}{{{f{{l{c}}}}}B`Ad}8{{{f{{l{c}}}}{Cb{Fh}}}{{l{c}}}Dd}{{{f{{l{c}}}}{f{{l{El}}}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{{l{c}}}}{f{e}}}{{Bd{{l{c}}Bb}}}Dd{{Hf{{Ab{M`}}}}Nd}}{{{f{{l{c}}}}{f{{Ab{Nf}}}}Ih}{{l{c}}}Dd}{{{f{{l{c}}}}{f{{Ab{Nf}}}}}{{l{c}}}Dd}{{{f{{l{n}}}}{f{{l{El}}}}}{{l{n}}}}{{{f{{l{n}}}}{f{c}}}{{l{n}}}{{Hf{{Ab{M`}}}}Nd}}{{{f{{l{Aj}}}}{f{c}}}{{l{Aj}}}{{Hf{{Ab{M`}}}}Nd}}{{{f{{l{Aj}}}}{f{{l{El}}}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dd{}{{Nh{Db}}}}Dd}{{Hf{{Ab{M`}}}}Nd}}{{{f{{l{c}}}}{f{{l{El}}}}}{{l{c}}}{{Dd{}{{Nh{Db}}}}Dd}}`{{{f{{l{c}}}}dNj}{{Fn{{Fn{Nl}}}}}Dd}{{{f{{l{c}}}}}{{l{c}}}Kd}{{{f{{l{Aj}}}}Fh}{{Bd{B`Bb}}}}{{{f{Cn{l{j}}}}Ef}b}{{{f{Cn{l{Bj}}}}Ef}b}{{{f{{l{c}}}}}{{Bd{{Od{{Nn{f}}{Ob{{O`{Fh}}}}}}Bb}}}Ad}{{{f{{l{j}}}}}{{Bd{{Od{Of{Ob{{O`{Fh}}}}}}Bb}}}}{{{f{c}}}e{}{}}0{{{f{{l{n}}}}}{{l{Aj}}}}{{{f{{l{c}}}}}{{Fn{Cb}}}Ad}{{{f{{l{c}}}}}{{Oh{Fn{Fn{Cb}}}}}Ad}{{{f{CnC`}}C`}b}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}{{{l{c}}{l{c}}}{}Ad}{{{f{{l{c}}}}}{}Ad}{{{l{c}}}{}Ad}10{{{f{{l{j}}}}c}{{Bd{{l{j}}Bb}}}{{E`{Dn}{{Df{{Bd{B`Bb}}}}}}}}{{{f{{l{j}}}}e}{{Bd{{l{g}}Bb}}}{}{{E`{{Cb{Dn}}}{{Df{{Bd{{Cb{c}}Bb}}}}}}Dj}Dd}{{{f{{l{Bj}}}}e}{{Bd{{l{g}}Bb}}}{}{{E`{{Cb{Dn}}}{{Df{{Bd{{Cb{c}}Bb}}}}}}Dj}Dd}{{{f{{l{Bj}}}}c}{{Bd{{l{Bj}}Bb}}}{{E`{Dn}{{Df{{Bd{B`Bb}}}}}}}}{{{f{{l{Bj}}}}c}{{Bd{{l{j}}Bb}}}{{E`{Dn}{{Df{{Bd{B`Bb}}}}}}}}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{Cb}{{Df{{Bd{{Cb{e}}g}}}}}}Dj}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{}{{Df{{Bd{eg}}}}}}}Dd}{c{{Bd{e}}}{}{}}00{{{f{Al}}g}{{Bd{{l{i}}e}}}Cf{}{{Gh{}{{Cd{{Bd{ce}}}}}}}{{Dd{}{{Gn{c}}}}Dd}}111{{{f{{l{j}}}}{f{{l{c}}}}e}{{Bd{{l{j}}Bb}}}Dd{{E`{{Cb{Dn}}Cb}{{Df{{Bd{{Cb{B`}}Bb}}}}}}}}{{{f{c}}}Oj{}}00{{C`C`}C`}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{Aj}}}}}{{Bd{{l{Aj}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Ad}{{{f{{l{n}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{An}}}}}{{Bd{{l{An}}Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{{f{{l{c}}}}Bb}}}Dd}{{{f{Cn{l{c}}}}}bDd}{{{f{{l{c}}}}Fh}{}Dd}{{{f{{l{c}}}}A`}{{Cb{L`}}}Ad}{{{f{{l{c}}}}A`}B`Fb}{{{f{{l{Eb}}}}A`}B`}{{{f{{l{Ed}}}}A`}B`}{{{f{{l{Mb}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ld}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Lh}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{An}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{In}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Aj}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ed}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}Bn}{{{f{{l{En}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ll}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ld}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Lh}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{En}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ll}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{An}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Mb}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ed}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Aj}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}Bn}{{{f{{l{In}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}{ce{}{}}00{{{f{{l{Bj}}}}}Fh}{{{f{Al}}c}{{l{e}}}Cf{{Dd{}{{Gn{c}}}}Dd}}{{{f{{l{c}}}}{Fn{{Ch{Cf}}}}}{{l{c}}}Dd}{{{l{c}}{f{Al}}}{{l{c}}}Dd}{{{f{{Ab{Ol}}}}e}c{}{{On{{f{{l{El}}}}}{{Df{c}}}}}}{{{f{{l{c}}}}Ih}{{l{c}}}Dd}{{{l{c}}}{}Ad}{{{f{{l{c}}}}}{}Ad}{{{l{c}}{l{c}}}{}Ad}{{{f{{l{c}}}}{f{{l{c}}}}}{}Ad}23012323012323013223013232012323{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Dd{{E`{{Cb{Dn}}Cb}{{Df{{Cb{B`}}}}}}}}{{{f{{l{Bj}}}}{f{{l{c}}}}e}{{l{Bj}}}Dd{{E`{{Cb{Dn}}Cb}{{Df{{Cb{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{An}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Dd}````{{{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}}e{}{}{}}{{{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}c}e{}{}{}}{{c{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}}e{}{}{}}{{{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}}g{}{}{}}{{{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}c}g{}{}{}}{{c{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}}g{}{}{}}{{{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{CnA@h}}{f{Cf}}}b}{{{f{CnA@h}}}b}{{{f{CnA@j}}}b}{{{f{CnA@l}}c}b{{Cj{}{{Cd{{Cb{d}}}}}}Ib}}{{{f{Cn{A@n{c}}}}e}bAd{{Cj{}{{Cd{Cb}}}}Ib}}{{{f{Cn{A@n{c}}}}e}bAd{{Cj{}{{Cd{}}}}Ib}}{{{f{CnAA`}}}b}{{{f{CnAAb}}}b}65{{{f{CnAAd}}}b}{{{f{CnAAf}}}b}{{{f{CnA@l}}}b}{{{f{CnAAh}}}b}{{{f{Cn{A@n{c}}}}}bAd}{{{f{Cn{AAj{c}}}}}b{AAlNd}}{{{f{CnAAn}}}b}{{{f{CnAB`}}}b}{{{f{Cn{ABb{c}}}}}bAd}{{{f{CnA@h}}{Cb{{f{Cf}}}}}b}{{{f{CnA@h}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{CnAA`}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{Cn{A@n{c}}}}{Cb{{f{Ab}}}}}bAd}{{{f{Cn{AAj{c}}}}{Cb{e}}}b{AAlNd}{{Hf{c}}}}{{{f{CnAAb}}{Cb{c}}}b{}}{{{f{CnAA`}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnA@h}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnA@j}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAd}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnA@l}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAh}}{f{B`}}}{{Bd{bBb}}}}{{{f{Cn{A@n{c}}}}{f{B`}}}{{Bd{bBb}}}Ad}{{{f{Cn{A@n{c}}}}{f{Ab}}}bAd}{{{f{CnAAd}}c}b{{Cj{}{{Cd{{Cb{{f{Al}}}}}}}}Ib}}{{{f{CnAAf}}c}b{{Cj{}{{Cd{{Cb{{f{{Ab{A`}}}}}}}}}}Ib}}{{{f{CnAAb}}c}b{}}{{{f{Cn{AAj{c}}}}e}b{AAlNd}{{Hf{c}}}}{{{f{CnAAn}}d}b}{{{f{Cn{ABb{c}}}}}bAd}{{{f{CnAAd}}c}b{{Cj{}{{Cd{{f{Al}}}}}}}}{{{f{CnAAf}}c}b{{Cj{}{{Cd{{f{{Ab{A`}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Cnc}}}{{f{Cne}}}{}{}}0000000000`{{{f{{AAj{c}}}}}{{AAj{c}}}{AAlNd}}{{{f{AAn}}}AAn}{{{f{AB`}}}AB`}{{{f{{ABb{c}}}}}{{ABb{c}}}{ABdAd}}{{{f{c}}{f{Cne}}}b{}{}}000{{}A@h}{{}A@j}{Fh{{f{c}}}{}}0000000000{Fh{{f{Cnc}}}{}}0000000000{Fhb}0000000000{{{f{AAd}}}d}{{{f{AAf}}}d}{{{f{A@l}}}d}{{{f{{A@n{c}}}}}dAd}{{{f{AA`}}}d}{{{f{AAd}}}{{f{Mn}}}}{{{f{AAf}}}{{f{Mn}}}}{{{f{A@l}}}{{f{Mn}}}}{{{f{{A@n{c}}}}}{{f{Mn}}}Ad}{{{f{AA`}}}{{f{Mn}}}}{AAb{{l{c}}}Dd}{{{f{CnA@h}}}{{l{j}}}}{{{f{CnA@j}}}{{l{j}}}}{{{f{CnAAh}}}{{l{j}}}}{{{f{CnAA`}}}{{l{j}}}}{{{AAj{Al}}}{{l{Aj}}}}{{{AAj{{Ab{A`}}}}}{{l{n}}}}{AAn{{l{An}}}}{AB`ABf}{{{ABb{c}}}{{l{c}}}Ad}`{cc{}}0000000000{{{f{Al}}e}ABh{}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{Al}}e}ABh{}{{Cj{}{{Cd{c}}}}}}{{{f{Al}}{f{{Ab{c}}}}}ABh{}}{{{f{Al}}{f{{Ab{{Cb{c}}}}}}}ABh{}}{{{f{Ef}}FhFh{f{Al}}}{{Bd{{Ch{AA`}}Bb}}}}{{}Fh}0000000000{{{f{CnAAd}}}{{Ch{Cf}}}}{{{f{CnAAf}}}{{Ch{Cf}}}}{{{f{CnA@l}}}{{Ch{Cf}}}}{{{f{Cn{A@n{c}}}}}{{Ch{Cf}}}Ad}{{{f{CnAA`}}}{{Ch{Cf}}}}{ce{}{}}0000000000`{{{f{Al}}Fh{Cb{Ef}}}A@h}{{{f{Al}}Fh{Cb{Ef}}}A@j}{{{f{Al}}FhFh}AAd}{{{f{Al}}FhFh}AAf}{{{f{Al}}FhFh}A@l}{{{f{Al}}Fh}AAh}{{{f{Al}}FhFhEf}{{A@n{c}}}Ad}{{{f{Al}}Fh}{{AAj{c}}}{AAlNd}}{{{f{Al}}Fh}AAn}{{{f{Al}}Fh}AB`}{{{f{Al}}Fh}{{ABb{c}}}Ad}{{{f{Al}}FhFhEfEf}{{A@n{c}}}Ad}{{{f{CnAAb}}}b}{{{f{CnAAn}}}b}{{{f{CnAB`}}}b}{{{f{Cn{ABb{c}}}}}bAd}{{{f{c}}}e{}{}}000{c{{Bd{e}}}{}{}}000000000000000000000{{{f{c}}}Oj{}}0000000000{ce{}{}}0000000000````````{{{f{CnAA`}}}b}{{{f{CnAA`}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{CnAA`}}{f{B`}}}{{Bd{bBb}}}}`{{{f{AA`}}}d}{{{f{AA`}}}{{f{Mn}}}}{{{f{CnAA`}}}{{l{j}}}}{{{f{Ef}}FhFh{f{Al}}}{{Bd{{Ch{AA`}}Bb}}}}{{{f{CnAA`}}}{{Ch{Cf}}}}``{{ABj{f{Al}}}{{l{c}}}Dd}{{ABl{f{{l{c}}}}}{{l{c}}}Dd}10{{ABl{f{Al}}Ef}{{l{c}}}Dd}0{{ABj{f{Al}}}{{Bd{{l{c}}e}}}Dd{}}{{ABl{f{{l{c}}}}}{{Bd{{l{c}}e}}}Dd{}}10{{ABl{f{Al}}Ef}{{Bd{{l{c}}e}}}Dd{}}0`{ABnABn}``{{AC`{f{Al}}Ef}e{}{{ACb{c}}}}{{e{f{Al}}Ef}ACb{}{{Hj{}{{Cd{c}}}}}}`````{{{f{c}}}{{f{e}}}{}{}}000{{{f{Cnc}}}{{f{Cne}}}{}{}}000{Fh{{f{c}}}{}}000{Fh{{f{Cnc}}}{}}000{Fhb}000{cc{}}000{{}Fh}000{ce{}{}}0000000{{{f{ACd}}}ACf}{{{f{ACh}}Ef}ACj}{{{f{CnACf}}}Cb}{{{f{CnACj}}}Cb}{{{f{CnACl}}}Cb}{{{f{Cn{ACn{c}}}}}CbCj}32{{{f{Cn{ACn{c}}}}}CbG`}`{{{f{ACf}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{ACj}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{{ACn{c}}}}}{{Gf{Fh{Cb{Fh}}}}}Cj}{c{{Bd{e}}}{}{}}0000000{{{f{c}}}Oj{}}000<<<<``````{{{f{c}}h}b{}}{e{{AD`{c}}}Bn{{Gh{}{{Cd{{Cb{{f{c}}}}}}}}}}{e{{AD`{c}}}Bn{{Gh{}{{Cd{{f{c}}}}}}}}{{ADbe}g{}{{Gh{}{{Cd{c}}}}}{}}0{{{f{If}}}{{f{ADd}}}}{{{f{{AD`{c}}}}}{{f{ADd}}}Bn}{{{f{Cn{AD`{c}}}}}{{f{CnADd}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}`{{{f{{AD`{c}}}}}{{AD`{c}}}{ABdBn}}{{{f{c}}{f{Cne}}}b{}{}}{{{f{{AD`{c}}}}}{{f{ADb}}}Bn}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{{f{If}}}}{f{{f{If}}}}}d}{{{f{If}}{f{If}}}d}{{{f{{AD`{c}}}}{f{CnGj}}}{{Bd{bGl}}}{ADfBn}}{cc{}}{{FhADb}{{AD`{c}}}Bn}{{{f{{AD`{c}}}}Fh}{{Cb{{f{c}}}}}Bn}{{}ADb}{{{f{Hb}}{f{{AD`{c}}}}{f{{AD`{c}}}}}{{AD`{c}}}Bn}{{ADb{f{Hb}}}{{AD`{c}}}Bn}{{{f{Hb}}{f{{AD`{c}}}}}{{AD`{c}}}Bn}0{{}Fh}{ce{}{}}{{{f{{AD`{c}}}}}{}Bn}{{{f{{AD`{c}}}}Fh}dBn}{{{f{c}}Fh}d{}}1{{{f{{AD`{c}}}}}{{ADj{ADh}}}Bn}{{{f{{AD`{c}}}}}{{ADj{{f{c}}{Ff{c}}ADh}}}Bn}{{{f{{AD`{c}}}}}FhBn}0`{{{f{Cn{AD`{c}}}}{Cb{Hb}}}bBn}{{{f{Cn{AD`{c}}}}FhFh}bBn}{{{f{c}}FhFh}e{}{}}01{{{f{If}}}{{Ch{If}}}}{{{f{{AD`{c}}}}}{{Ch{Cf}}}Bn}{{{f{c}}}e{}{}}{g{{Bd{{AD`{c}}e}}}Bn{}{{Gh{}{{Cd{{Bd{{Cb{{f{c}}}}e}}}}}}}}{g{{Bd{{AD`{c}}e}}}Bn{}{{Gh{}{{Cd{{Bd{{f{c}}e}}}}}}}}{{ADbg}{{Bd{ie}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}{}}0{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}{{{f{If}}}{{f{Al}}}}{{}{{f{Al}}}}{{{f{{AD`{c}}}}}{{Cb{{f{Hb}}}}}Bn}{{{f{{AD`{c}}}}Fh}{{f{c}}}Bn}0{{{f{{AD`{c}}}}Fh}{}Bn}{{{f{{AD`{c}}}}}{{f{{ADl{{Fn{c}}}}}}}Bn}{{{f{{AD`{c}}}}}{}Bn}{{{f{{AD`{c}}}}}{{Ff{c}}}Bn}{ce{}{}}{{{f{{AD`{c}}}}{Cb{Hb}}}{{Ch{Cf}}}Bn}{{{AD`{c}}{Cb{Hb}}}{{AD`{c}}}Bn}0`{{{f{Cn{ADn{c}}}}}bBn}0{{{f{Cn{ADn{c}}}}{Cb{c}}}bBn}{{{f{Cn{ADn{c}}}}c}bBn}{{{f{Cn{ADn{c}}}}{f{ADd}}}bBn}{{{f{Cn{ADn{c}}}}{f{ADd}}}{{Bd{bBb}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{}{{ADn{c}}}Bn}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{ADn{c}}}{{l{{Bl{c}}}}}Bn}{cc{}}{{}Fh}{ce{}{}}{{{f{Al}}Fh}{{ADn{c}}}Bn}{{{f{Cn{ADn{c}}}}}B`Bn}{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}4````{{{f{CnAE`}}}b}{{{f{CnAE`}}{Cb{{f{ADd}}}}}b}{{{f{CnAE`}}{f{ADd}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}`?>={{{f{AEb}}{f{CnGj}}}{{Bd{bGl}}}}<{{{f{Al}}Fh}{{Ch{AE`}}}}{{}{{ADl{Dh}}}}{{}ADb}>={{}d}`{{{Ch{Dh}}{ADl{Dh}}ADb}b}{{{f{CnAE`}}}B`}==<{ce{}{}}````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AEf{}{{AEd{c}}}}}}g}{{AEf{}{{AEd{c}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{c}}}}}}Dj}}{{{f{AEh}}{f{Dh}}}AEh}{{{f{AEh}}{f{Dh}}}{{l{c}}}Dd}{{{f{{AEf{}{{AEd{c}}}}}}i{f{Cn{Ab{g}}}}}b{}{}{}{{Dh{{Cb{e}}{f{g}}}{{Df{g}}}}}}{{{f{{AEf{}{{AEd{c}}}}}}g}{{AEf{}{{AEd{c}}}}}{}{}{{Dh{e}{{Df{c}}}}Dj}}{{{f{AEj}}Ej}{{l{El}}}}{{{f{AEj}}{f{{Ab{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{AEl}}}{{Bd{{l{El}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00{{{f{AEn}}{f{Ef}}}{{Bd{B`Bb}}}}0{{{f{Ej}}}Ej}{{{f{F`}}}F`}{{{f{AF`}}}AF`}{{{f{c}}{f{Cne}}}b{}{}}00{{}Ej}{{}F`}{Fh{{f{c}}}{}}00{Fh{{f{Cnc}}}{}}00``{Fhb}00{{{f{Ej}}{f{Ej}}}d}{{{f{F`}}{f{F`}}}d}{{{f{AF`}}{f{AF`}}}d}{{{f{{AFb{}{{Cd{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AFd}}}{{Bd{B`Bb}}}}{{{f{AFd}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}`{{{f{AFf}}c}{{Bd{AFfBb}}}{}}{{{f{AFh}}{f{{l{An}}}}}{{Bd{{l{c}}Bb}}}Dd}`{{{f{Ej}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{F`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AF`}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{F`}}}Ej}{{{f{Ej}}}F`}22`{{{f{Al}}cFh}AFj{}}{{{f{Al}}Fh}AFl}`{{{f{AFn}}Fh}{{Bd{IdBb}}}}{{{f{AFn}}Fh}Id}??{{{f{Ej}}{f{Cnc}}}bAG`}{{{f{F`}}{f{Cnc}}}bAG`}{{{f{AF`}}{f{Cnc}}}bAG`}{{}Fh}00{ce{}{}}00{{{f{AGb}}}{{Bd{{l{An}}Bb}}}}{{{f{AGd}}}{{Bd{{l{An}}Bb}}}}{{{f{{AFb{}{{Cd{c}}}}}}e}c{}{}}0``{{{f{AGf}}}{{Cb{c}}}{}}{{{f{AGf}}}{{Cb{L`}}}}{{{f{AGh}}}{{Cb{c}}}{}}2{{{f{AGf}}}{{Cb{{Gf{cc}}}}}{}}``{{{f{AEl}}}{{Bd{FhBb}}}}{{}Ej}{{}F`}{{{f{AGj}}FhFh}{{l{c}}}Dd}88``{{{f{AFd}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{AGh}}L`Ml}{{Bd{{Cb{c}}Bb}}}{}}{{{f{AGl}}}B`}0{{{f{AGn}}}AGn}{{{f{AH`}}{f{Dh}}N`}{{Bd{B`Bb}}}}{{{f{AHb}}c{Cb{e}}}{{Bd{AHbBb}}}{{Gh{}{{Cd{M`}}}}}{}}{{{f{AHb}}ci}{{Bd{AHbBb}}}{{Gh{}{{Cd{M`}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{g}}}}}}}}`{{{f{AHb}}{f{{l{An}}}}{Cb{c}}}{{Bd{AHbBb}}}{}}{{{f{AHd}}Gb}{{l{c}}}Dd}{{{f{AHf}}Gbc}{{l{e}}}{}Dd}{{{f{AHh}}FhFh}AHh}0`{{{f{AEj}}d}{{l{c}}}Dd}{{{f{AEj}}Ej}{{l{c}}}Dd}{{{f{AHj}}A`}{{Cb{L`}}}}{{{f{AGf}}}{{Cb{c}}}{}}{{{f{AHl}}{f{c}}}{{Bd{AHlBb}}}Nd}{{{f{AHn}}{f{c}}}AHnNd}{{{f{AI`}}}{{Fn{{f{{Ab{A`}}}}}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}Oj{}}00{{{f{AEl}}}{{Bd{AElBb}}}}8{ce{}{}}00{{Ejd}Ej}{{F`d}F`}101010{{F`c}F`{{Gh{}{{Cd{d}}}}}}{EjEj}{F`F`}`{{{f{AIb}}{f{{l{An}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Dd}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DdDd{{Dh{ff}{{Df{}}}}}{{Dh{f}{{Df{}}}}}{{Dh{f}{{Df{}}}}}Dd}{{{l{c}}{l{e}}gik}{{l{m}}}DdDd{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DdDd{{AId{CbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}g}bDdDd{{E`{CbCb}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDd{}{{E`{}{{Df{g}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Al}}}{{l{k}}}DdDd{CfAIf}{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Al}}}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DdDdCf{{E`{}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDd{}{}{{E`{CbCb}{{Df{{Bd{{Cb{g}}i}}}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DdDdDd{{AIh{CbCbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDdCfAIj{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Al}}}{{Bd{{l{m}}i}}}DdDdCfAIj{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DdDdAIj{{E`{ff}{{Df{{Bd{{Ch{Cf}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DdDdDd{}{}{{E`{CbCbCb}{{Df{{Bd{{Cb{i}}k}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{Cb}{{Df{{Bd{{Cb{e}}g}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{}{{Df{{Bd{eg}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{CfAIf}AIj{{E`{f}{{Df{{Bd{eg}}}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dd{{AIl{Cb}}}Dd}{{{f{{l{c}}}}e}{{l{g}}}DdAIlDd}{{{f{{l{c}}}}g}{{l{i}}}DdCf{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DdCf{{E`{}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dd{CfAIf}{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}0{{{f{{l{c}}}}}FhAd}0{{IhIh}Ih}{{{f{{l{El}}}}M`}{{Bd{bBb}}}}{{{f{{AIn{M`}}}}M`}{{Bd{bBb}}}}````{{{f{c}}h}b{}}{{AJ`{f{c}}d}M`AIf}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{AJ`}}}AJ`}{{{f{c}}{f{Cne}}}b{}{}}{{}AJ`}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{AJ`}}{f{AJ`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AJ`}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{AJ`}}{f{Cnc}}}bAG`}{{}Fh}{ce{}{}}{{{f{{l{c}}}}}{{Gf{Fh{l{c}}}}}Dd}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}4`{{Fh{f{Cn{Fn{d}}}}}b}```{{{f{AHh}}FhFh}AHh}0{{Fh{f{{Ab{B`}}}}{f{CnF`}}}{{Bd{{AJb{{l{El}}}}Bb}}}}{{{f{{Ab{B`}}}}{f{{Ab{d}}}}d}{{Bd{AJdBb}}}}{{{f{Al}}{f{{Ab{B`}}}}{f{{Ab{d}}}}d}{{Bd{{l{En}}Bb}}}}{{{f{Al}}{f{{Ab{B`}}}}}{{Bd{{l{En}}Bb}}}}{{{f{B`}}}{{Bd{{Ch{Cf}}Bb}}}}{{{f{{Ab{B`}}}}}{{Bd{AJdBb}}}}{{{f{{Ab{B`}}}}}{{Bd{{l{En}}Bb}}}}0```````````77`{AJfGb}00{{{f{Al}}}{{Bd{EhBb}}}}{{{f{Al}}}{{Bd{AJhBb}}}}{{{f{AJj}}}Gb}333```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000{{{f{AJl}}c}AJl{{E`{{f{B`}}}{{Df{B`}}}}}}{{{f{AJn}}}d}{{{f{Id}}}{{`{{Cj{}{{Cd{Id}}}}}}}}{{{f{Id}}{f{Cn{Fn{Id}}}}}b}{{AJnd}AJn}{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{Id}}{f{Id}}}Id}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{l{Aj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{An}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AJl}}{f{Bh}}}B`}{{{f{CnAK`}}{Cb{{f{Al}}}}}b}{{{f{CnAJn}}{f{AJn}}}{{Bd{bBb}}}}{{{f{CnAK`}}}b}{{{f{CnAK`}}{f{Al}}}b}{{{f{AJn}}Ej}{{l{El}}}}{eAKb{}{{Gh{}{{Cd{c}}}}}}0{{ADbe}AKd{}{{Gh{}{{Cd{c}}}}}}0{{{f{Id}}}Id}{{{f{{Jb{J`In}}}}}{{`{Ib}}}}{{{f{{Jb{JhJd}}}}}{{`{Ib}}}}{{{f{Ef}}}{{f{Ef}}}}{{{f{Mn}}}{{f{Ef}}}}{{{f{AKf}}}{{f{Ef}}}}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}}{{Cb{{f{{Ab{c}}}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{{Jb{KbJd}}}}}{{`{Ib}}}}{{{f{c}}}{{f{e}}}{}{}}00000000000000000000000000000000000000000{{{f{Cnc}}}{{f{Cne}}}{}{}}00000000000000000000000000000000000000000{Ef{{Ch{Ef}}}}{{{ALb{Al}}}ALd}{{{f{AJn}}{f{AJn}}c}{{Bd{AJnBb}}}ALf}{{{f{ALh}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{JnJd}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{J`In}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{JhJd}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{KbJd}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{JlJj}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{AJn}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{AJl}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{Id}}{f{Ef}}}Id}{{{f{{Jb{JhJd}}}}Jf}{{Jb{JhJd}}}}{{{f{{Jb{JnJd}}}}Jf}{{Jb{JnJd}}}}`{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}00000000{{{f{{l{Eb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Ed}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AJl}}}{{f{{Fn{{Ch{Cf}}}}}}}}{{{f{{Jb{ce}}}}}{{Jb{ce}}}DdDd}{{{f{ALj}}}ALj}{{{f{ALd}}}ALd}{{{f{AJn}}}AJn}{{{f{AJl}}}AJl}{{{f{ALl}}}ALl}{{{f{Id}}}Id}{{{f{ALn}}}ALn}{{{f{Ef}}}Ef}{{{f{Mn}}}Mn}{{{f{Jf}}}Jf}{{{f{Mf}}}Mf}{{{f{Ll}}}Ll}{{{f{El}}}El}{{{f{Ld}}}Ld}{{{f{Mb}}}Mb}{{{f{Lh}}}Lh}{{{f{In}}}In}{{{f{Jd}}}Jd}{{{f{Eb}}}Eb}{{{f{Ed}}}Ed}{{{f{J`}}}J`}{{{f{Kb}}}Kb}{{{f{Aj}}}Aj}{{{f{n}}}n}{{{f{En}}}En}{{{f{An}}}An}{{{f{Jl}}}Jl}{{{f{Jh}}}Jh}{{{f{Jn}}}Jn}{{{f{AM`}}}AM`}{{{f{ADb}}}ADb}{{{f{AMb}}}AMb}{{{f{c}}{f{Cne}}}b{}{}}00000000000000000000000000000000{{{f{CnMn}}Ef}b}{AMde{}{{AKb{c}}AIf}}0{{AMdADb}e{}{{AKd{c}}AIf}}0{{{f{Ef}}}d}00{{{ALb{Al}}}Ef}{{{f{Mn}}}{{f{Ef}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{}AMf}{{}ALj}{{}ALd}{{}Id}{{}ALn}{{}Ef}{{}ADb}{Fh{{f{c}}}{}}00{{{f{{Jb{ce}}}}}fDdDd}111111111111111111111111111111111111111{Fh{{f{Cnc}}}{}}0{{{f{Cn{Jb{ce}}}}}{{f{Cn}}}DdDd}1111111111111111111111111111111111111111{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{AK`c}AJn{{Gh{}{{Cd{{Cb{{f{Al}}}}}}}}}}{Fhb}0000000000000{{{f{CnAJl}}}b}1111111111111111111111111111{{{f{ALh}}}{{f{Ef}}}}{{{f{{Jb{KbJd}}}}}{{f{Ef}}}}{{{f{{Jb{JnJd}}}}}{{f{Ef}}}}{{{f{{Jb{J`In}}}}}{{f{Ef}}}}{{{f{{Jb{JhJd}}}}}{{f{Ef}}}}{{{f{{Jb{JlJj}}}}}{{f{Ef}}}}{{{f{AJn}}}{{f{Ef}}}}{{{f{AJl}}}{{f{Ef}}}}{{{f{Id}}}Ef}`{{{f{ALj}}{f{ALj}}}d}{{{f{Id}}{f{Id}}}d}{{{f{ALn}}{f{ALn}}}d}{{{f{Ef}}{f{Ef}}}d}{{{f{Ef}}{f{ADb}}}d}{{{f{Mn}}{f{Mn}}}d}{{{f{Jf}}{f{Jf}}}d}{{{f{ADb}}{f{ADb}}}d}{{{f{AMb}}{f{AMb}}}d}{{{f{Id}}{f{Id}}d}d}{{{f{AJn}}{f{{l{Aj}}}}}}{{{f{AJn}}{f{Al}}}}{{{f{AJn}}{f{AJn}}}}{{{f{AJl}}{f{AJl}}}{{l{An}}}}2310{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{{Jb{ce}}}}}MnDdDd}{{{f{AJl}}{f{Al}}}{{Bd{B`Bb}}}}{{{f{AJl}}}{{f{{Ab{B`}}}}}}{{{f{CnAJl}}}{{f{Cn{Fn{B`}}}}}}{{{f{ALd}}{f{Al}}}{{Cb{M`}}}}{{ALf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{AK`AJn}{AMf{{ADl{ALd}}}}{{{f{ALj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{ALd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{ALl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Id}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{ALn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Ef}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{Mn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Jf}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{ADb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AMb}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}0{{{l{In}}}{{Jb{J`In}}}}1{{{l{Jd}}}{{Jb{KbJd}}}}222222222222{cIdAMh}3{{{Cb{c}}}Id{{AMj{Id}}}}4{{{f{Id}}}Ef}{{{f{ADb}}}Ef}6{IdEf}{{{f{Id}}}Mn}{{{f{AMl}}}Mn}9{{{f{AMb}}}Jf}::::::::::::::::::::::{AMnADb}{AN`ADb}<{{{f{ADb}}d}Ef}{{{l{El}}{ADl{ALd}}dALj}AJn}{{{f{Al}}cJf}{{Jb{JnJd}}}{{Gh{}{{Cd{ANb}}}}}}{{{f{Al}}cJf}{{Jb{JnJd}}}{{Gh{}{{Cd{{Cb{ANb}}}}}}}}{{{l{El}}ALj}AJn}{{{f{Al}}c}{{Jb{J`In}}}{{Gh{}{{Cd{ANd}}}}}}{{{f{Al}}c}{{Jb{J`In}}}{{Gh{}{{Cd{{Cb{ANd}}}}}}}}{{{f{Al}}cJf}{{Jb{JhJd}}}{{Gh{}{{Cd{AJf}}}}}}{{{f{Al}}cJf}{{Jb{JhJd}}}{{Gh{}{{Cd{{Cb{AJf}}}}}}}}{{{f{Al}}c}{{Jb{KbJd}}}{{Gh{}{{Cd{AJj}}}}}}{{{f{Al}}c}{{Jb{KbJd}}}{{Gh{}{{Cd{{Cb{AJj}}}}}}}}{{{ANh{ANf}}Ef}Mn}{{{f{{l{Aj}}}}{f{{ALb{Al}}}}ALj}{{Bd{AJnBb}}}}{{{Fn{c}}ADb}{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{Fn{c}}ADb}{{AIf{}{{AKh{e}}{AKj{c}}{AKl{g}}}}}{AKn{AL`{e}}}ABd{{G`{}{{Cd{e}}}}IbHlHn}}{{FhcADb}{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{FhADb}{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{Al}}dFhALj}AJn}{{{f{Al}}Fh}AJl}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}Fh}{{Cb{c}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{ALd}}M`}{{f{Al}}}}{{{f{{Jb{JnJd}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{J`In}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{JhJd}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{KbJd}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{JlJj}}}}Fh}{{Bd{IdBb}}}}{{{f{ALh}}Fh}{{Bd{IdBb}}}}{{{f{AJn}}Fh}{{Bd{IdBb}}}}{{{f{AJl}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{JnJd}}}}Fh}Id}{{{f{{Jb{JlJj}}}}Fh}Id}{{{f{{Jb{KbJd}}}}Fh}Id}{{{f{{Jb{JhJd}}}}Fh}Id}{{{f{{Jb{J`In}}}}Fh}Id}{{{f{ALh}}Fh}Id}{{{f{AJn}}Fh}Id}{{{f{AJl}}Fh}Id}{{{f{ALd}}}{{f{{ALb{Al}}}}}}{{}Ef}000000000000000000000000{{{f{ALd}}M`}{{Cb{{f{Al}}}}}}{{{f{AJn}}}{{f{{ADl{ALd}}}}}}{{{f{Id}}}{{Cb{{f{Al}}}}}}{{{f{ANj}}Fh}Id}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}Fh}{{Cb{c}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{AJn}}{f{{l{Aj}}}}}}{{{f{AJn}}{f{Al}}}}{{{f{AJn}}{f{AJn}}}}{{{f{AJl}}{f{AJl}}}{{l{An}}}}3120{{{f{Id}}{f{Cnc}}}bAG`}{{{f{ALn}}{f{Cnc}}}bAG`}{{{f{Ef}}{f{Cnc}}}bAG`}{{{f{Jf}}{f{Cnc}}}bAG`}{{{f{ADb}}{f{Cnc}}}bAG`}{{{f{AMb}}{f{Cnc}}}bAG`}{{{f{Id}}{f{Cnc}}d}bAG`}{{{f{{Jb{KbJd}}}}}{{l{Mb}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{}Fh}00000000000000000000000000000000000000000{{{f{Ef}}}{{Cb{{f{Ef}}}}}}{{{f{ADb}}}{{Cb{{f{ADb}}}}}}{ce{}{}}000000000000000000000000000000000000000000{{{f{AJl}}}}{{{Jb{J`In}}}B`}{{{Jb{KbJd}}}B`}{{{Jb{JlJj}}}B`}{{{Jb{JhJd}}}B`}{{{Jb{JnJd}}}B`}{AJnB`}{AJlB`}{Id{{Bd{IdBb}}}}{{{f{Ef}}}d}00{{{f{Id}}}d}11{{{f{AJn}}}d}{{{f{AJl}}}d}1323{{{f{ALd}}}d}34440443434344443444434{{{f{ADb}}}d}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}}{{ADj{cgADh}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{AJl}}}ACl}{{{f{AJn}}}ANl}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}}{{Cb{c}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{ALd}}}Fh}{{{f{AJn}}}Fh}{{{f{AJl}}}Fh}{{{f{AJn}}{f{{l{Aj}}}}}}{{{f{AJn}}{f{AJn}}}}{{{f{AJn}}{f{Al}}}}{{{f{AJl}}{f{AJl}}}{{l{An}}}}2130{{{f{AJn}}{f{AJn}}}{{Bd{{Gf{AJnAJn}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Ef}}{f{Ef}}}{{Bd{dBb}}}}{{{f{AJn}}}B`}{{{f{Ef}}{f{Ef}}}{{Bd{EfBb}}}}{{{f{CnAMf}}{f{{ADl{ALd}}}}}{{Bd{bBb}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}03{{{f{{Jb{KbJd}}}}}{{l{Mb}}}}1{{{f{{Jb{JhJd}}}}{Cb{{f{AJh}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{{Jb{J`In}}}}{Cb{{f{AJh}}}}}{{Bd{{Jb{J`In}}Bb}}}}01{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{AJn}}}{{Bd{FhBb}}}}{{{f{AJn}}}{{f{Al}}}}{{{f{AJl}}}{{f{{ANh{ANf}}}}}}{{{f{Mn}}}{{f{{ANh{ANf}}}}}}`{{{f{{Jb{KbJd}}}}}{{l{In}}}}:{{}c{}}0{{{f{Al}}FhALj}AK`}{{{f{Al}}c}{{Jb{KbJd}}}{{Hf{{Ab{AJj}}}}}}{{{f{Al}}c}{{Jb{JhJd}}}{{Hf{{Ab{AJf}}}}}}{{{f{Al}}c}{{Jb{JnJd}}}{{Hf{{Ab{{Cb{ANb}}}}}}}}{{{f{Al}}c}{{Jb{JnJd}}}{{Hf{{Ab{ANb}}}}}}{{{f{Al}}c}{{Jb{J`In}}}{{Hf{{Ab{ANd}}}}}}{{{f{Al}}c}{{Jb{JhJd}}}{{Hf{{Ab{{Cb{AJf}}}}}}}}{{{f{Al}}c}{{Jb{J`In}}}{{Hf{{Ab{{Cb{ANd}}}}}}}}{{{f{Al}}c}{{Jb{KbJd}}}{{Hf{{Ab{{Cb{AJj}}}}}}}}{{{ADl{ALd}}}AMf}{{{f{Al}}{f{{Ab{B`}}}}}{{Bd{AJlBb}}}}{{{f{Al}}Ef}Mn}{{{f{CnANl}}}Cb}{{{f{AJn}}{f{Al}}}}{{{f{AJn}}{f{AJn}}}}{{{f{AJn}}{f{{l{Aj}}}}}}{{{f{AJl}}{f{AJl}}}{{l{An}}}}2310{{{f{AJn}}}Fh}{{{f{AJl}}}Fh}{{{f{Al}}{f{{Ab{{f{Al}}}}}}{f{Al}}}{{Jb{KbJd}}}}{{{f{Al}}{f{{Ab{{f{Al}}}}}}{f{Al}}}{{Jb{J`In}}}}{{{f{Id}}{f{Id}}}{{Cb{ANn}}}}{{{f{Jf}}{f{Jf}}}{{Cb{ANn}}}}{{{f{AJn}}}{{f{{l{El}}}}}}{{{f{{Jb{JlJj}}}}}{{Cb{Fh}}}}{{{f{CnAJl}}}b}{{{f{AJl}}}{{f{Mn}}}}{{{f{CnAK`}}{f{Al}}}{{Gf{M`d}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{CnAJl}}{f{Al}}}b}{{{f{{Jb{J`In}}}}{f{{l{Aj}}}}AO`{Cb{{f{AJh}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{{Jb{JhJd}}}}{f{{l{Aj}}}}AO`{Cb{{f{AJh}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{AJl}}}{{Bd{{l{En}}Bb}}}}{{{f{ALd}}{f{ALd}}}d}{{{f{{Jb{JlJj}}}}}Fh}{{{f{{Jb{KbJd}}}}}{{l{Mb}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{{f{CnMn}}{ANh{ANf}}}b}{{{f{Cn{Jb{JnJd}}}}Jf}b}{{{f{Cn{Jb{JhJd}}}}Jf}b}{{{f{Cn{Jb{JhJd}}}}Eh}{{Bd{bBb}}}}{{{f{ANl}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{AJn}}d}AJn}{{{f{AJn}}Ej}AJn}{{{f{{Jb{KbJd}}}}{f{Al}}}{{l{Aj}}}}{{{f{{Jb{J`In}}}}{f{Al}}}{{l{Aj}}}}{{{f{{Jb{JhJd}}}}{f{Al}}}{{Bd{{l{Aj}}Bb}}}}{{{f{Id}}{f{Ef}}}{{Cb{Id}}}}{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{Jb{JnJd}}}}}Jf}{{{f{{Jb{JhJd}}}}}Jf}{{{f{{Jb{JhJd}}}}}{{f{{Cb{Eh}}}}}}{{{f{AJn}}dd}{{Ch{Cf}}}}{{{f{Ef}}d}ADb}{{{f{Mn}}d}AMl}{JfAMb}{{{f{Ef}}{f{Al}}d}AMl}{Jf{{f{Al}}}}{{{f{AJn}}{f{{ALb{Al}}}}AOb}AJn}{{{f{AJn}}}{{Bd{AJnBb}}}}{{{f{AJn}}}AJn}{{{f{ADb}}}{{f{ADb}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000{{{f{Ef}}}Ef}{{{f{ADb}}}AOd}{{{f{{Jb{KbJd}}}}{f{Al}}}{{l{Aj}}}}{{{f{{Jb{J`In}}}}{f{Al}}}{{l{Aj}}}}{{{f{{Jb{JhJd}}}}{f{Al}}}{{Bd{{l{Aj}}Bb}}}}{{{f{c}}}Eh{}}00{{{f{AJl}}}Fh}{{{f{{Jb{J`In}}}}{Cb{{f{AJh}}}}{f{{l{Aj}}}}{f{Al}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{AJh}}}}{f{{l{Aj}}}}{f{Al}}}{{Bd{{Jb{JhJd}}Bb}}}}{g{{Bd{AKbe}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{{ADbg}{{Bd{AKde}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{AMd{{Bd{eg}}}{}{{AKb{c}}AIf}{}}0{{AMdADb}{{Bd{eg}}}{}{{AKd{c}}AIf}{}}0{{{f{Id}}}{{Bd{cBb}}}Kn}{c{{Bd{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Id}}{f{Ef}}}{{Bd{IdBb}}}}{{{f{Ef}}d}{{Bd{ADbBb}}}}{{{f{c}}}Oj{}}00000000000000000000000000000000000000000{{{f{ADb}}}ADb}{{{f{AJn}}}{{Bd{AJnBb}}}}{AJlAOf}{{{f{AJn}}}d}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}Fh}cABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{AJn}}}{{Bd{AOfBb}}}}1{{{f{Ef}}Id}d}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}}gABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{ce{}{}}00000000000000000000000000000000000000000{Fhc{}}0{{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}{Cb{Hb}}}{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}```````````{{{f{AJn}}{f{AJn}}c}{{Bd{AJnBb}}}ALf}{{ALf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{f{AJn}}{f{AJn}}}{{Bd{{Gf{AJnAJn}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{}AOh}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{{}b}{Fhb}{{{f{CnAOh}}}b}2{cc{}}6{{}Fh}{ce{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}{{}d}3```````````````````````{{{f{AOj}}}{{f{Al}}}}>>>===`{{BbAOj}Bb}{BbBb}=={{{f{AOj}}}f}>===;;;`{{{f{AOl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AOj}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{Bb}}{f{CnGj}}}{{Bd{bGl}}}}0<<{cAOj{{AMj{{Dl{Al}}}}}}{AOnBb}{B@`Bb}{B@bBb}{B@dBb}{B@fBb}{B@hBb}{cc{}}{{}{{Fj{{f{Al}}AOl}{{Df{b}}}}}}{{}Fh}00{ce{}{}}00{cBbAIj}````{{{Fj{{f{Al}}AOl}{{Df{b}}}}}b}{cBbB@j}{{{f{c}}}Eh{}}0{c{{Bd{e}}}{}{}}00000{{{f{c}}}Oj{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{CnAOf}}{Fn{B`}}{f{B@l}}}{{Bd{bBb}}}}{{{f{AOf}}{f{Dh}}}{{Fn{B`}}}}0{{{f{AOf}}{f{{l{An}}}}}{{Bd{AOfBb}}}}{{{f{AOf}}{f{{Ab{{ANh{ANf}}}}}}}{{Bd{AOfBb}}}}0{{{f{AOf}}GbFh}AOf}{{{f{CnAOf}}}{{f{CnAOf}}}}{{{f{CnAOf}}{f{Al}}e}{{Bd{{f{CnAOf}}Bb}}}B@n{{On{{f{B`}}}{{Df{c}}}}}}{{{f{CnAOf}}Fhe}{{Bd{{f{CnAOf}}Bb}}}B@n{{On{{f{B`}}}{{Df{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Cnc}}}{{f{Cne}}}{}{}}0000{{{f{AOf}}}AOf}{{{f{BA`}}}BA`}{{{f{BAb}}}BAb}2{{{f{c}}{f{Cne}}}b{}{}}00{{{f{AOf}}{f{Al}}}{{Bd{{f{B`}}Bb}}}}{{{f{AOf}}e}{{Bd{{Fn{{f{B`}}}}Bb}}}{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{{}BAb}{{}AOf}{Fh{{f{c}}}{}}0000{Fh{{f{Cnc}}}{}}0000{Fhb}0000{{{f{AOf}}{f{Al}}}{{Bd{AOfBb}}}}{{{f{CnAOf}}{f{Al}}}{{Bd{B`Bb}}}}{{{f{AOf}}{f{{Ab{c}}}}}AOf{{Hf{Al}}}}{{{f{AOf}}{f{{BAd{{f{Al}}Nj}}}}}AOf}{{{f{AOf}}{Cb{{f{{Ab{c}}}}}}}{{Bd{AOfBb}}}{{Hf{Al}}}}{{{f{AOf}}}{{Fn{Ef}}}}9{{{f{BAb}}{f{BAb}}}d}{{{f{AOf}}{f{AOf}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{AOf}}}Fh}`{{{f{AOf}}e}{{Bd{AOfBb}}}{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOf}}{Fn{B`}}}{{Bd{AOfBb}}}}{{{f{CnAOf}}{f{AOf}}}{{Bd{bBb}}}}{{{f{AOf}}}{{Fn{Mn}}}}{{{f{AOf}}AF`}{{Bd{AOfBb}}}}{{{f{AOf}}{f{{l{An}}}}}{{Bd{AOfBb}}}}{{{f{BA`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AOf}}{f{CnGj}}}{{Bd{bGl}}}}0{cc{}}0000{{{f{B@l}}}AOf}{AJlAOf}{{{f{BAf}}}AOf}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}{cAOf{{Gh{}{{Cd{B`}}}}}}{{{f{{Ab{BAh}}}}}{{Bd{AOfBb}}}}{{{f{{Ab{BAh}}}}{f{B@l}}}{{Bd{AOfBb}}}}{{c{f{B@l}}}{{Bd{AOfBb}}}{{Cj{}{{Cd{{f{BAh}}}}}}}}{{{f{AOf}}Fh}{{Cb{{Fn{Id}}}}}}{{{f{AOf}}{f{Al}}}{{Cb{Fh}}}}{{{f{AOf}}}{{Fn{{f{Al}}}}}}{{{f{AOf}}}{{Fn{{ANh{ANf}}}}}}{{{f{AOf}}}{{f{{Ab{B`}}}}}}{{{f{CnAOf}}}{{f{Cn{Fn{B`}}}}}}{{{f{AOf}}Fh}{{Bd{BAhBb}}}}{{{f{AOf}}Fh{f{CnBAh}}}{{Bd{bBb}}}}{{{f{AOf}}Fh{f{CnBAh}}}b}{{{f{AOf}}}{{Cb{{Bd{EfBb}}}}}}`{{{f{AOf}}e}{{Bd{BAjBb}}}{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOf}}{Fn{B`}}{f{BAl}}}{{Bd{{Gf{B`{Fn{B`}}Bh}}Bb}}}}1{{{f{AOf}}{Fn{B`}}dd}{{Bd{BAjBb}}}}{{{f{BAb}}{f{Cnc}}}bAG`}{{{f{AOf}}{Cb{Fh}}}AOf}{{{f{AOf}}}Fh}{{{f{AOf}}{f{{Ab{B`}}}}}{{Bd{AOfBb}}}}{{{f{CnAOf}}{f{{Ab{B`}}}}}{{Bd{{f{CnAOf}}Bb}}}}{{{f{CnAOf}}{f{{Ab{B`}}}}}{{f{CnAOf}}}}{{{f{AOf}}{BAn{Fh}}}f}{{{f{AOf}}Fh}f}{{{f{AOf}}{BB`{Fh}}}f}{{{f{AOf}}{BBb{Fh}}}f}{{{f{AOf}}{BBd{Fh}}}f}{{{f{AOf}}{Lb{Fh}}}f}{{{f{AOf}}BBf}f}{{{f{AOf}}{f{Al}}}f}{{}Fh}0000{{{f{CnAOf}}Fhc}{{Bd{{f{CnAOf}}Bb}}}B@n}{ce{}{}}000000{{AOf{f{Al}}}AJl}{{{f{AOf}}}{{Bd{{l{An}}Bb}}}}{{{f{AOf}}}d}1{{{f{AOf}}}{{Ff{B`}}}}{{{f{AOf}}d}BBh}{{{f{AOf}}}BBj}{AOfBBl}{{{f{AOf}}}{{Bd{{Cb{B`}}Bb}}}}{{{f{AOf}}BA`}{{Bd{{Cb{B`}}Bb}}}}{{{f{AOf}}ce}{{Bd{AOfBb}}}{{BBn{{ANh{ANf}}}}}{{BBn{{ANh{ANf}}}}}}{{{f{AOf}}BC`}{{Bd{AOfBb}}}}3{{{f{AOf}}}Fh}{{{Fn{c}}}{{Bd{AOfBb}}}B@n}{{{Fn{B`}}}AOf}{{{Fn{B`}}}{{Bd{AOfBb}}}}{{{f{CnBBh}}}Cb}{{{f{CnBBj}}}Cb}{{{f{AOf}}}AOf}{{AOfe}{{Bd{cBb}}}{}{{Dh{AOf}{{Df{{Bd{cBb}}}}}}}}{{{f{CnAOf}}e}{{Bd{cBb}}}{}{{Dh{{f{CnAOf}}}{{Df{{Bd{cBb}}}}}}}}{{AOfgc}{{Bd{eBb}}}{}{}{{Dh{AOfc}{{Df{{Bd{eBb}}}}}}}}{{{f{CnAOf}}}{{Cb{B`}}}}{{{f{AOf}}{f{AOf}}}d}{{{f{CnAOf}}{f{Al}}{f{Al}}}{{Bd{{f{CnAOf}}Bb}}}}{{{f{CnAOf}}{f{Al}}c}{{Bd{{f{CnAOf}}Bb}}}B@n}{{{f{CnAOf}}Fhc}{{Bd{{f{CnAOf}}Bb}}}B@n}18{{{f{AOf}}{Fn{B`}}{f{BCb}}}{{Bd{{Gf{B`{Fn{B`}}Bh}}Bb}}}}`{{{f{AOf}}{f{B`}}dd{Cb{Il}}}{{Bd{AOfBb}}}}0{{{f{AOf}}Fhdd{Cb{Il}}}{{Bd{AOfBb}}}}{{{f{AOf}}}B@l}{{{f{AOf}}{f{AOf}}}{{Bd{bBb}}}}{{{f{AOf}}e}{{Bd{AOfBb}}}{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOf}}Fh}{{Cb{{f{B`}}}}}}{{{f{AOf}}c}{{Bd{AOfBb}}}{{BCd{Fh}}}}2{{{f{AOf}}c}{{Bd{{Fn{B`}}Bb}}}{{BBn{{ANh{ANf}}}}}}{{{f{AOf}}e{f{{ADl{B@l}}}}}{{Bd{AOfBb}}}{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOf}}e{f{B@l}}}{{Bd{AOfBb}}}{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{{{f{CnAOf}}{f{{Ab{c}}}}}{{Bd{bBb}}}{{Hf{Al}}}}{{{f{AOf}}}{{Gf{FhFh}}}}{{{f{AOf}}Gb}AOf}{{{f{AOf}}}d}{{{f{CnAOf}}}b}{{{f{BBh}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{BBj}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{AOf}}GbFh}AOf}0{{{f{AOf}}cF`}{{Bd{AOfBb}}}{{BBn{{ANh{ANf}}}}}}{{{f{CnAOf}}cF`}{{Bd{{f{CnAOf}}Bb}}}{{BBn{{ANh{ANf}}}}}}{AOf{{`{{Cj{}{{Cd{AOf}}}}}}}}{{AOfFhd}{{Fn{AOf}}}}{{{f{AOf}}BA`}{{Bd{{Cb{B`}}Bb}}}}{{{f{AOf}}{Cb{Fh}}}AOf}{{{f{AOf}}{f{{l{El}}}}}{{Bd{AOfBb}}}}{{{f{AOf}}{f{{l{El}}}}}AOf}{{{f{AOf}}{f{{l{El}}}}d}AOf}{{{f{AOf}}}{{f{AOf}}}}{{{f{AOf}}BCf}{{Bd{{Od{Of{Ob{{O`{Fh}}}}}}Bb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Eh{}}{{{f{AOf}}FhcF`}{{Bd{AOfBb}}}{{BBn{{ANh{ANf}}}}}}{{{f{CnAOf}}{Cb{{f{Al}}}}{Cb{{Oh{Eh{Fn{Eh}}}}}}}{{Bd{AOfBb}}}}{{{f{CnAOf}}{f{Al}}e}{{Bd{{f{CnAOf}}Bb}}}B@n{{On{{f{B`}}}{{Df{{Bd{cBb}}}}}}}}{{{f{CnAOf}}Fhe}{{Bd{{f{CnAOf}}Bb}}}B@n{{On{{f{B`}}}{{Df{{Bd{cBb}}}}}}}}{c{{Bd{e}}}{}{}}0000{BCh{{Bd{AOfBb}}}}{{{Gf{{BCj{{Ch{Cf}}}}{f{{Ab{AMl}}}}}}}{{Bd{AOfBb}}}}{{c{f{B@l}}}{{Bd{AOfBb}}}{{Cj{}{{Cd{{Bd{{f{BAh}}Bb}}}}}}}}{{{f{AOf}}{f{Al}}}{{Bd{FhBb}}}}44444{{{f{c}}}Oj{}}0000{{{f{AOf}}{Cb{{f{{Ab{Eh}}}}}}BAb{Cb{{Gf{GbFh}}}}}{{Bd{AOfBb}}}}{{{f{AOf}}d{Cb{{f{{Ab{Eh}}}}}}BAb{Cb{{Gf{GbFh}}}}}{{Bd{AOfBb}}}}1{{{f{AOf}}c}{{Bd{AOfBb}}}{{BBn{Eh}}}}{{{f{AOf}}c{f{Al}}AO`AO`}{{Bd{AOfBb}}}{{BBn{Eh}}}}0{{{f{AOf}}{f{AOf}}}{{Bd{AOfBb}}}}{{{f{CnAOf}}{f{AOf}}}{{Bd{{f{CnAOf}}Bb}}}}{ce{}{}}0000{{{f{AOf}}}Fh}{{{f{CnAOf}}c}{{Bd{{f{CnAOf}}Bb}}}B@n}{{{f{CnAOf}}c{f{B@l}}}{{Bd{{f{CnAOf}}Bb}}}B@n}{{{f{CnAOf}}B`}{{f{CnAOf}}}}{{{f{AOf}}{f{Al}}{Cb{M`}}}{{Bd{AOfBb}}}}{{{f{CnAOf}}{f{Al}}{Cb{M`}}}{{f{CnAOf}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{BC`}}}BC`}{{{f{c}}{f{Cne}}}b{}{}}{{}BC`}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{BC`}}{f{BC`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BC`}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{BC`}}{f{Cnc}}}bAG`}`{{}Fh}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BAj}}}{{Bd{AOfBb}}}}`{{{f{BCl}}}{{f{{Ab{{BCn{M`}}}}}}}}{{{f{BAj}}c}{{Bd{AOfBb}}}{{E`{AOf}{{Df{{Bd{AOfBb}}}}}}HlHn}}{{{f{Bh}}}{{l{j}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Cnc}}}{{f{Cne}}}{}{}}0000000{{{f{BCl}}}BCl}{{{f{Bh}}}Bh}{{{f{BAj}}}BAj}{{{f{BD`}}}BD`}{{{f{c}}{f{Cne}}}b{}{}}000:{{}BCl}{{}Bh}{Fh{{f{c}}}{}}000{{{f{BDb}}}f}1111{Fh{{f{Cnc}}}{}}0000000`{{BDdc}{}BDf}{Fhb}0000{{{f{CnBCl}}}b}111{{{f{BCl}}{f{BCl}}}d}{{{f{Bh}}{f{Bh}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BDh}}}M`}{{{f{BCl}}}{{f{{Ab{M`}}}}}}{{{f{BAj}}}{{Bd{AOfBb}}}}{{{f{CnBCl}}}{{f{Cn{Fn{M`}}}}}}{{{f{BCl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Bh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BD`}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{Al}}BD`}Eh}{cc{}}0000{{{Fn{{Fn{{Gf{M`{BCn{M`}}}}}}}}}BCl}{{{Fn{{Gf{{Fn{M`}}{Fn{{BCn{M`}}}}}}}}}BCl}{{{Fn{{Gf{M`{BCn{M`}}}}}}}BCl}3{BClBh}4{BDjBD`}5{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}{cBCl{{Gh{}{{Cd{{Gf{M`{BCn{M`}}}}}}}}}}{cBCl{{Hj{}{{Cd{{Gf{M`{BCn{M`}}}}}}}}}}{{{f{Bh}}Fh}BDh}{{{f{BAj}}}{{f{Bh}}}}{{{f{CnBAj}}}{{f{CnBh}}}}{{{f{Bh}}}{{l{El}}}}{{{f{BDl}}dd}{{Bd{BhBb}}}}{{{f{BAj}}}{{Bd{AOfBb}}}}{{{f{CnBh}}}{{f{CnBCl}}}}{{}Fh}0000000{ce{}{}}0000000{BhBCl}1{BCl}{{{f{BCl}}}}310{{{f{BDh}}}d}{{{f{Bh}}}d}{{{f{BCl}}}d}{{{f{BCl}}}{{BE`{{BDn{{Ff{M`}}}}{Ff{{BCn{M`}}}}}}}}{{{f{Bh}}}BEb}{{{f{BAj}}}{{Fn{B`}}}}{{{f{BAj}}{Cb{{Gf{GbFh}}}}}{{Fn{B`}}}}={{{f{BDh}}}Fh}{{{f{Bh}}}Fh}?????{{{Fn{M`}}{Fn{{BCn{M`}}}}d}BCl}{{{f{AOf}}{Fn{B`}}Bh{Cb{{Fn{Eh}}}}}BAj}{{{f{CnBEb}}}Cb}{{{f{CnBEb}}Fh}Cb}{{{f{BAj}}c}{{Bd{AOfBb}}}{{Dh{AOf}{{Df{{Bd{AOfBb}}}}}}HlHn}}{{{f{c}}}{}{}}{{{f{Bh}}}BDd}{{{f{BAj}}L`Ml}{{Bd{AOfBb}}}}{{BAje}BAj{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{{{f{Bh}}GbFh}BDb}{{{f{CnBCl}}}b}{{{f{CnBh}}}b}{{{f{BAj}}A`}{{Bd{AOfBb}}}}{{{f{BAj}}}{{Bd{AOfBb}}}}{Bh{{Fn{M`}}}}0{BAjBh}{{{f{CnBAj}}}Bh}{{{f{c}}}e{}{}}000{{{f{c}}}Eh{}}{c{{Bd{e}}}{}{}}000000000000000{{{f{c}}}Oj{}}0000000{BhBh}{{{f{Bh}}}{{f{BCl}}}}{{{f{Bh}}}{{f{{Fn{{O`{M`}}}}}}}};{ce{}{}}0000000`````{{{f{BCl}}c}B`{{Dh{{Gf{M`{f{{BCn{M`}}}}}}}{{Df{Cb}}}}HlHn}}{{{f{BCl}}c}B`{{Dh{{Gf{M`{f{{BCn{M`}}}}}}}{{Df{}}}}HlHn}}{{{f{{Ab{{O`{M`}}}}}}c}B`{{Dh{{O`{M`}}}{{Df{Cb}}}}HlHn}}{{{f{{Ab{{O`{M`}}}}}}c}B`{{Dh{{O`{M`}}}{{Df{}}}}HlHn}}{{{f{{Ab{c}}}}e{Cb{{ADl{ADd}}}}}{{AIn{c}}}{BEdBEf}{{Cj{}{{Cd{{Gf{M`M`}}}}}}Ib}}{{{f{{Ab{c}}}}{f{Hb}}e{Cb{{ADl{ADd}}}}}{{AIn{c}}}{BEdBEf}{{Cj{}{{Cd{{Gf{M`M`}}}}}}Ib}}{{{f{{l{c}}}}M`M`}{{l{c}}}Dd}{{{f{{Fn{{O`{M`}}}}}}{f{{Ab{{Ch{Cf}}}}}}}d}{{{f{BEh}}{f{Bh}}}B`}{{BEjBEj}BEj}0`{{{f{BEl}}{f{AOf}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BEl}}}{{Bd{{f{Al}}Bb}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{CnBEn}}Id}{{Cb{b}}}}{{{f{CnBF`}}{f{Id}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00{{{f{BEn}}}BEn}{{{f{BF`}}}BF`}{{{f{BAh}}}BAh}{{{f{c}}{f{Cne}}}b{}{}}00{{{f{{Ab{c}}}}}Ef{{Hh{Ef}}}}{{}BAh}{Fh{{f{c}}}{}}00{Fh{{f{Cnc}}}{}}00{Fhb}00{{{f{BAh}}{f{BAh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BAh}}{f{CnGj}}}{{Bd{bGl}}}}{{{Gf{{f{Ef}}Fh}}}BEn}{cc{}}{{{Gf{{f{Ef}}Fh}}}BF`}11{{eFh}B@l{{AMj{Ef}}}{{Cj{}{{Cd{{Fn{{Gf{Ehc}}}}}}}}}}{{}Fh}00{ce{}{}}00{BEnB`}{BF`B`}{{{f{Ef}}Fh}BEn}{{{f{Ef}}Fh}BF`}{{{Fn{Id}}}BAh}{{{f{CnBEn}}Fh}B`}{{{f{CnBF`}}Fh}B`}{{{f{{Ab{BAh}}}}{Cb{Fh}}}{{Bd{B@lBb}}}}0{{{f{{Ab{BAh}}}}{Cb{Fh}}}{{Bd{{Fn{Ef}}Bb}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}Oj{}}00<<<{{{f{{Ab{AOf}}}}}{{Bd{AOfBb}}}}0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AOf{f{{Ab{{f{Al}}}}}}{f{{Ab{{f{Al}}}}}}{Cb{{f{Al}}}}{f{AOf}}}AOf}{{BBlc}{{Bd{AOfBb}}}{{Dh{BFb{f{Cn{BFf{BFd}}}}{f{Cn{BFf{BFh}}}}}{{Df{{Bd{bBb}}}}}}}}{{{f{BFj}}{f{{Ab{M`}}}}dd}AOf}{{{f{BFj}}{Gf{{Oh{{Fn{M`}}{Fn{Nf}}}}{Oh{{Fn{Ol}}{Fn{Nf}}}}}}{f{AOf}}BFl}{{Bd{AOfBb}}}}{{{f{Al}}{f{Al}}}Eh}{{{f{BFj}}{f{AOf}}{f{B`}}{f{B`}}BFld{Cb{{f{{Ab{{f{Al}}}}}}}}}{{Bd{AOfBb}}}}{{{f{BFj}}{f{AOf}}{f{B`}}{f{B`}}BFl}{{Bd{AOfBb}}}}{{{f{BFn}}}{{Bd{B`Bb}}}}{{{f{BG`}}{f{{Ab{Nf}}}}Ih}AOf}0{{{f{BG`}}{f{{Ab{Nf}}}}}AOf}0{{{f{BGb}}{Cb{{Fn{{f{Al}}}}}}{Cb{{f{Al}}}}d}{{Bd{AOfBb}}}}{{BBld}BBl}{{{BGd{c}}{Cb{{ADl{BGf}}}}}{{BGd{c}}}BGh}{{{f{B`}}}{{Bd{B`Bb}}}}{BGjBGj}{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{BGjBGj}}{{{f{AO`}}Gb{Cb{{f{AJh}}}}}{{Bd{GbBb}}}}0{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}1{{BH`c}BBl{{Hf{{Ab{BGj}}}}}}5`{{BGj{f{Al}}}BGj}{{}BGj}{{BGjd}BGj}{c{{Bd{BGjBb}}}{{Hf{{Ab{BGj}}}}}}{{{f{{ADl{ce}}}}}{{f{e}}}{}BHb}{{BHdd}BHd}`{{{f{BHf}}}d}0{{{f{BHh}}}d}1`{{BGjc}BGj{{AMj{BGj}}}}{{{ADl{BHf}}BHj}{{Bd{BBlBb}}}}76{{BGjcd}BGj{{AMj{BGj}}}}{{{f{CnAA`}}}b}{{{f{CnAAb}}}b}{{{f{CnAA`}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{CnAAb}}{Cb{c}}}b{}}{{{f{CnAA`}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAb}}c}b{}}{{{f{{AEf{}{{AEd{c}}}}}}g}{{AEf{}{{AEd{c}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{c}}}}}}Dj}}{{BH`c{ADl{B@l}}}BBl{{Dh{AOf}{{Df{{Bd{AOfBb}}}}}}HlHn}}{{BGjc{BHn{{ADl{BHl}}}}}BGj{{Dh{B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}{{BGjBGjc{BHn{{ADl{BHl}}}}}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}{{{f{BGj}}{f{Cnc}}f}{{Bd{BI`Bb}}}{{E`{{f{BGj}}f}{{Df{{Bd{BI`Bb}}}}}}}}{{{f{AEh}}{f{Dh}}}AEh}{{{f{AEh}}{f{Dh}}}{{l{c}}}Dd}{{BGjc{f{{Ab{BGj}}}}{BHn{{ADl{BHl}}}}}BGj{{Dh{{f{Cn{Ab{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}{{BGjBIb{f{{Ab{BGj}}}}dd}BGj}{{ce{BHn{{ADl{BHl}}}}d}BGj{{Dh{{f{Cn{Ab{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}{{Hf{{Ab{BGj}}}}}}{{{f{{AEf{}{{AEd{c}}}}}}i{f{Cn{Ab{g}}}}}b{}{}{}{{Dh{{Cb{e}}{f{g}}}{{Df{g}}}}}}{{{f{{AEf{}{{AEd{c}}}}}}g}{{AEf{}{{AEd{c}}}}}{}{}{{Dh{e}{{Df{c}}}}Dj}}{{BGjBGjGbEf}BGj}{BCh{{ADl{Cf}}}}{{{f{BId}}}{{Cb{Fh}}}}{BIfBGj}{BIhBGj}{BGjBGj}3210{{{f{AEj}}Ej}{{l{El}}}}{{BGjEj}BGj}{{{f{BFn}}Ej}{{l{El}}}}{{cF`}BGj{{Hf{{Ab{BGj}}}}}}{{{f{AEj}}{f{{Ab{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{AEl}}}{{Bd{{l{El}}Bb}}}}6{{{f{BFn}}}{{Bd{{l{El}}Bb}}}}{cBGj{{AMj{BGj}}}}``{BGjBIf}{eAKb{}{{Gh{}{{Cd{c}}}}}}0{{ADbe}AKd{}{{Gh{}{{Cd{c}}}}}}0`{{{f{Cn{BIj{c}}}}}{{Bd{BAfBb}}}BIl}{{{f{BHf}}}{{f{ADd}}}}{{{f{BFn}}}{{f{ADd}}}}{{{f{BIn}}}{{f{ADd}}}}{{{f{BHh}}}{{f{ADd}}}}{{{f{BCh}}}{{f{ADd}}}}{{{f{CnBFn}}}{{f{CnADd}}}}{{{f{CnBCh}}}{{f{CnADd}}}}{{{f{BJ`}}}{{f{{l{n}}}}}}{{{f{BJb}}{Cb{{f{Al}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJb}}{Cb{{f{Al}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJb}}{Cb{{f{Al}}}}Jfdd{Cb{{f{Eh}}}}{f{{l{Aj}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJb}}{Cb{{f{Al}}}}Jfd{Cb{{f{Eh}}}}{f{{l{Aj}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJd}}}{{Cb{{f{BGj}}}}}}{{{f{{ADl{c}}}}}BJf{BJhNd}}{{{f{BJj}}}{{f{{l{j}}}}}}{{{f{BJd}}}{{Cb{{f{BJl}}}}}}{{{f{{ADl{ce}}}}}{}NdBHb}{{{f{{ADl{c}}}}}LfBJn}{{{f{BK`}}}{{f{BGj}}}}{{{f{{ADl{ce}}}}}{{f{c}}}NdBHb}{{{f{AKf}}}{{f{Ef}}}}{{{f{BKb}}}{{f{B`}}}}{{{f{CnBFn}}}{{Bd{FhBb}}}}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}}{{Cb{{f{{Ab{c}}}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{BJd}}}{{Cb{{f{BKd}}}}}}{{{f{BKf}}}{{Cb{{f{BKd}}}}}}{{{f{BKh}}}{{f{{l{Aj}}}}}}{{{Fn{BGj}}}BGj}{{{f{BJb}}{Cb{{f{Al}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}{{{ADl{{BKj{c}}e}}}{{ADl{ce}}}{}BHb}{{{ADl{{Ab{{BKj{c}}}}e}}}{{ADl{{Ab{c}}e}}}{}BHb}{{{f{Al}}}BGj}{{BGj{Cb{M`}}}BGj}{{{f{BKl}}}{{Bd{{l{Aj}}Bb}}}}{{{f{BKl}}}{{l{Aj}}}}{{{f{{Jb{JhJd}}}}{f{Jf}}{f{AJh}}}{{Jb{JnJd}}}}`{{{BGd{{Ch{BGh}}}}{Cb{{ADl{B@l}}}}}{{Bd{BKnBb}}}}{{{BL`{c}}{f{B@l}}}{{Bd{{BLb{c}}Bb}}}BLd}{{{BLf{c}}{f{B@l}}}{{Bd{{BLh{c}}Bb}}}BLd}{{{BLj{c}}Fh}{{Bd{BLlBb}}}BGh}{{{BLn{c}}{f{B@l}}}{{Bd{{BM`{c}}Bb}}}BLd}{{{f{Cn{BGd{c}}}}}{{Bd{BMbBb}}}BGh}`{BGjBMd}{{BGjBMfBGj}BGj}{{{f{BFn}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{c}}}{{f{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{ADl{ce}}}}}{{f{c}}}NdBHb}11111111111111{{{f{Cnc}}}{{f{Cne}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BBlM`cF`}BBl{{Hf{{Ab{BGj}}}}}}{BCh{{Ch{Cf}}}}`{BBlBBl}```{{{f{BMh}}{f{Al}}}{{Bd{EhBb}}}}{{BMj{Fn{BGj}}}{{Bd{BGjBb}}}}{{{f{AJn}}{f{AJn}}c}{{Bd{AJnBb}}}ALf}{{{f{BIn}}{f{Cn{Ab{B`}}}}}{{Bd{{Cb{B`}}Bb}}}}{{{f{BMl}}B`B`}{{Bd{B`Bb}}}}{{BMj{Fn{BGj}}}BGj}{{{f{BMn}}}b}{{BGjEf}BGj}{{{f{AEn}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{ALh}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{BFn}}{f{Ef}}}{{Bd{B`Bb}}}}{{BBl{BN`{{f{Al}}EfNj}}d}BBl}4{{BBlEfd}BBl}4`{BGjBNb}{{{f{{ADl{c}}}}}{{Cb{{f{AIj}}}}}{AIjNd}}{BGjBGj}{{{f{BNd}}}{{Bd{B`Bb}}}}1`{{{f{BNf}}}{{Bd{{l{In}}Bb}}}}{{{f{BAf}}{f{BAf}}{Cb{{f{{Ab{Eh}}}}}}{f{Al}}}{{Bd{bBb}}}}{{{f{B@l}}{f{B@l}}{Cb{{f{{Ab{Eh}}}}}}{f{Al}}}{{Bd{bBb}}}}0``{{{f{BNh}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BFn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BNh}}c}{{Bd{B`Bb}}}Ah}{{{f{BFn}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{Fh}}}}}}}}``{{{f{BFn}}}{{f{{Fn{{Ch{Cf}}}}}}}}{{{f{CnBFn}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGjBGjBGj}BGj}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGjBGj}BGj}10{{{f{BNj}}}BNj}{{{f{BAl}}}BAl}{{{f{BCb}}}BCb}{{{f{BNl}}}BNl}{{{f{AO`}}}AO`}{{{f{BNn}}}BNn}{{{f{BO`}}}BO`}{{{f{BOb}}}BOb}{{{f{BOd}}}BOd}{{{f{Ol}}}Ol}{{{f{Nf}}}Nf}{{{f{BOf}}}BOf}{{{f{BOh}}}BOh}{{{f{BOj}}}BOj}{{{f{BOl}}}BOl}{{{f{BOn}}}BOn}{{{f{C@`}}}C@`}{{{f{C@b}}}C@b}{{{f{C@d}}}C@d}{{{f{BMn}}}BMn}{{{f{BBl}}}BBl}{{{f{C@f}}}C@f}{{{f{BH`}}}BH`}{{{f{C@h}}}C@h}{{{f{C@j}}}C@j}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{BFl}}}BFl}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{BHj}}}BHj}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{BHh}}}BHh}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{BK`}}}BK`}{{{f{BGj}}}BGj}{{{f{CCn}}}CCn}{{{f{BMf}}}BMf}{{{f{{BHn{c}}}}}{{BHn{c}}}ABd}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{BIb}}}BIb}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{BMj}}}BMj}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{{ADl{ce}}}}}{{ADl{ce}}}Nd{BHbABd}}{{{f{CEl}}}CEl}{{{f{N`}}}N`}{{{f{BCf}}}BCf}{{{f{B@l}}}B@l}{{{f{BCh}}}BCh}{{{f{AMl}}}AMl}{{{f{BAf}}}BAf}{{{f{Ml}}}Ml}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{BFn}}}{{ADl{BFn}}}}{{{f{c}}{f{Cne}}}b{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CFd}}}{{Cb{{f{CFf}}}}}}``{{{f{AO`}}{f{AO`}}}ANn}{{{f{{ADl{ce}}}}{f{{ADl{ce}}}}}ANn{CFhNd}BHb}{{{f{{Ab{BGj}}}}}BGj}{{BHdCAb}BHd}{{{f{CAb}}{f{CAf}}}d}`{{{f{{Ab{B`}}}}}{{Bd{B`Bb}}}}{{{f{Al}}}BGj}{BBl{{Bd{AOfBb}}}}{c{{Bd{{Fn{AOf}}Bb}}}{{Hj{}{{Cd{BBl}}}}}}{AMde{}{{AKb{c}}AIf}}0{{AMdADb}e{}{{AKd{c}}AIf}}0{{ABj{f{Al}}}{{l{c}}}Dd}{{ABl{f{{l{c}}}}}{{l{c}}}Dd}10{{ABl{f{Al}}Ef}{{l{c}}}Dd}0{BBl{{Bd{BMnBb}}}}{cBGj{{BBn{Eh}}}}{{{f{CEl}}Fh}CFj}``{{{f{BGb}}{Fn{{f{Al}}}}{Cb{{f{Al}}}}d}{{Bd{AOfBb}}}}`{{{f{c}}{f{e}}}ANn{}{}}0``{{{f{CCd}}}{{Bd{{ADl{B@l}}Bb}}}}{{cCEj}{{Bd{BBlBb}}}{{Hf{{Ab{BBl}}}}}}{{{f{BKl}}{f{{l{Aj}}}}}{{l{Aj}}}}{{ed}{{Bd{BGjBb}}}{{AMj{BGj}}ABd}{{Hf{{Ab{c}}}}}}{{{f{CFd}}{Fn{BBl}}}{{Bd{BBlBb}}}}{{{f{CBj}}{Fn{BBl}}}{{Bd{BBlBb}}}}44{e{{Bd{BGjBb}}}{{AMj{BGj}}ABd}{{Hf{{Ab{c}}}}}}{{c{f{Al}}d}BGj{{Hf{{Ab{BGj}}}}}}{{BIfc}BGj{{AMj{BGj}}}}{{{f{CFl}}{f{{Ab{A`}}}}}{{l{An}}}}{{{f{BKl}}{f{Al}}d}{{Bd{{l{An}}Bb}}}}{{BIhc}BGj{{AMj{BGj}}}}{{{f{B@l}}{f{Al}}}d}{{{f{CFl}}{f{{l{n}}}}}{{l{An}}}}{{{f{BKl}}{f{{l{Aj}}}}dd}{{Bd{{l{An}}Bb}}}}{{{f{BKl}}{f{Al}}}{{Bd{{l{An}}Bb}}}}{{{f{Cf}}{f{ADb}}}{{Ch{Cf}}}}{{{f{B`}}Fh}{{Bd{{l{El}}Bb}}}}{BBlBBl}{BGjBGj}{{{f{BKl}}{f{Al}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKl}}{f{{l{Aj}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{CFn}}A`{Cb{A`}}{Cb{{f{BOl}}}}A`d}{{Bd{FhBb}}}}{{{ALb{Al}}}Ef}{{{f{BFj}}{f{{Ab{Nf}}}}d}AOf}{{{f{CG`}}c}{{Ch{CGb}}}BLd}{{{f{CGd}}c}{{Ch{CGb}}}BLd}`{{{f{CGf}}{f{AOf}}{Cb{{f{Al}}}}{Cb{{Gf{GbFh}}}}}{{Bd{AOfBb}}}}{{BBlBBl}BBl}{{{f{CGf}}{f{AOf}}{Cb{{Gf{GbFh}}}}d}{{Bd{{Gf{AOfAOf}}Bb}}}}{{{f{B`}}d}{{Bd{B`Bb}}}}{{BGjd}BGj}{{BGjced}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHnABd}{{Hf{{Ab{BGj}}}}}}212121{{ce}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHnABd}{{Hf{{Ab{BGj}}}}}}32{{CGhBGjFhd}BGj}`{{{f{BCh}}}{{f{ADb}}}}{{{f{AMl}}}{{f{ADb}}}}```{{BGjBGjAO`BNn{Cb{Jf}}{Cb{Eh}}}BGj}`{CDfBGj}`11{AJfGb}00{{{f{CGj}}}{{l{Mb}}}}{{{f{CGl}}}{{l{Mb}}}}{{{f{BNf}}}{{Bd{{l{Mb}}Bb}}}}`{{{f{CGn}}}{{l{Jd}}}}{{{f{AO`}}}Gb}`{{{f{AO`}}}d}```{{}b}{cbBHb}{{}CG`}{{}CGd}{{}BAl}{{}BCb}{{}BOb}{{}BOf}{{}BOh}{{}BOj}{{}C@`}{{}C@b}{{}C@d}{{}BBl}{{}C@h}{{}C@j}{{}C@n}{{}BFl}{{}CAb}{{}CAd}{{}CAh}{{}CAj}{{}CAl}{{}CAn}{{}CBb}{{}CBh}{{}BHj}{{}CBn}{{}CC`}{{}CCb}{{}CCd}{{}BGj}{{}{{BHn{{ADl{BHl}}}}}}{{}{{BHn{{ADl{CH`}}}}}}{{}{{BHn{{ADl{BMl}}}}}}{{}CDf}{{}CDh}{{}CDl}{{}CDn}{{}CE`}{{}CEb}{{}CEd}{{}CEh}{{}CEj}{{}{{ADl{c}}}CHb}{{}N`}{{}BCf}{{}B@l}{{}AMl}{{}BAf}{{}Ml}`{{}{{Oh{{Fn{Ol}}{Fn{Nf}}}}}}{Fh{{f{c}}}{}}00{{{f{{AJb{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BHn{c}}}}}f{}}22222222222222222{{{f{{ADl{ce}}}}}{{f{c}}}NdBHb}3333333333333{Fh{{f{Cnc}}}{}}0{{{f{Cn{AJb{c}}}}}{{f{Cn}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CCd}}}{{Bd{EhBb}}}}{{{f{BBl}}}{{Bd{EhBb}}}}0001{{{f{{ADl{c}}}}}{{f{Al}}}{AIjNd}}{{{f{AMl}}{f{CHd}}}{{Bd{CHfBb}}}}```{{{f{B`}}GbCHh}{{Bd{B`Bb}}}}{{BIhGbCHh}BGj}{{BGjGbCHh}BGj}{{{f{CCd}}}{{Bd{{`{B@j}}Bb}}}}`{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{BGjBGj}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}{{BGjc}BGj{{AMj{BGj}}}}{{{ADl{ADdc}}}{{Bd{{ADl{ec}}{ADl{ADdc}}}}}BHb{ADdHlHn}}{{{ADl{ADdc}}}{{ADl{ec}}}BHb{ADdHlHn}}{{{f{{ADl{ce}}}}}{{CHj{ce}}}Nd{ABdBHb}}{Fhb}0000000000000000000000000000000000000000000000{{{f{CnBMn}}}b}11{{BBle}BBl{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}22222222222222222222222222222222222222222222222222222222{{{f{Cn{ADl{ce}}}}}bNdBHb}33333333333333{BGjBGj}{{BBl{Cb{{Fn{BGj}}}}}BBl}1{{{f{BFn}}}B`}{{{f{{Jb{JhJd}}}}{f{Jf}}{f{AJh}}}{{Jb{JnJd}}}}`{BGjCHl}{{{f{ALh}}}{{f{Ef}}}}{{{f{BFn}}}{{f{Ef}}}}`{{{f{Ef}}}BGj}{cBGj{{Hf{{Ab{Ef}}}}}}`{CDhBGj}``{{{f{c}}}e{}{{CI`{CHn}}}}0`{{{f{CFl}}{f{{Ab{A`}}}}}{{l{An}}}}{{{f{CFl}}{f{{l{n}}}}}{{l{An}}}}{{AO`{f{Ef}}{f{Al}}}{{Bd{bBb}}}}{{AO`{Cb{{f{Al}}}}{f{Al}}}{{Bd{bBb}}}}`{{{f{BNj}}{f{BNj}}}d}{{{f{BAl}}{f{BAl}}}d}{{{f{BCb}}{f{BCb}}}d}{{{f{AO`}}{f{AO`}}}d}{{{f{BNn}}{f{BNn}}}d}{{{f{BO`}}{f{BO`}}}d}{{{f{BOb}}{f{BOb}}}d}{{{f{Ol}}{f{Ol}}}d}{{{f{BOf}}{f{BOf}}}d}{{{f{BOh}}{f{BOh}}}d}{{{f{BOj}}{f{BOj}}}d}{{{f{BOl}}{f{BOl}}}d}{{{f{BOn}}{f{BOn}}}d}{{{f{C@`}}{f{C@`}}}d}{{{f{C@b}}{f{C@b}}}d}{{{f{C@d}}{f{C@d}}}d}{{{f{C@f}}{f{C@f}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{C@j}}{f{C@j}}}d}{{{f{C@l}}{f{C@l}}}d}{{{f{C@n}}{f{C@n}}}d}{{{f{BFl}}{f{BFl}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{CAd}}{f{CAd}}}d}{{{f{CAf}}{f{CAf}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{BK`}}{f{BK`}}}d}{{BGjc}BGj{{AMj{BGj}}}}{{{f{BGj}}{f{BGj}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{BMf}}{f{BMf}}}d}{{{f{{BHn{{ADl{c}}}}}}{f{{BHn{{ADl{c}}}}}}}dNd}{{{f{{BHn{B`}}}}{f{{BHn{B`}}}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{BIb}}{f{BIb}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{{ADl{ce}}}}{f{{ADl{ce}}}}}d{CIbNd}BHb}{{{f{{ADl{CId}}}}{f{CId}}}d}{{{f{{ADl{Cf}}}}{f{Cf}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{N`}}{f{N`}}}d}{{{f{BCf}}{f{BCf}}}d}{{{f{B@l}}{f{B@l}}}d}{{{f{BCh}}{f{BCh}}}d}{{{f{BCh}}{f{{f{Cf}}}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{BAf}}{f{BAf}}}d}{{{f{Ml}}{f{Ml}}}d}{{{f{CFb}}{f{CFb}}}d}{{BGjc}BGj{{AMj{BGj}}}}{{{f{{AFb{}{{Cd{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CIfBGjd}BGj}{{{f{BJd}}{f{AOf}}{f{CIh}}}{{Bd{B`Bb}}}}{{{f{BKf}}{f{AOf}}}{{Bd{B`Bb}}}}{{{f{BJd}}{f{AOf}}{f{Bh}}{f{CIh}}}{{Bd{CIjBb}}}}{{{f{BJl}}{f{AOf}}{f{Bh}}{f{CIh}}}{{Bd{B`Bb}}}}``{{BGjc}BGj{{BBn{Eh}}}}{{BGjc}BGj{{Hf{{Ab{Ef}}}}}}{{{f{Cnc}}e}{{Bd{{f{Cng}}B@f}}}{}CIl{}}{{{f{BBl}}d}{{Bd{EhBb}}}}{{{f{AFd}}}{{Bd{B`Bb}}}}{{BBle}BBl{{AMj{BGj}}ABd}{{Hf{{Ab{c}}}}}}{BGjBGj}{{{f{AFd}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}``{{BGjBGjBGj}BGj}{{{f{CG`}}}CFn}{{{f{CGd}}}CFn}{{{f{BKl}}{f{{l{Aj}}}}Fh}{{Bd{{l{Aj}}Bb}}}}{Nf{{Gf{M`M`}}}}{{{f{BKl}}{f{Al}}}{{Bd{{l{j}}Bb}}}}{{{f{BKl}}{f{{l{Aj}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BKl}}{f{Al}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{AA`}}}d}``{{{f{BMn}}}{{Cb{{Bd{AOfBb}}}}}}{{BBlFh}{{Bd{AOfBb}}}}{{{f{BMn}}}{{Bd{AOfBb}}}}{{{f{AA`}}}{{f{Mn}}}}{{{f{BFn}}}{{Dl{Mn}}}}{{CInGb}BGj}{{CIn{f{Al}}}BGj}{{{f{BCh}}}{{f{{Ab{AMl}}}}}}```{{BBlc}BBl{{AMj{BGj}}}}{{BGjc}BGj{{AMj{BGj}}}}`10{{BGjAF`}BGj}{{{f{AFf}}c}{{Bd{AFfBb}}}{}}{{{f{AFh}}{f{{l{An}}}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{BFn}}{f{{l{An}}}}}{{Bd{B`Bb}}}}{{BBlBGj}BBl}5{{BAfc}BAf{{Dh{Fh{f{AMl}}}{{Df{d}}}}}}{{{f{BJl}}B`{f{Bh}}{f{CIh}}}{{Bd{B`Bb}}}}{{{f{BKl}}{f{Al}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKl}}{f{{l{Aj}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BKl}}{f{Al}}}{{Bd{{l{El}}Bb}}}}{CJ`{{Bd{AOfBb}}}}{{{f{CnCGb}}{f{CnAOf}}}{{Bd{bBb}}}}{AAb{{l{c}}}Dd}{{ALf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{BHdBBl}{{{BGd{c}}}{{Bd{AOfBb}}}BGh}{{{f{Cn{BL`{c}}}}{f{CnAOf}}}{{Bd{bBb}}}BLd}{{{CJb{c}}}{{Bd{AOfBb}}}BGh}{{{BIj{c}}}{{Bd{AOfBb}}}BIl}{{{f{Cn{CJd{c}}}}{f{CnAOf}}}{{Bd{bBb}}}BLd}{{{f{Cn{BLf{c}}}}{f{CnAOf}}}{{Bd{bBb}}}BLd}{{{f{Cn{CJf{c}}}}{f{CnAOf}}}{{Bd{bBb}}}BLd}{{{CJh{c}}}{{Bd{AOfBb}}}BGh}{{{CJj{c}}}{{Bd{AOfBb}}}BGh}{{{BLj{c}}}{{Bd{AOfBb}}}BGh}{{{BLn{c}}{f{CnAOf}}}{{Bd{IlBb}}}BLd}{CFd{{Bd{BBlBb}}}}{CBj{{Bd{BBlBb}}}}{{{f{CnAA`}}}{{l{j}}}}21{BHh{{Bd{BBlBb}}}}{{{CJb{c}}{Cb{{ADl{BGf}}}}d}{{Bd{AOfBb}}}BGh}{{{f{BLl}}Fh}d}{{}BGj}{BIhBGj}{BBlBBl}{BGjBGj}`0``{{}{{BHn{{ADl{BHl}}}}}}{{{f{BNd}}}{{Bd{B`Bb}}}}2{{BGjBGj}BGj}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{Cn{ADl{CJl}}}}}{{Bd{bB@f}}}}{{{f{BIn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BNj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BCb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BNl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AO`}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{BNn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BO`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Ol}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Nf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{f{BJd}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@b}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@d}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@f}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@h}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@j}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BHf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@l}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@n}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CIj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CJn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BFl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CA`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAf}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CAh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAj}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CAl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CB`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BGj}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CCn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMf}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{{BHn{c}}}}{f{CnGj}}}{{Bd{bGl}}}{}}{{{f{CD`}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CDb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CDd}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{BIb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CDf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CE`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{ADl{ce}}}}{f{CnGj}}}{{Bd{bGl}}}NdBHb}{{{f{{ADl{ce}}}}{f{CnGj}}}{{Bd{bGl}}}{ADfNd}BHb}{{{f{{ADl{ce}}}}{f{CnGj}}}{{Bd{bGl}}}{B@jNd}BHb}{{{f{CHf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{N`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BCf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{B@l}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BCh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AMl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Ml}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CF`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CFb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Al}}BD`}Eh}```{{BGjce}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHnABd}{{Hf{{Ab{BGj}}}}}}{{BHdd}BHd}``{{{f{Al}}c}{{Bd{BGjBb}}}{{Hf{{Ab{BGj}}}}}}{{BGj{Cb{M`}}}BGj}{cc{}}000000000000000000000000000000000{M`Ol}111111111{{{f{Al}}}BOl}22222{BH`BBl}{CCdBBl}4444444444{CAfBFl}555555555555555555555555555{{{f{Al}}}BGj}6{MdBGj}{IjBGj}{GbBGj}{dBGj}{LfBGj}{A`BGj}{LjBGj}{BK`BGj}{M`BGj}{L`BGj}{IlBGj}{LnBGj}{cc{}}00{CK`{{BHn{{ADl{BIn}}}}}}{CKb{{BHn{{ADl{BIn}}}}}}{CKd{{BHn{{ADl{BIn}}}}}}{CDb{{BHn{{ADl{BIn}}}}}}{CD`{{BHn{{ADl{BIn}}}}}}{CKf{{BHn{{ADl{BIn}}}}}}{CKh{{BHn{{ADl{BIn}}}}}}{BIb{{BHn{{ADl{BIn}}}}}}{CKj{{BHn{{ADl{BIn}}}}}}{CKl{{BHn{{ADl{BIn}}}}}}:::{CDbBIb};{CKfBIb}{CD`BIb}{CKbBIb}>>>>>>{CEbCE`}??????{CFn{{ADl{CKn}}}}{cc{}}{CL`{{ADl{CLb}}}}{{{Ch{ce}}}{{ADl{ce}}}NdBHb}{{{f{CLd}}}{{ADl{CLd}}}}{{{f{CLb}}}{{ADl{CLb}}}}{{{f{CKn}}}{{ADl{CKn}}}}{c{{ADl{c}}}{}}{Eh{{ADl{Al}}}}{{{Dl{c}}}{{ADl{c}}}{CLfNd}}{CLhc{}}{{{f{{Ab{c}}}}}{{ADl{{Ab{c}}}}}ABd}{CLj{{ADl{CLd}}}}{{{Fn{ce}}}{{ADl{{Ab{c}}e}}}{}{BHbABd}}{{{ADl{Al}}}{{ADl{{Ab{A`}}}}}}{{{O`{c}}}{{ADl{{Ab{c}}}}}{}}{{{f{Al}}}{{ADl{Al}}}}?{CLlCHf}{cc{}}000{BAfB@l}{{{f{BAf}}}B@l}2{{{ADl{BAf}}}B@l}{{{f{{ADl{BAf}}}}}B@l}{{{f{BAh}}}B@l}{{{f{{Ab{B`}}}}}B@l}6{CLnBCh}{CM`BCh}88{{{Fn{AMl}}}BAf}9999{{c{Cb{Hb}}}CMb{}}{{{CMd{Gb}}{CMd{A`}}{Cb{Hb}}}CMf}{{{CMd{Gb}}{CMd{A`}}{Cb{Hb}}}CMh}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}00{c{{AJb{{l{An}}}}}{{Gh{}{{Cd{d}}}}}}{c{{AJb{{l{e}}}}}{{Gh{}{{Cd{}}}}}Ad}{e{{ADl{{Ab{c}}}}}{}{{Gh{}{{Cd{c}}}}}}{eB@l{{AMj{Mn}}}{{Gh{}{{Cd{c}}}}}}{{gFh}{{CMj{Gb}}}Hf{{Gh{}{{Cd{{Cb{c}}}}}}}{{Gh{}{{Cd{{Cb{e}}}}}}}}0{e{{CMj{Gb}}}{{Gh{}{{Cd{{Cb{d}}}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{{{f{Al}}e}ABh{}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{gADb}{{CMj{Gb}}}BEf{{Gh{}{{Cd{{Cb{c}}}}}}}{{Gh{}{{Cd{{Cb{e}}}}}}}}673{{{f{Al}}e}ABh{}{{Cj{}{{Cd{c}}}}}}{c{{AJb{{l{e}}}}}{{Hj{}{{Cd{}}}}}Ad}{e{{ADl{{Ab{c}}}}}Hl{{Hj{}{{Cd{c}}}}}}`{c{{Bd{{CJj{CJl}}Bb}}}{{AMj{CFn}}}}{{}{{ADl{c}}}Nd}{c{{ADl{ec}}}BHbNd}{{{f{Al}}{f{{Ab{c}}}}}ABh{}}{{{f{Al}}{f{{Ab{{Cb{c}}}}}}}ABh{}}{{{f{Al}}}{{Bd{CMl}}}}{c{{AJb{{l{An}}}}}{{Ib{}{{Cd{d}}}}}}{c{{AJb{{l{e}}}}}{{Ib{}{{Cd{}}}}}Ad}{Ef{{BHn{{ADl{BHl}}}}}}{{{f{Al}}c}CMn{}}{{{Fn{c}}ADb}{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{Fn{c}}ADb}{{AIf{}{{AKh{e}}{AKj{c}}{AKl{g}}}}}{AKn{AL`{e}}}ABd{{G`{}{{Cd{e}}}}IbHlHn}}`{{{f{Al}}cFh}AFj{}}{{FhcADb}{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{Al}}Fh}AFl}{{FhADb}{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}``{{BGjc{BHn{{ADl{BHl}}}}CN`}BGj{{Dh{B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}`{{BGjc}BGj{{AMj{BGj}}}}{{BGjFhFh}BGj}{{{f{{ADl{ce}}}}{f{{ADl{ce}}}}}d{CNbNd}BHb}{{{f{BFn}}Fh}{{Bd{IdBb}}}}{{BIfBGjd}BGj}{{BIhBGjd}BGj}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}Fh}{{Cb{c}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}6{{{f{B@l}}{f{Al}}}{{Cb{{f{Ef}}}}}}{{{f{AFn}}Fh}{{Bd{IdBb}}}}{{{f{ALh}}Fh}{{Bd{IdBb}}}}{{{f{AFn}}Fh}Id}{{{f{ALh}}Fh}Id}{{{f{B@l}}Fh}{{Cb{{Gf{{f{{ANh{ANf}}}}{f{Ef}}}}}}}}{{{f{CnB@l}}Fh}{{Cb{{Gf{{f{Cn{ANh{ANf}}}}{f{CnEf}}}}}}}}{BNbBGj}{{{f{BBl}}}CEd}{{{f{CEf}}}Ef}{{}Ef}{{{f{BOd}}GbBNn{Cb{{f{AJh}}}}}{{Bd{BNlBb}}}}00{{{f{CH`}}{f{B@l}}CNd{f{Mn}}{f{Mn}}}{{Cb{Mn}}}}{{{f{BHl}}{f{B@l}}CNd{f{{Ab{Mn}}}}}Mn}{{{f{B@l}}{f{Al}}}{{Cb{Mn}}}}{{{f{ADb}}}{{f{{Ab{AMl}}}}}}{{{f{CNf}}}Fh}{{{f{B@l}}{f{Al}}}{{Cb{{Gf{Fh{f{{ANh{ANf}}}}{f{Ef}}}}}}}}{{{f{Cn{BLj{c}}}}}{{Bd{{f{{ADl{CEl}}}}Bb}}}BGh}{{{f{Cn{ADl{ce}}}}}{{Cb{{f{Cnc}}}}}NdBHb}{{{f{Cn{ADl{ce}}}}}{{f{Cnc}}}NdBHb}{{{f{CNh}}}{{Fn{{f{Al}}}}}}{{{f{B@l}}}{{Fn{{f{Al}}}}}}{{{f{BAf}}}{{Fn{{f{Al}}}}}}{{{f{BFn}}Fh}{{Cb{{f{If}}}}}}{{{f{BFn}}FhFh}{{Cb{{f{If}}}}}}{{{f{BIn}}}{{Cb{{BHn{{ADl{BHl}}}}}}}}{{{f{BOd}}BNlBNnJf{Cb{{f{AJh}}}}BOb}{{Bd{CNjBb}}}}{{{f{BOf}}}{{ADl{BOh}}}}{{{f{Cnc}}}{{Bd{CNlBb}}}{BIlBGhNd}}{{{f{CJn}}{f{B@l}}}{{Bd{{ADl{B@l}}Bb}}}}{{cFh}{{Fn{{Gf{FhFh}}}}}{{Cj{}{{Cd{Fh}}}}}}{{{f{ANj}}Fh}Id}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}Fh}{{Cb{c}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{BFn}}Fh}Id}{{{f{CFd}}}d}{{{f{CBj}}}d}`{{BBle}BH`{{AMj{BGj}}ABd}{{Hf{{Ab{c}}}}}}{{{f{CNn}}{Fn{B`}}{f{BAl}}}{{Bd{{Gf{B`{Fn{B`}}Bh}}Bb}}}}{{BBlBGjcBAl}BH`{{Hf{{Ab{BGj}}}}}}2{{AO`AO`{f{{Ab{Gb}}}}BNnJf{Cb{AJh}}}{{Bd{{Fn{{O`{M`}}}}Bb}}}}{{BOd{f{{Ab{Gb}}}}BNnJf{f{{Cb{Eh}}}}ddBOb}{{Gf{{Fn{{O`{M`}}}}{Fn{Gb}}{Fn{Gb}}}}}}{{{f{BDl}}dd}{{Bd{BhBb}}}}{{{f{{AFb{}{{Cd{c}}}}}}e}c{}{}}{{BGjc}BGj{{AMj{BGj}}}}{{{f{{ADl{ce}}}}{f{{ADl{ce}}}}}d{CNbNd}BHb}21`{{{f{BFn}}}d}{{{f{CO`}}}d}`{{{f{BAl}}{f{Cnc}}}bAG`}{{{f{BCb}}{f{Cnc}}}bAG`}{{{f{AO`}}{f{Cnc}}}bAG`}{{{f{BNn}}{f{Cnc}}}bAG`}{{{f{BO`}}{f{Cnc}}}bAG`}{{{f{BOb}}{f{Cnc}}}bAG`}{{{f{BOf}}{f{Cnc}}}bAG`}{{{f{BOh}}{f{Cnc}}}bAG`}{{{f{BOj}}{f{Cnc}}}bAG`}{{{f{BOl}}{f{Cnc}}}bAG`}{{{f{BOn}}{f{Cnc}}}bAG`}{{{f{C@`}}{f{Cnc}}}bAG`}{{{f{C@b}}{f{Cnc}}}bAG`}{{{f{C@d}}{f{Cnc}}}bAG`}{{{f{C@f}}{f{Cnc}}}bAG`}{{{f{C@h}}{f{Cnc}}}bAG`}{{{f{C@j}}{f{Cnc}}}bAG`}{{{f{C@l}}{f{Cnc}}}bAG`}{{{f{C@n}}{f{Cnc}}}bAG`}{{{f{BFl}}{f{Cnc}}}bAG`}{{{f{CA`}}{f{Cnc}}}bAG`}{{{f{CAb}}{f{Cnc}}}bAG`}{{{f{CAd}}{f{Cnc}}}bAG`}{{{f{CAf}}{f{Cnc}}}bAG`}{{{f{CAh}}{f{Cnc}}}bAG`}{{{f{CAj}}{f{Cnc}}}bAG`}{{{f{CAl}}{f{Cnc}}}bAG`}{{{f{CAn}}{f{Cnc}}}bAG`}{{{f{CB`}}{f{Cnc}}}bAG`}{{{f{CBb}}{f{Cnc}}}bAG`}{{{f{CBd}}{f{Cnc}}}bAG`}{{{f{CBf}}{f{Cnc}}}bAG`}{{{f{CBh}}{f{Cnc}}}bAG`}{{{f{CBl}}{f{Cnc}}}bAG`}{{{f{CBn}}{f{Cnc}}}bAG`}{{{f{BK`}}{f{Cnc}}}bAG`}{{{f{BGj}}{f{Cnc}}}bAG`}{{{f{CCn}}{f{Cnc}}}bAG`}{{{f{BMf}}{f{Cnc}}}bAG`}{{{f{CD`}}{f{Cnc}}}bAG`}{{{f{CDb}}{f{Cnc}}}bAG`}{{{f{CDd}}{f{Cnc}}}bAG`}{{{f{BIb}}{f{Cnc}}}bAG`}{{{f{CDj}}{f{Cnc}}}bAG`}{{{f{CDl}}{f{Cnc}}}bAG`}{{{f{CDn}}{f{Cnc}}}bAG`}{{{f{CE`}}{f{Cnc}}}bAG`}{{{f{CEb}}{f{Cnc}}}bAG`}{{{f{CEf}}{f{Cnc}}}bAG`}{{{f{CEh}}{f{Cnc}}}bAG`}{{{f{CEj}}{f{Cnc}}}bAG`}{{{f{{ADl{ce}}}}{f{Cng}}}b{CObNd}BHbAG`}{{{f{BCf}}{f{Cnc}}}bAG`}{{{f{B@l}}{f{Cnc}}}bAG`}{{{f{AMl}}{f{Cnc}}}bAG`}{{{f{Ml}}{f{Cnc}}}bAG`}{{{f{CFb}}{f{Cnc}}}bAG`}{{{f{COd}}{f{B`}}CAjd}{{Bd{{Gf{{Gf{{Fn{M`}}{Fn{M`}}}}d}}Bb}}}}{{{f{COd}}{f{B`}}CAjd}{{Bd{{Gf{{AIn{M`}}{AIn{M`}}}}Bb}}}}{{BIhBGj}BGj}{{BH`{Cb{Fh}}}BBl}{{BGj{Cb{Fh}}}BGj}{{{f{BKl}}}{{Bd{{l{Aj}}Bb}}}}{{{f{BKl}}}{{l{Aj}}}}`{{{f{{Ab{{f{{l{Aj}}}}}}}}{f{Al}}d}{{Bd{{l{Aj}}Bb}}}}{{{f{COf}}}{{l{Mb}}}}{{{f{CGl}}}{{l{Mb}}}}{{{f{BNf}}}{{Bd{{l{Mb}}Bb}}}}`{{{f{CGn}}}{{l{Jd}}}}`{{BHdCAf}BHd}``{{{f{Ol}}}M`}`{{{f{{Jb{JhJd}}}}{f{{l{Aj}}}}CFb{Fj{Gb}{{Df{AJf}}}}{Fj{AJf}{{Df{Gb}}}}{f{AJh}}{f{AJh}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{Al}}}}{Fj{Gb}{{Df{AJf}}}}{Fj{AJf}{{Df{Gb}}}}{f{AJh}}{f{AJh}}}{{Bd{{l{Jd}}Bb}}}}{BGjBGj}{{{f{AJf}}}d}{{{BL`{c}}d}{{BL`{c}}}BLd}``0`{{}b}{cb{ABdBHb}}{cBGj{{Hf{{Ab{Gb}}}}}}``{{{f{CNh}}{f{Al}}}{{Cb{Fh}}}}{{{f{B@l}}{f{Al}}}{{Cb{Fh}}}}{{{f{BAf}}{f{Al}}}{{Cb{Fh}}}}{{{f{{Ab{M`}}}}}{{`{{Cj{}{{Cd{Fh}}}}}}}}{{{f{CNl}}A`{Cb{Fh}}d{Cb{{f{B@l}}}}{f{CnFh}}Fh{Cb{{f{BOl}}}}{Cb{A`}}A`{Cb{{f{BOn}}}}dd{f{Cn{Cb{Fh}}}}d}{{Bd{{Gf{B@lFhFh}}Bb}}}}{{{CJh{c}}{Cb{Fh}}}{{CJh{c}}}BGh}{{{CJj{c}}{Cb{Fh}}}{{CJj{c}}}BGh}``{{}Fh}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{CnAA`}}}{{Ch{Cf}}}}{{{f{COh}}{f{AOf}}ee}{{Bd{AOfBb}}}{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{{BBlBBlcc}BBl{{AMj{BGj}}}}{{{f{CnNf}}}{{f{CnIl}}}}`{{{f{CnB@l}}Fh{ANh{ANf}}Ef}{{Bd{{Cb{Ef}}Bb}}}}{{BGjBGjGbEf}BGj}{{BGjBGjBGj}BGj}`{{{f{B`}}C@l}B`}{{BGjC@l}BGj}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BCh{{Gf{{Fn{AMl}}{Fn{{Ch{Cf}}}}{Cb{Hb}}}}}}{{{AJb{c}}}c{}}{{{ADl{ce}}}{{Cb{c}}}{}BHb}33{{{f{BGj}}}}{B@l}{{{f{BCh}}}}{COjBIh}{BIhBIh}{{{ADl{ce}}}{}NdBHb}{{BOfc}{{BGd{c}}}BGh}{B@nB`}{{{ADl{BFn}}}B`}{CElCOl}{BBn{{Fn{c}}}{}}{c{{Fn{{ANh{ANf}}}}}{}}{c{{Fn{Eh}}}{}}{{{f{CAf}}}d}{{{f{B`}}{f{B`}}{f{B`}}CBh}{{Bd{{l{An}}Bb}}}}{{BGjccCBh}BGj{{AMj{BGj}}}}{cd{{Hf{CKn}}}}{{{f{{Ab{A`}}}}}d}{{{f{AO`}}{Cb{{f{Al}}}}}d}{{{f{BFn}}}d}{{{f{B@l}}}d}{{{f{BAf}}}d}{{{f{BLl}}}d}{BGjBGj}{{{f{B`}}}{{Bd{{l{An}}Bb}}}}{{{f{AGb}}}{{Bd{{l{An}}Bb}}}}2{{{f{AO`}}}d}{{{f{B`}}{f{B`}}}{{Bd{{l{An}}Bb}}}}{{BGjc}BGj{{AMj{BGj}}}}54{{{f{AGd}}}{{Bd{{l{An}}Bb}}}}6{{{f{CGj}}}{{l{An}}}}{{{f{CGl}}}{{l{An}}}}{{{f{BNf}}}{{Bd{{l{An}}Bb}}}}{{{f{BJd}}}d}:::{{{f{BFn}}}{{l{An}}}};;0{{{f{Nf}}}d}<{{{f{Ol}}}d}`{{{f{B`}}}d}{{{f{{ADl{CJl}}}}}d}{{}d}{{{f{COn}}Ej}{{Bd{dBb}}}}{{{f{c}}}d{}}03?{{{f{CGj}}}{{l{In}}}}{{{f{CGl}}}{{l{In}}}}{{{f{BNf}}}{{Bd{{l{In}}Bb}}}}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}}{{ADj{cgADh}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{B@l}}}{{`{{Cj{}{{Cd{{Gf{{f{{ANh{ANf}}}}{f{Ef}}}}}}}}}}}}{{{f{BCh}}}{{ADj{{Fn{{Ch{CId}}}}D@`ADh}}}}{{{f{B@l}}}{{`{K`}}}}{{{f{CnB@l}}}{{`{K`}}}}11{{{f{CFd}}}{{Bd{{Cb{{Ch{Cj}}}}Bb}}}}{{BIfBGjd}BGj}{{BIhBGjd}BGj}{{{f{COh}}{f{AOf}}eeBFl}{{Bd{AOfBb}}}{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{{BBlBBlccBFl}BBl{{Hf{{Ab{BGj}}}}}}{{{f{D@b}}{f{AOf}}{f{Al}}{f{Al}}CBb{Cb{Id}}{Cb{Eh}}}{{Bd{AOfBb}}}}{{{f{D@d}}{f{AOf}}{f{Al}}{f{Al}}eeCBb{Cb{Id}}}{{Bd{AOfBb}}}{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{BBlBHd}{{{f{D@f}}{f{Al}}d}{{Bd{{l{Aj}}Bb}}}}{{{f{D@f}}{f{{l{Aj}}}}d}{{Bd{{l{Aj}}Bb}}}}{{BHdd}BHd}`{CInBGj}{D@hBGj}{{{f{CEl}}}{{f{{Cb{{Fn{D@j}}}}}}}}``{{}BGj}{BIhBGj}{BBlBBl}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}}{{Cb{c}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{BGjBGj}{D@lBBl}3{{{f{{ADl{ce}}}}{f{{ADl{ce}}}}}d{CNbNd}BHb}`{{{f{COh}}{f{AOf}}ee}{{Bd{AOfBb}}}{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{{BBlBBlcc}BBl{{AMj{BGj}}}}{{BHdc}BHd{{Hf{{Ab{BGj}}}}}}{{{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}}e{}{}{}}{{{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}c}e{}{}{}}{{c{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}}e{}{}{}}<{{{f{BFn}}}Fh}<9{{{f{B@l}}}Fh}{{{f{BCh}}}Fh}{{{f{BAf}}}Fh}{{BBlM`}BBl}{{{f{BFn}}Fh}B`}{{{f{BLl}}}d}`{BGjBIh}{cBGjD@n}{D@nBGj}{DA`BGj}{CEfBGj}{{BGjc}BGj{{AMj{BGj}}}}0``{{{CJj{c}}d}{{CJj{c}}}BGh}{{BHhd}BHh}```{BGjBGj}{{{f{D@f}}}{{l{El}}}}0{{{f{D@f}}{f{{Ab{B`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{D@f}}GbCHh}{{Bd{{l{j}}Bb}}}}{{{f{D@f}}Gbd}{{Bd{B`Bb}}}}{{{f{D@f}}{f{{l{Aj}}}}d}{{Bd{{l{Aj}}Bb}}}}4{{{f{D@f}}}{{Bd{B`Bb}}}}{{{f{D@f}}}B`}01{{{f{D@f}}}{{Bd{{l{El}}Bb}}}}{{{f{D@f}}}{{l{j}}}}{{{f{D@f}}{f{B`}}}{{Bd{{l{j}}Bb}}}}{{{f{D@f}}GbFh}{{l{j}}}}{{{f{D@f}}Ej}{{Bd{{l{j}}Bb}}}}{{{f{D@f}}A`}B`}7{{{f{D@f}}}{{Bd{{l{j}}Bb}}}}01{{{f{{AFb{}{{Cd{c}}}}}}e}c{}{}}{{BGjc}BGj{{AMj{BGj}}}}{{{f{{ADl{ce}}}}{f{{ADl{ce}}}}}d{CNbNd}BHb}21``````{{{f{AJn}}{f{AJn}}}{{Bd{{Gf{AJnAJn}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Cn{ADl{ce}}}}}{{f{Cnc}}}ABd{BHbABd}}{{D@hc}BGj{{Dh{{f{Al}}}{{Df{{Bd{EhBb}}}}}}HlHn}}{{BBlcCEd{Cb{{ADl{CJn}}}}{Cb{{f{Al}}}}}BBl{{Dh{AOf}{{Df{{Bd{AOfBb}}}}}}HlHn}}{{BGjc{BHn{{ADl{BHl}}}}}BGj{{Dh{B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}{{BGjBGjc{BHn{{ADl{BHl}}}}}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}{{BGj{f{Cnc}}{f{Cn}}}{{Bd{BGjBb}}}{{E`{BGj{f{Cn}}}{{Df{{Bd{BGjBb}}}}}}}}{{{f{CNf}}{Cb{{f{Eh}}}}}{{Bd{MnBb}}}}{{{f{CNf}}c}{{Bd{MnBb}}}{{On{{f{Ef}}}{{Df{Ef}}}}}}{c{{BHn{{ADl{BHl}}}}}{{Dh{{f{Ef}}}{{Df{Ef}}}}HlHn}}{c{{BHn{{ADl{BHl}}}}}{{Dh{{f{{Ab{{f{Ef}}}}}}}{{Df{Ef}}}}HlHn}}{{BGjc}BGj{{E`{BGj}{{Df{BGj}}}}}}{c{{BHn{{ADl{BHl}}}}}{{Dh{{f{Mn}}}{{Df{Mn}}}}HlHn}}{{D@h{ADl{Dh}}}BGj}{c{{BHn{{ADl{BHl}}}}}{{Dh{{f{{Ab{Mn}}}}}{{Df{Mn}}}}HlHn}}:{{ce{BHn{{ADl{BHl}}}}}BGj{{Dh{{f{Cn{Ab{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}{{Hf{{Ab{BGj}}}}}}{{BGjc{f{{Ab{BGj}}}}{BHn{{ADl{BHl}}}}}BGj{{Dh{{f{Cn{Ab{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHn}}{{BGjBIb{f{{Ab{BGj}}}}dd}BGj}2{{{f{CNf}}}{{Bd{MnBb}}}}{{BOfc}BOf{{Dh{BOh}{{Df{BOh}}}}}}1111{CEfCEf}{{{Cb{{f{{Ab{Fh}}}}}}{f{BAf}}{Cb{{f{{Ab{B`}}}}}}{Cb{{f{DAb}}}}}AOf}{{{Cb{{f{{Ab{Eh}}}}}}{f{B@l}}{Cb{{f{{Ab{B`}}}}}}d}{{Cb{{Fn{Fh}}}}}}{{{f{Al}}}BGj}{BIfBGj}{BIhBGj}{{{f{AGf}}}{{Cb{c}}}{}}{BBlBBl}{BGjBGj}{{{f{DAd}}}B`}{{{f{BFn}}}{{Bd{B`Bb}}}}`75{{{f{AGf}}}{{Cb{L`}}}}43{{{f{BFn}}}{{Cb{L`}}}}987{{{f{AGh}}}{{Cb{c}}}{}}651{{{f{DAf}}}B`}4{{BBlBC`}BBl}``{{{CJb{c}}{Cb{CFn}}}{{CJb{c}}}BGh}{{{f{CnB@l}}B@l}b}{{{f{Ef}}{f{Ef}}}{{Bd{EfBb}}}}````{{{f{CGn}}}{{l{Jd}}}}`{{{f{BNf}}}{{Bd{{l{In}}Bb}}}}1`{{{f{Al}}}BGj}{BIfBGj}{BIhBGj}{{{f{AGf}}}{{Cb{c}}}{}}{BBlBBl}{BGjBGj}{{{f{DAd}}}B`}{{{f{BFn}}}{{Bd{B`Bb}}}}{{{f{AGf}}}{{Cb{{Gf{cc}}}}}{}}````{{{f{COf}}}{{l{Mb}}}}{{{f{CGl}}}{{l{Mb}}}}{{{f{BNf}}}{{Bd{{l{Mb}}Bb}}}}`=```6{{{f{CGj}}}{{l{Mb}}}}21`{{{f{DAh}}{Cb{{f{AJh}}}}}{{Bd{DAhBb}}}}{{{f{DAj}}{Cb{{f{AJh}}}}}{{Bd{DAjBb}}}}{{{f{AO`}}}Gb}{{{f{AO`}}}d}{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{AO`Gb}AO`}{{BGjBGj}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{BFn}}}Fh}{{{f{CFd}}}{{Cb{Fh}}}}{{{f{CBj}}}{{Cb{Fh}}}}{{{f{BHh}}}{{Cb{Fh}}}}`````{{{BL`{c}}Fh}{{BL`{c}}}BLd}`{BIfBGj}{BIhBGj}{{{f{AEl}}}{{Bd{FhBb}}}}{BGjBGj}{{{f{BFn}}}{{Bd{FhBb}}}}{{{f{BFn}}}{{f{Al}}}}{BGjD@h}````33`{{{f{COf}}}{{l{In}}}}{{{f{CGl}}}{{l{In}}}}{{{f{BNf}}}{{Bd{{l{In}}Bb}}}}{{{f{CGn}}}{{l{Jd}}}}{{{f{AO`}}}Gb}`{{{f{{ADl{ce}}}}{f{{ADl{ce}}}}}d{CIbNd}BHb}{{{f{CAj}}}d}{BGj}{{{f{B`}}}{{Bd{B`Bb}}}}0{{{f{AO`}}}d}{{DAlFh}{{Cb{Fh}}}}{{BGjc}BGj{{AMj{BGj}}}}0{{{f{CNf}}}{{Bd{MnBb}}}}{{}c{}}{cCJ`BIl}{cCGbBLd}2{{{f{Al}}c}DAn{}}{c{{AJb{c}}}{}}{BBlBHd}{c{{BGd{c}}}BGh}{c{{BL`{c}}}BLd}{{{f{{Ab{Mn}}}}}CNf}{c{{CJb{c}}}BGh}{c{{BIj{c}}}BIl}{c{{CJd{c}}}BLd}{{}CG`}{c{{BLf{c}}}BLd}{{}CGd}{c{{CJf{c}}}BLd}{c{{CJh{c}}}BGh}{GbAO`}{{AO`AO`AO`}BOd}{c{{CJj{c}}}BGh}{{DB`{ADl{CEl}}{ADl{BAf}}Fh{Cb{{Fn{Fh}}}}{Cb{{ADl{BGf}}}}{Cb{DAb}}Fhd{Cb{{Fn{B`}}}}CAd}{{Bd{BLlBb}}}}{c{{BLj{c}}}BGh}{c{{BLn{c}}}{BLdBLd}}{CAfBFl}{cCBj{{Hf{CKn}}}}{cBHh{{Hf{CKn}}}}{c{{BHn{c}}}{}}{{BGjBGjBGj}CDf}{{}CDh}{{{f{Al}}{Fn{Mn}}{BHn{{ADl{BHl}}}}c}BMjBIn}{c{{ADl{c}}}{}}{{}B@l}{{ADb{Fn{{Ch{Cf}}}}{Cb{Hb}}}BCh}{{cADbd}AMl{{AMj{Eh}}}}{e{{ADl{c}}}{}{{On{{f{{CHj{c}}}}}{{Df{c}}}}}}{ADbBCh}{{{f{AGj}}FhFh}{{l{c}}}Dd}{{{f{BFn}}FhFh}B`}{{{f{Al}}}BOl}{{ce}{{ADl{ce}}}{}BHb}{{{f{B@l}}Fh{ANh{ANf}}Ef}{{Bd{B@lBb}}}}{{Gb{f{Al}}}{{Bd{B`Bb}}}}{EhBOl}{{ADbFh}BCh}{{{ADl{{Ab{CFn}}}}}CBj}{{{ADl{{Ab{CFn}}}}}BHh}{A`BOl}{{}{{ADl{{BKj{c}}}}}{}}{c{{ADl{{BKj{e}}c}}}BHb{}}{Fh{{ADl{{Ab{{BKj{c}}}}}}}{}}{{Fhc}{{ADl{{Ab{{BKj{e}}}}c}}}BHb{}}3210{{{f{CnDBb}}}Cb}{{{f{CnCNj}}}Cb}{{{f{CnBMb}}Fh}{{Bd{{Cb{{Fn{AOf}}}}Bb}}}}{{{f{CnBKn}}Fh}{{Bd{{Cb{{Fn{AOf}}}}Bb}}}}{{{f{CnBLl}}Fh}{{Bd{{Cb{{Fn{AOf}}}}Bb}}}}{{{f{BGj}}{f{Cn{BCn{{f{BGj}}}}}}}b}{{BGj{f{Cn{BCn{BGj}}}}}b}{BGjBGj}0{{{f{{AFb{}{{Cd{c}}}}}}e}c{}{}}0{GbBGj}`{{}Ol}{{}Nf}`{{{f{BFn}}}Fh}{BBlBBl}6````{{{f{Cn{BLj{c}}}}}{{Bd{FhBb}}}BGh}````{{{f{AFd}}}{{Bd{{Gd{Gb}}Bb}}}}{{BHdc}BHd{{Hf{{Ab{BGj}}}}}}{{BBl{f{Cn{BFf{BFd}}}}{f{Cn{BFf{BFh}}}}}{{Bd{BFbBb}}}}`{{BGjc}BGj{{AMj{BGj}}}}{{{f{CGj}}}{{l{Lh}}}}{{{f{CGl}}}{{l{Lh}}}}{{{f{BNf}}}{{Bd{{l{Lh}}Bb}}}}{{{f{BNf}}}{{Bd{{l{In}}Bb}}}}{{CChc}BGj{{AMj{BGj}}}}{{CClc}BGj{{AMj{BGj}}}}{{{f{COh}}{f{AOf}}ee}{{Bd{AOfBb}}}{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{{BBlBBlcc}BBl{{AMj{BGj}}}}`{{BGje}BGj{{AMj{BGj}}ABd}{{Hf{{Ab{c}}}}}}{{BGjeCEb}BGj{{AMj{BGj}}ABd}{{Hf{{Ab{c}}}}}}```{{{f{Al}}}AO`}{{{f{Al}}{f{{Ab{{f{Al}}}}}}{f{Al}}}{{Jb{J`In}}}}{{{f{Al}}{f{{Ab{{f{Al}}}}}}{f{Al}}}{{Jb{KbJd}}}}{{{f{Al}}{f{{Ab{{f{Al}}}}}}{f{Al}}Jf}{{Jb{JhJd}}}}``{{{f{AO`}}{f{AO`}}}{{Cb{ANn}}}}{{{f{{ADl{ce}}}}{f{{ADl{ce}}}}}{{Cb{ANn}}}{CNbNd}BHb}{{{f{CFd}}}{{f{CKn}}}}{{{f{CBj}}}{{f{CKn}}}}{{{f{BHh}}}{{f{CKn}}}}`{{{f{CFd}}}{{f{{Ab{CFn}}}}}}{{{f{CBj}}}{{f{{Ab{CFn}}}}}}{{{f{BHh}}}{{f{{Ab{CFn}}}}}}``{{}BGj}{c{{DBd{{ADl{c}}}}}{}}{{ce}{{DBd{{ADl{ce}}}}}{}BHb}````{{BGjc}BGj{{AMj{BGj}}}}```{{D@h{f{Al}}}BGj}0{{{f{AOf}}{f{AOf}}d}{{Bd{{Gf{{Oh{{Fn{M`}}{Fn{Nf}}}}{Oh{{Fn{Ol}}{Fn{Nf}}}}}}Bb}}}}`{{{f{DAd}}}B`}{BGjBGj}{BBl{{Bd{{Gf{AOfAOf}}Bb}}}}```{{{f{{ADl{c}}}}{f{CnDBf}}}b{AIjNd}}{{{f{{ADl{ce}}}}{f{{ADl{ce}}}}}dNdBHb}{{{f{Al}}BGjMl}BGj}{{{f{AGh}}L`Ml}{{Bd{{Cb{c}}Bb}}}{}}{{BBlBGjMl}BBl}{{BGjBGjMl}BGj}{{{f{DAf}}L`Ml}{{Bd{B`Bb}}}}{{{f{BFn}}L`Ml}{{Bd{B`Bb}}}}{{{f{CGj}}}{{l{Mb}}}}{{{f{CGl}}}{{l{Mb}}}}{{{f{BNf}}}{{Bd{{l{Mb}}Bb}}}}{{{f{Cnc}}e}{{Bd{{f{Cng}}B@f}}}{}CIl{}}````{{{f{DBh}}CBn{Cb{Il}}}B`}{{BGjCBn{Cb{Il}}}BGj}{{{f{Cn{ADl{CJl}}}}{f{Cn{Ab{A`}}}}}{{Bd{FhB@f}}}}{{{f{Cn{ADl{CJl}}}}DBj}{{Bd{bB@f}}}}{{{BLj{c}}CAd}{{BLj{c}}}BGh}{{{f{Cn{ADl{CJl}}}}{f{Cn{Fn{A`}}}}}{{Bd{FhB@f}}}}{{{f{Cn{ADl{CJl}}}}{f{CnEh}}}{{Bd{FhB@f}}}}{{{f{Cnc}}}{{Bd{eB@f}}}{}DBl}{{{f{Cn{ADl{CJl}}}}{f{Cn{Ab{DBn}}}}}{{Bd{FhB@f}}}}{{{f{CFd}}}d}{{{f{BFn}}}B`}{{{f{CBj}}}d}{{{f{BHh}}}d}````{{ce}BGj{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HlHnABd}{{Hf{{Ab{BGj}}}}}}{{{f{AGl}}}B`}0{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{BGjBGj}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{CnB@l}}{f{Al}}}{{Cb{Ef}}}}{{{f{CnBFn}}{f{Al}}}b}{{BBlei}BBl{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}{{Hf{Al}}}{{Gh{}{{Cd{g}}}}}}{{{f{CnB@l}}{f{Al}}{ANh{ANf}}}{{Cb{{ANh{ANf}}}}}}{{CIn{Fn{Eh}}}BGj}{{cBGj}BGj{{AMj{BGj}}}}{{{f{B`}}{f{{l{El}}}}}{{Bd{{l{j}}Bb}}}}{{BGjc}BGj{{AMj{BGj}}}}{{{f{B`}}{f{B`}}{f{B`}}{f{B`}}{Cb{Ef}}}{{Bd{B`Bb}}}}{{{f{BKl}}{f{Al}}{f{Al}}}{{Bd{{l{Aj}}Bb}}}}{{BGjcc{Cb{c}}{Cb{Ef}}}BGj{{AMj{BGj}}}}1{{{f{CNf}}{Cb{Ef}}}{{Bd{MnBb}}}}{{{f{BKl}}{f{Al}}{f{Al}}Fh}{{Bd{{l{Aj}}Bb}}}}3{{{f{{Jb{JhJd}}}}{Cb{{f{Al}}}}{f{{l{Aj}}}}CFb}{{Bd{{Jb{JhJd}}Bb}}}}{{BGj{f{{Ab{Gb}}}}}BGj}{{{f{CKn}}}CFn}`{{{f{AGn}}}AGn}{{{f{BFn}}}B`}{BIfBGj}{BIhBGj}{BBlBBl}{BGjBGj}`{{BHdc}BHd{{Hf{{Ab{BGj}}}}}}{{{f{CNn}}{Fn{B`}}{f{BCb}}}{{Bd{{Gf{B`{Fn{B`}}Bh}}Bb}}}}{{BBlBGjcBCb}BH`{{Hf{{Ab{BGj}}}}}}{{BGjBCb}BGj}{{{f{AH`}}{f{Dh}}N`}{{Bd{B`Bb}}}}{{BGj{ADl{Dh}}{BHn{{ADl{BHl}}}}N`}BGj}{{{f{BFn}}{f{Dh}}N`}{{Bd{B`Bb}}}}{{BGjFhc}BGj{{E`{{f{Cn{l{Ed}}}}}{{Df{{Cb{L`}}}}}}HlHnDj}}{{{f{DC`}}N`}{{Bd{B`Bb}}}}{{BGjN`}BGj}{{{f{DC`}}{f{B`}}BNj}{{Bd{B`Bb}}}}{{BGjBGjBNj}BGj}32102032103{{BGjMlL`N`}BGj}2{{BGjBGjMlL`BNj}BGj}543254325432{{{f{DCb}}{f{{l{Aj}}}}AO`{Cb{{f{AJh}}}}}{{Bd{DCbBb}}}}{{{f{BNd}}M`}{{Bd{B`Bb}}}}{{BGjM`}BGj}{{{f{BOd}}Gb{Cb{{f{AJh}}}}}{{Bd{GbBb}}}}0{{{f{BNd}}Lf}{{Bd{B`Bb}}}}{{BGjLf}BGj}2````{{{f{CFd}}}{{Cb{{f{DAb}}}}}}{{{f{CBj}}}{{Cb{{f{DAb}}}}}}{{{f{BHh}}}{{Cb{{f{DAb}}}}}}``````{{{f{D@f}}{l{j}}}{{l{j}}}}{{}{{BHn{{ADl{BHl}}}}}}{{BGjBGjdd{Cb{Il}}}BGj}0`{{{f{BHf}}DCd}{{Bd{AOfBb}}}}{{{f{BHh}}DCd}{{Bd{AOfBb}}}}{{cCC`}{{Bd{BBlBb}}}{{Hf{CKn}}}}{{{ADl{{Ab{CFn}}}}CC`}{{Bd{BBlBb}}}}{{cCCb}{{Bd{BBlBb}}}{{Hf{CKn}}}}{{{ADl{{Ab{CFn}}}}CCb}{{Bd{BBlBb}}}}{{DCf{f{{Ab{M`}}}}e}{{Bd{B`Bb}}}Dj{{Gh{}{{Cd{{Cb{c}}}}}}}}{{{f{AHb}}c{Cb{e}}}{{Bd{AHbBb}}}{{Gh{}{{Cd{M`}}}}}{}}{{{f{AHb}}ci}{{Bd{AHbBb}}}{{Gh{}{{Cd{M`}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{g}}}}}}}}{{{f{Cn{CJb{c}}}}}{{Bd{{ADl{BAf}}Bb}}}BGh}{{{f{Cn{BIj{c}}}}}{{Bd{B@lBb}}}BIl}{{{f{BLl}}}{{f{{ADl{BAf}}}}}}{{{f{Cn{BLj{c}}}}}{{Bd{{ADl{BAf}}Bb}}}BGh}{{{f{BBl}}}{{Bd{{ADl{B@l}}Bb}}}}{{{f{BHf}}{Cb{Fh}}}{{Bd{{ADl{B@l}}Bb}}}}{{{f{BHh}}{Cb{Fh}}}{{Bd{{ADl{B@l}}Bb}}}}{{{f{CEl}}}{{f{DCh}}}}``````{{{f{COf}}}{{l{Mb}}}}{{{f{CGl}}}{{l{Mb}}}}{{{f{BNf}}}{{Bd{{l{Mb}}Bb}}}}`{{{f{CGn}}}{{l{Jd}}}}`{{{f{Cn{ADl{CJl}}}}DCj}{{Bd{IlB@f}}}}{{BBlc}BBl{{Hf{{Ab{BGj}}}}}}0````{{{f{AHb}}{f{{l{An}}}}{Cb{c}}}{{Bd{AHbBb}}}{}}{{{f{CnB@l}}{f{Al}}Ef}{{Cb{Ef}}}}{{{f{CnB@l}}FhEf}{{Cb{Ef}}}}{{{BLj{c}}d}{{BLj{c}}}BGh}{{{BLn{c}}d}{{BLn{c}}}BLd}{{{CJb{c}}d}{{CJb{c}}}BGh}{{{BIj{c}}d}{{BIj{c}}}BIl}{{{CJh{c}}d}{{CJh{c}}}BGh}4{{CJ`d}CJ`}{{BGjIh}BGj}{{{f{CnBCh}}{Cb{Hb}}}b}{{{f{AHd}}Gb}{{l{c}}}Dd}{{{f{BFn}}Gb}B`}{{BIfBGj}BGj}{{BIhBGj}BGj}{{BBlc}BBl{{AMj{BGj}}}}{{BGjBGj}BGj}{{{f{AHf}}Gbc}{{l{e}}}{}Dd}{{BBlce}BBl{{AMj{BGj}}}{{AMj{BGj}}}}{{BGjce}BGj{{AMj{BGj}}}{{AMj{BGj}}}}{{{f{CnB@l}}{f{Al}}}{{Cb{Ef}}}}{{{f{CnB@l}}Fh}{{Cb{{Gf{{ANh{ANf}}Ef}}}}}}{BGjBGj}{{{f{CnAAb}}}b}{{{f{CnBFn}}}b}{{BGj{Cb{Il}}}BGj}``{{BBlCFnC@`}{{Bd{bBb}}}}{{BBlCFnC@h}{{Bd{bBb}}}}{{BBlCFnC@n}{{Bd{bBb}}}}{{BBlCFnCAh}{{Bd{bBb}}}}`````{{{f{BFn}}GbFh}B`}{{BIhBGjBGj}BGj}{{BBlGbM`}BBl}={{{f{CnBCh}}FhFh}b}0```{{{f{AHh}}FhFh}AHh}{{{f{c}}FhFh}e{}{}}1022{{BChFhFh}BCh}0`{{{f{AEj}}d}{{l{c}}}Dd}{{BIfEj}BGj}{{BIhEj}BGj}{{BBlcF`}BBl{{BBn{{ANh{ANf}}}}}}{{BGjEj}BGj}{{BGjeF`}BGj{{AMj{BGj}}ABd}{{Hf{{Ab{c}}}}}}{{BBlcF`}BBl{{Hf{{Ab{BGj}}}}}}{{{f{AEj}}Ej}{{l{c}}}Dd}{{{f{BFn}}Ej}{{Bd{B`Bb}}}}{{{f{{ADl{c}}}}}{{Cb{{f{AIj}}}}}{AIjNd}}{{{f{BKl}}{f{{l{Aj}}}}}{{l{j}}}}{{{f{BKl}}{f{{l{Aj}}}}Fh}{{Bd{AJlBb}}}}0{{{f{{l{Aj}}}}{f{{l{Aj}}}}e}{{l{j}}}{{Cj{}{{Cd{{f{Al}}}}}}}{{Dh{{f{Al}}{f{Al}}}{{Df{c}}}}}}2{{{f{{l{Aj}}}}{f{{l{Aj}}}}Fhed}{{Bd{AJlBb}}}{{Cj{}{{Cd{{f{Al}}}}}}}{{Dh{{f{Al}}{f{Al}}}{{Df{c}}}}}}2{BGjBGj}`{{{f{CFl}}{f{{Ab{A`}}}}}{{l{An}}}}{{{f{CFl}}{f{{l{n}}}}}{{l{An}}}}`{{BIfA`}BGj}{{BIhA`}BGj}{{{f{AHj}}A`}{{Cb{L`}}}}{{BBlA`}BBl}{{BGjA`}BGj}{{{f{BFn}}A`}{{Cb{L`}}}}{{{f{DCl}}A`}B`}{{{f{BFn}}A`}{{Bd{B`Bb}}}}{{M`M`}Nf}{BGjDCn}{{{f{{l{Aj}}}}{f{Al}}d}{{l{Aj}}}}{{{f{BKl}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}{{{f{BKl}}}{{l{El}}}}0{{{f{BKl}}}{{l{Aj}}}}{{{f{BKl}}{f{B`}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}3````{{{f{BNf}}{f{Al}}}{{Bd{B`Bb}}}}`{{BGjEf}BGj}`{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}606060{{{f{BKl}}{f{{l{Aj}}}}}{{l{Aj}}}}10{{{f{{ADl{ce}}}}}FhNdBHb}{BGjCIn}{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{BGjBGj}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}{{BHdc}BHd{{Hf{Al}}}}{{D@h{f{Al}}}BGj}{{{f{BFl}}}{{f{Al}}}}`1{{{f{Al}}}BGj}{BIfBGj}{BIhBGj}{{{f{AGf}}}{{Cb{c}}}{}}{BBlBBl}{BGjBGj}{{{f{DAd}}}B`}{{}{{BHn{{ADl{BHl}}}}}}{{{f{Cnc}}i}{{Bd{gB@f}}}{}{}{}{{On{{f{Cne}}}{{Df{g}}}}}}{{BIhBGj}BGj}{{BBlM`}BBl}{{BH`{Cb{Fh}}}BBl}{{BGj{Cb{Fh}}}BGj}{{{f{AHl}}{f{c}}}{{Bd{AHlBb}}}Nd}{{{f{BFn}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{DD`}}{f{{Ab{Nf}}}}Ih}DD`}{{{f{DD`}}{f{{Ab{Nf}}}}}DD`}{{{f{BFn}}{f{{Ab{M`}}}}}{{Bd{B`Bb}}}}{{{f{BFn}}{f{{Ab{M`}}}}}B`}{{{f{AHn}}{f{c}}}AHnNd}{{{f{BFn}}{f{{l{El}}}}}B`}{{{f{CnBCh}}}{{Cb{Hb}}}}{{BGjBGjBGj}BGj}{{CCfc}CCh{{AMj{BGj}}}}{{CCjc}CCl{{AMj{BGj}}}}`{{BGjBGjAO`BNn}BGj}```{{{f{BNf}}Jf}{{Bd{{l{Jd}}Bb}}}}{BBl{{Bd{DDbBb}}}}{CCd{{Bd{DDbBb}}}}1{{{f{CEf}}}{{Cb{Id}}}}{{BIhFh}BGj}{{{f{B@l}}d}BAf}{{{f{BCh}}}{{Ch{Cf}}}}{{{f{AI`}}}{{Fn{{f{{Ab{A`}}}}}}}}{{{f{BBl}}d}{{Bd{EhBb}}}}{{{f{DDd}}{Cb{{f{Al}}}}d}{{Bd{AOfBb}}}}{{{f{BGb}}{Cb{{f{Al}}}}d}{{Bd{AOfBb}}}}{{{f{BJd}}{f{B@l}}}{{Bd{MnBb}}}}{{{f{BGj}}{f{B@l}}CNd}{{Bd{MnBb}}}}{{{f{BKl}}{f{{l{El}}}}d}{{Bd{{l{Jd}}Bb}}}}{BIfBGj}{{{f{BKl}}}{{l{Aj}}}}{D@hBGj}{{{f{Ol}}}{{Cb{M`}}}}{{{f{c}}}e{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BGjBGj}{{{f{CNf}}}{{Bd{MnBb}}}}{{{f{BNf}}{f{Al}}}{{Bd{B`Bb}}}}{{{f{c}}}Eh{}}000000000{{{f{CnB@l}}{f{B@l}}}{{Bd{dBb}}}}`887``{{BBlM`cF`}BBl{{Hf{{Ab{BGj}}}}}}{{{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}}g{}{}{}}{{{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}c}g{}{}{}}{{c{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}}g{}{}{}}{{{f{DDf}}{Cb{{f{AJh}}}}{f{{l{Aj}}}}{f{Al}}}{{Bd{DDfBb}}}}{{{f{AO`}}Gb{Cb{{f{AJh}}}}ceg}{{Bd{GbBb}}}{{Dh{Gb}{{Df{Gb}}}}}{{Dh{Gb}{{Df{AJf}}}}}{{Dh{AJf}{{Df{Gb}}}}}}{{{f{AO`}}Gb{Cb{{f{AJh}}}}}{{Bd{GbBb}}}}{{{f{BOd}}Gb{Cb{{f{AJh}}}}}{{Bd{GbBb}}}}00010`10{g{{Bd{AKbe}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{{ADbg}{{Bd{AKde}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{AMd{{Bd{eg}}}{}{{AKb{c}}AIf}{}}0{{AMdADb}{{Bd{eg}}}{}{{AKd{c}}AIf}{}}0{{ABj{f{Al}}}{{Bd{{l{c}}e}}}Dd{}}{{ABl{f{{l{c}}}}}{{Bd{{l{c}}e}}}Dd{}}10{{ABl{f{Al}}Ef}{{Bd{{l{c}}e}}}Dd{}}0{c{{Bd{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Id{{Bd{CEfBb}}}}11{{{ADl{{Ab{c}}e}}}{{Bd{{ADl{{O`{c}}e}}}}}{}BHb}22222222222222{COl{{Bd{CElB@`}}}}{{{f{B@l}}{f{Al}}}{{Bd{{f{Ef}}Bb}}}}{{{f{B@l}}Fh}{{Bd{{Gf{{f{{ANh{ANf}}}}{f{Ef}}}}Bb}}}}{{{f{B@l}}{f{Al}}}{{Bd{MnBb}}}}{{{f{B@l}}{f{Al}}}{{Bd{{Gf{Fh{f{{ANh{ANf}}}}{f{Ef}}}}Bb}}}}{{{f{CnB@l}}{f{Al}}}{{Bd{{f{CnEf}}Bb}}}}{{{f{CNh}}{f{Al}}}{{Bd{FhBb}}}}99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{BOf{Cb{CFn}}}{{Bd{{BGd{CJl}}Bb}}}}{{{f{CNf}}c}{{Bd{MnBb}}}{{On{{f{Ef}}}{{Df{{Bd{EfBb}}}}}}}}{{{f{CNf}}c}{{Bd{MnBb}}}{{On{{f{{Ab{{f{Ef}}}}}}}{{Df{{Bd{EfBb}}}}}}}}{{BGjc}{{Bd{BGjBb}}}{{E`{BGj}{{Df{{Bd{BGjBb}}}}}}}}{{{f{CNf}}c}{{Bd{MnBb}}}{{On{{f{Mn}}}{{Df{{Bd{MnBb}}}}}}}}{{DAlFh}{{Bd{FhBb}}}}{A`{{Bd{CB`Bb}}}}{M`{{Bd{CBdBb}}}}{Lf{{Bd{CBfBb}}}}{c{{Bd{{ADl{c}}DDh}}}{}}{{ADb{Fn{{Ch{Cf}}}}{Cb{Hb}}}{{Bd{BChBb}}}}{{ce}{{Bd{{ADl{ce}}DDh}}}{}BHb}{{}{{Bd{{ADl{{BKj{c}}}}DDh}}}{}}{c{{Bd{{ADl{{BKj{e}}c}}DDh}}}BHb{}}10`{c{{Bd{{DBd{{ADl{c}}}}DDh}}}{}}{{ce}{{Bd{{DBd{{ADl{ce}}}}DDh}}}{}BHb}{{{f{BIn}}{f{Cn{Fn{A`}}}}}{{Bd{bBb}}}}{{{ADl{ce}}}{{Bd{c{ADl{ce}}}}}{}BHb}``{{{f{c}}}Oj{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Al}}}}`{{{f{AEl}}}{{Bd{AElBb}}}}{BIfBGj}{BIhBGj}{{BBl{Cb{{Fn{Eh}}}}BAb}BBl}{BGjBGj}{{{f{BFn}}}{{Bd{B`Bb}}}}4321{{BBle}BBl{{Hf{Al}}}{{Gh{}{{Cd{c}}}}}}{{{ADl{{DDj{c}}}}}{{Bd{cb}}}Hl}{{{ADl{ce}}}cABdBHb}4{{{f{DDl}}c{f{Al}}AO`AO`}{{Bd{AOfBb}}}{{BBn{Eh}}}}0{{{BLj{c}}d}{{BLj{c}}}BGh}```{{BHdCAj}BHd}`{{{f{BCh}}}{{Cb{{f{Hb}}}}}}0{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}Fh}cABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{COn}}dd}{{Bd{AOfBb}}}}{{BGjdd}BGj}`2`{{{f{BCh}}}{{f{{Ab{{Ch{Cf}}}}}}}}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}}gABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{BCh}}}D@`}{{BIfA`}BGj}{{BIhA`}BGj}{{{f{AHj}}A`}{{Cb{L`}}}}{{BBlA`}BBl}{{BGjA`}BGj}{{{f{BFn}}A`}{{Cb{L`}}}}{{{f{DCl}}A`}B`}{{{f{BFn}}A`}{{Bd{B`Bb}}}}`{{{f{DDn}}Nj{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{DDn}}Nj{f{Cn{Ab{Il}}}}}{{Bd{bBb}}}}`{{{f{{ADl{{DDj{c}}}}}}g}{{Bd{eb}}}Hl{}{{On{{f{c}}}{{Df{e}}}}}}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{{ADl{ce}}}}}FhNdBHb}{{{f{CGj}}}{{l{Mb}}}}{{{f{CGl}}}{{l{Mb}}}}{{{f{BNf}}}{{Bd{{l{Mb}}Bb}}}}210{{{f{BOb}}}{{Cb{M`}}}}{{{f{AO`}}}Gb}`{{{f{AO`}}}d}`{cCCf{{AMj{BGj}}}}{{CChc}CCj{{AMj{BGj}}}}{{CClc}CCj{{AMj{BGj}}}}```{{BHdBBl}BHd}{{CDfBGj}CDf}{{{BL`{c}}{DE`{Fh}}}{{BL`{c}}}BLd}{{{CJh{c}}{DE`{Fh}}}{{CJh{c}}}BGh}{{BHh{Cb{{DE`{Fh}}}}}BHh}{{CBjd}CBj}{Fhc{}}0{FhB@l}{{{CJj{c}}{Cb{{DE`{Fh}}}}}{{CJj{c}}}BGh}{{BOfFh}BOf}{{BFlCAb}BFl}{{BBlBGj}BBl}{{{f{CnB@l}}{ANh{ANf}}Ef}{{Cb{Ef}}}}{{{CJb{c}}{Cb{{Fn{Eh}}}}}{{CJb{c}}}BGh}{{{BIj{c}}{Cb{{Fn{Eh}}}}}{{BIj{c}}}BIl}{{{BLj{c}}{Cb{{Fn{Eh}}}}}{{BLj{c}}}BGh}{{BOf{Cb{{ADl{{Fn{Eh}}}}}}}BOf}{{BBlc}BBl{{Hf{{Ab{BGj}}}}}}`0{{BOh{Cb{c}}}BOh{{AMj{BOl}}}}{{CBj{Cb{{f{Al}}}}}CBj}{{{CJd{c}}{Cb{C@j}}}{{CJd{c}}}{}}{{CG`{Cb{C@j}}}CG`}{{{BLf{c}}{Cb{C@j}}}{{BLf{c}}}BLd}{{CGd{Cb{C@j}}}CGd}{{{BLn{c}}CAl}{{BLn{c}}}BLd}{{BBlc}BBl{{Hf{{Ab{BBl}}}}}}{{{BLn{c}}{Cb{Fh}}}{{BLn{c}}}BLd}{{{BL`{c}}{Cb{Eh}}}{{BL`{c}}}BLd}0{{CDfBGj}CDf}{{CDhBGj}CDh}{{BOhd}BOh}{{CBjd}CBj}{{{f{CNf}}Ef}{{Bd{MnBb}}}}{{BOf{Cb{{ADl{{Fn{Ef}}}}}}}BOf}{{CBj{Cb{{ADl{B@l}}}}}CBj}{{BOhBOj}BOh}{{CBjBOj}CBj}{{BOhA`}BOh}{{CBjA`}CBj}{{CG`CFn}CG`}{{CGdCFn}CGd}{{{BL`{c}}{Cb{Fh}}}{{BL`{c}}}BLd}{{CDhBGjBGjBGj}CDh};{{BOfd}BOf}<{{{BLj{c}}{Cb{{Fn{B`}}}}}{{BLj{c}}}BGh}{{CDfBGjBGjBGj}CDf}3{{CDfBGj}CDf}{{CDhBGj}CDh}{{{CJh{c}}d}{{CJh{c}}}BGh}{{{CJj{c}}d}{{CJj{c}}}BGh}6{{CBjd}CBj}{{BHhd}BHh}{{BOf{Cb{Fh}}}BOf}{{CBj{Cb{Fh}}}CBj}{{BHh{Cb{Fh}}}BHh}{{{CJf{c}}DEb}{{CJf{c}}}BLd}{{{CJh{c}}DEb}{{CJh{c}}}BGh}{{{BL`{c}}Eh}{{BL`{c}}}BLd}>7{{AMl{DEd{EhEh}}}AMl}{{BAf{DEd{EhEh}}}BAf}=<<=<{{BOhd}BOh}:>{{CFdc}CFd{{AMj{{Cb{Fh}}}}}}{{{CJb{c}}{Cb{Fh}}}{{CJb{c}}}BGh}{{{BIj{c}}{Cb{Fh}}}{{BIj{c}}}BIl}{{{CJj{c}}{Cb{Fh}}}{{CJj{c}}}BGh}{{{BLj{c}}{Cb{Fh}}}{{BLj{c}}}BGh}=<{{CBjc}CBj{{AMj{{Cb{Fh}}}}}}<{{BHhc}BHh{{AMj{{Cb{Fh}}}}}}3?{{CDhBGj}CDh};{{BOh{Cb{BOn}}}BOh}{{CBj{Cb{BOn}}}CBj}{{BBlCEd}BBl}{{BOfBOh}BOf}{{CFdCFn}CFd}{{{CJj{c}}{Cb{e}}}{{CJj{c}}}BGh{{AMj{CFn}}}}{{BOf{Cb{c}}}BOf{{AMj{CFn}}}}{{CBjCFn}CBj}{{BHhCFn}BHh}{{CFd{ADl{{Ab{CFn}}}}}CFd}{{CBj{ADl{{Ab{CFn}}}}}CBj}{{BHh{ADl{{Ab{CFn}}}}}BHh}{{{CJd{c}}d}{{CJd{c}}}{}}{{{BLf{c}}d}{{BLf{c}}}BLd}{{{BLj{c}}{Cb{{ADl{BGf}}}}}{{BLj{c}}}BGh}{{BBld}BBl}{{{CJb{c}}{Cb{{Fn{Fh}}}}}{{CJb{c}}}BGh}{{{BIj{c}}{Cb{{Fn{Fh}}}}}{{BIj{c}}}BIl}{{{CJh{c}}{Cb{{Fn{Eh}}}}}{{CJh{c}}}BGh}{{{BLj{c}}{Cb{{Fn{Fh}}}}}{{BLj{c}}}BGh}{{BOf{Cb{{ADl{{Fn{Fh}}}}}}}BOf}5{{{BL`{c}}A`}{{BL`{c}}}BLd}{{BOh{Cb{A`}}}BOh}{{CBj{Cb{A`}}}CBj}{{{BL`{c}}C@d}{{BL`{c}}}BLd}{{BOfd}BOf}{{CBjd}CBj}{{CFdd}CFd}{{{CJj{c}}d}{{CJj{c}}}BGh}32{{BHhd}BHh}>{{{BLn{c}}{Cb{Fh}}}{{BLn{c}}}BLd}{{CFdc}CFd{{AMj{{Cb{DAb}}}}}}{{{CJb{c}}{Cb{DAb}}}{{CJb{c}}}BGh}{{{BIj{c}}{Cb{DAb}}}{{BIj{c}}}BIl}{{{BLj{c}}{Cb{DAb}}}{{BLj{c}}}BGh}{{BOf{Cb{DAb}}}BOf}{{BBl{f{Al}}{Cb{M`}}}BBl}{{CBj{Cb{DAb}}}CBj}{{CBjc}CBj{{AMj{{Cb{DAb}}}}}}{{BHh{Cb{DAb}}}BHh}{{BHhc}BHh{{AMj{{Cb{DAb}}}}}}{{{f{CNf}}}{{Bd{MnBb}}}}{{BOfFh}BOf}{{{CJh{c}}{ADl{B@l}}}{{CJh{c}}}BGh}{{{CJj{c}}{ADl{B@l}}}{{CJj{c}}}BGh}{{{BLj{c}}{Cb{{ADl{BAf}}}}}{{BLj{c}}}BGh}{{BOf{Cb{{ADl{B@l}}}}}BOf}{{CBj{Cb{{ADl{B@l}}}}}CBj}{{BHh{Cb{{ADl{B@l}}}}}BHh}{{CBjc}{{Bd{CBjBb}}}{{Dh{B@l}{{Df{{Bd{B@lBb}}}}}}}}{{{CJh{c}}{f{B@l}}}{{CJh{c}}}BGh}{{{CJj{c}}{f{B@l}}}{{CJj{c}}}BGh}5{{CDfBGj}CDf}{{CDhBGj}CDh}{{{BL`{c}}A`}{{BL`{c}}}BLd}{{BOhA`}BOh}{{CBjA`}CBj}{{BBld}BBl}?{{CBjFh}CBj}{{BOfFh}BOf}12{{{BLn{c}}d}{{BLn{c}}}BLd}3{{{BL`{c}}{Cb{Eh}}}{{BL`{c}}}BLd}{{CDfJf}CDf}{{CDf{Cb{Eh}}}CDf}{{BOhd}BOh}{{CBjd}CBj}108{{{f{BCh}}{Cb{Hb}}}{{Ch{Cf}}}}{{BCh{Cb{Hb}}}BCh}{{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}{Cb{Hb}}}{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}?{{CDfBGj}CDf}{BBlBBl}{{{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}}e{}{}{}}{{{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}}e{}{}{}}{{{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}c}e{}{}{}}10{{c{A@f{}{{A@`{c}}{A@b{e}}{A@d{g}}}}}e{}{}{}}210213210210{{{f{Cn{ADl{CJl}}}}{f{{Ab{A`}}}}}{{Bd{FhB@f}}}}{{{f{Cnc}}e}{{Bd{FhB@f}}}{}DBl}{{{f{Cn{ADl{CJl}}}}{f{{Ab{DEf}}}}}{{Bd{FhB@f}}}}{{BGjc}BGj{{AMj{BGj}}}}{{{f{CGj}}}{{l{In}}}}{{{f{CGl}}}{{l{In}}}}{{{f{BNf}}}{{Bd{{l{In}}Bb}}}}``{{{f{AIb}}{f{{l{An}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Dd}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BCl}}c}B`{{Dh{{Gf{M`{f{{BCn{M`}}}}}}}{{Df{Cb}}}}HlHn}}{{{f{BCl}}c}B`{{Dh{{Gf{M`{f{{BCn{M`}}}}}}}{{Df{}}}}HlHn}}{{{f{{Ab{{O`{M`}}}}}}c}B`{{Dh{{O`{M`}}}{{Df{Cb}}}}HlHn}}{{{f{{Ab{{O`{M`}}}}}}c}B`{{Dh{{O`{M`}}}{{Df{}}}}HlHn}}{{{f{{Ab{c}}}}e{Cb{{ADl{ADd}}}}}{{AIn{c}}}{BEdBEf}{{Cj{}{{Cd{{Gf{M`M`}}}}}}Ib}}{{{f{{Ab{c}}}}{f{Hb}}e{Cb{{ADl{ADd}}}}}{{AIn{c}}}{BEdBEf}{{Cj{}{{Cd{{Gf{M`M`}}}}}}Ib}}{{{f{{l{c}}}}M`M`}{{l{c}}}Dd}{{{f{{Fn{{O`{M`}}}}}}{f{{Ab{{Ch{Cf}}}}}}}d}{{{f{BEh}}{f{Bh}}}B`}{{BEjBEj}BEj}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DdDd{{Dh{ff}{{Df{}}}}}{{Dh{f}{{Df{}}}}}{{Dh{f}{{Df{}}}}}Dd}{{{l{c}}{l{e}}gik}{{l{m}}}DdDd{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DdDd{{AId{CbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}g}bDdDd{{E`{CbCb}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDd{}{{E`{}{{Df{g}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Al}}}{{l{k}}}DdDd{CfAIf}{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Al}}}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DdDdCf{{E`{}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDd{}{}{{E`{CbCb}{{Df{{Bd{{Cb{g}}i}}}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DdDdDd{{AIh{CbCbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDdCfAIj{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Al}}}{{Bd{{l{m}}i}}}DdDdCfAIj{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DdDdAIj{{E`{ff}{{Df{{Bd{{Ch{Cf}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DdDdDd{}{}{{E`{CbCbCb}{{Df{{Bd{{Cb{i}}k}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{Cb}{{Df{{Bd{{Cb{e}}g}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{}{{Df{{Bd{eg}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{CfAIf}AIj{{E`{f}{{Df{{Bd{eg}}}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dd{{AIl{Cb}}}Dd}{{{f{{l{c}}}}e}{{l{g}}}DdAIlDd}{{{f{{l{c}}}}g}{{l{i}}}DdCf{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DdCf{{E`{}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dd{CfAIf}{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}0``{{{f{DEh}}}{{l{El}}}}0{{{f{DEh}}{f{{l{Jd}}}}d}{{Bd{B`Bb}}}}{{{f{DEh}}{f{{l{Aj}}}}d}{{Bd{B`Bb}}}}{{{f{DEh}}}B`}{{{f{DEh}}}{{Bd{B`Bb}}}}1{{{f{DEh}}}{{Bd{{l{El}}Bb}}}}{{{f{DEh}}}{{l{Bj}}}}{{{f{DEh}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{DEh}}Ej}{{Bd{{l{Bj}}Bb}}}}{{{f{DEh}}A`}{{Bd{B`Bb}}}}5{{{f{DEh}}}{{Bd{{l{j}}Bb}}}}01{{{f{DEj}}}{{f{{l{Bj}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{BMdBGj}BGj}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}3{cc{}}{{}Fh}{ce{}{}}6{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}2````````{{{f{BJb}}{Cb{{f{Al}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJb}}{Cb{{f{Al}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJb}}{Cb{{f{Al}}}}Jfdd{Cb{{f{Eh}}}}{f{{l{Aj}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJb}}{Cb{{f{Al}}}}Jfd{Cb{{f{Eh}}}}{f{{l{Aj}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJb}}{Cb{{f{Al}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}`{{{f{CGj}}}{{l{Mb}}}}{{{f{CGl}}}{{l{Mb}}}}{{{f{CGn}}}{{l{Jd}}}}`{{{f{COf}}}{{l{Mb}}}}21{{{f{CGj}}}{{l{An}}}}{{{f{CGl}}}{{l{An}}}}{{{f{CGj}}}{{l{In}}}}{{{f{CGl}}}{{l{In}}}}55`46576{{{f{COf}}}{{l{In}}}}16{{{f{CGj}}}{{l{Lh}}}}{{{f{CGl}}}{{l{Lh}}}}{{{f{Al}}{f{{Ab{{f{Al}}}}}}{f{Al}}}{{Jb{J`In}}}}{{{f{Al}}{f{{Ab{{f{Al}}}}}}{f{Al}}}{{Jb{KbJd}}}}{{{f{Al}}{f{{Ab{{f{Al}}}}}}{f{Al}}Jf}{{Jb{JhJd}}}}=<{{{f{DC`}}N`}{{Bd{B`Bb}}}}{{{f{DC`}}{f{B`}}BNj}{{Bd{B`Bb}}}}101010101010<>=``?>?>`98````````{{{f{c}}h}b{}}{{{f{BJb}}{Cb{{f{Al}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJb}}{Cb{{f{Al}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJb}}{Cb{{f{Al}}}}Jfdd{Cb{{f{Eh}}}}{f{{l{Aj}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJb}}{Cb{{f{Al}}}}Jfd{Cb{{f{Eh}}}}{f{{l{Aj}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{DEl}}}{{f{{l{Aj}}}}}}{{{f{BJb}}{Cb{{f{Al}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DEn}}}DEn}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DEn}}{f{DEn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DEn}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{DEn}}{f{Cnc}}}bAG`}`{{}Fh}{ce{}{}}{{{f{DEn}}{f{Al}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{{DF`{c}}}}}{{DF`{c}}}{ABdAd}}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}?{{{f{Al}}}{{Cb{DEn}}}}>=`{{{f{Cn{DF`{c}}}}{f{Al}}}CbAd}{{{f{CnDFb}}{f{{Ab{A`}}}}{Cb{Jf}}}{{Cb{c}}}{}}{{{f{Cn{DF`{In}}}}{f{{Ab{A`}}}}{Cb{Jf}}}{{Cb{Lf}}}}{{{f{Cn{DF`{Jd}}}}{f{{Ab{A`}}}}{Cb{Jf}}}{{Cb{Gb}}}}`?>{{c{Cb{Jf}}}{{Bd{{DFf{}{{DFd{e}}}}Bb}}}{}{}}{{DEn{Cb{Jf}}}{{Bd{{DF`{Jd}}Bb}}}}{{DEn{Cb{Jf}}}{{Bd{{DF`{In}}Bb}}}}{c{{Bd{e}}}{}{}}{{{f{c}}}Oj{}}{ce{}{}}```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Cnc}}}{{f{Cne}}}{}{}}0{{{f{CFf}}}CFf}{{{f{c}}{f{Cne}}}b{}{}}{{}CFf}{Fh{{f{c}}}{}}0{Fh{{f{Cnc}}}{}}0{Fhb}0{{{f{CFf}}{f{CFf}}}d}{{{f{DFh}}{f{DFh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CFf}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}0{{{f{Al}}}{{Bd{DFh}}}}{{{f{Al}}g}{{Bd{CFfBb}}}{{Hf{Al}}}{{AMj{Eh}}}{{Gh{}{{Cd{{Gf{ce}}}}}}}}{{{f{CFf}}{f{Cnc}}}bAG`}{{}Fh}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}000{{{f{c}}}Oj{}}033```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAKb{}{{Gh{}{{Cd{c}}}}}}0{{ADbe}AKd{}{{Gh{}{{Cd{c}}}}}}0{{{f{AKf}}}{{f{Ef}}}}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}}{{Cb{{f{{Ab{c}}}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{AJn}}{f{AJn}}c}{{Bd{AJnBb}}}ALf}{{{f{ALh}}{f{Ef}}}{{Bd{B`Bb}}}}`{AMde{}{{AKb{c}}AIf}}0{{AMdADb}e{}{{AKd{c}}AIf}}0{{{ALb{Al}}}Ef}{{{f{ALh}}}{{f{Ef}}}}`{{ALf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{Fn{c}}ADb}{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{Fn{c}}ADb}{{AIf{}{{AKh{e}}{AKj{c}}{AKl{g}}}}}{AKn{AL`{e}}}ABd{{G`{}{{Cd{e}}}}IbHlHn}}{{FhcADb}{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{FhADb}{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}Fh}{{Cb{c}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{ALh}}Fh}{{Bd{IdBb}}}}{{{f{ALh}}Fh}Id}{{}Ef}{{{f{ANj}}Fh}Id}4{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}}{{ADj{cgADh}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}}{{Cb{c}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{{{f{AJn}}{f{AJn}}}{{Bd{{Gf{AJnAJn}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Ef}}{f{Ef}}}{{Bd{EfBb}}}}`{{}c{}}0{g{{Bd{AKbe}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{{ADbg}{{Bd{AKde}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{AMd{{Bd{eg}}}{}{{AKb{c}}AIf}{}}0{{AMdADb}{{Bd{eg}}}{}{{AKd{c}}AIf}{}}0{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}Fh}cABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}0{{{f{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}}}gABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}{Fhc{}}0{{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}{Cb{Hb}}}{{AIf{}{{AKh{c}}{AKj{e}}{AKl{g}}}}}ABd{AKn{AL`{c}}}{{G`{}{{Cd{c}}}}IbHlHn}}```````````{{{f{AJn}}{f{AJn}}c}{{Bd{AJnBb}}}ALf}{{ALf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}=<`````````{{}b}0{{}d}{{{f{{Jb{JhJd}}}}{f{{l{Aj}}}}CFb{Fj{Gb}{{Df{AJf}}}}{Fj{AJf}{{Df{Gb}}}}{f{AJh}}{f{AJh}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{Al}}}}{Fj{Gb}{{Df{AJf}}}}{Fj{AJf}{{Df{Gb}}}}{f{AJh}}{f{AJh}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{Al}}}}{f{{l{Aj}}}}CFb}{{Bd{{Jb{JhJd}}Bb}}}}```{{c{Cb{Hb}}}CMb{}}{{{CMd{Gb}}{CMd{A`}}{Cb{Hb}}}CMf}{{{CMd{Gb}}{CMd{A`}}{Cb{Hb}}}CMh}`{CHlBGj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{CHlJf}BGj}3{{CHlBGjJf}BGj}{{CHlEh}BGj}555{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}8{cc{}}9{{}Fh}{ce{}{}};;;;;;;;;;{{CHl{Cb{Eh}}BGjCFb}BGj}{{CHlBGjc}BGj{{Hf{Al}}}}={{CHl{f{Al}}}BGj}>;0>>>>>>>{{CHlBGjEh}BGj}{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}6{CHlBGj}0?0`{{{f{BEl}}{f{AOf}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BEl}}}{{Bd{{f{Al}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{}DFj}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{DFj{Cb{{f{ADb}}}}}{{Bd{AChBb}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DFj}}}d}{{FhFh}DFj}{{{f{CnDFj}}{Ch{Cf}}}b}{{{f{CnDFj}}}b}{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}6`{{{f{{l{c}}}}}FhAd}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DFl}}}DFl}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DFl}}{f{DFl}}}d}{{{f{DFl}}{f{CnGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DFl}}{f{Cnc}}}bAG`}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Eh{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DFn}}}DFn}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DFn}}{f{DFn}}}d}{{{f{DFn}}{f{CnGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DFn}}{f{Cnc}}}bAG`}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Eh{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}4{{IhIh}Ih}{{{f{{l{El}}}}M`}{{Bd{bBb}}}}{{{f{{AIn{M`}}}}M`}{{Bd{bBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Bh}}}B`}0{{{f{B`}}{f{Al}}}B`}0`{{{f{c}}h}b{}}{{{f{DG`}}}{{f{ADd}}}}{{{f{CnDG`}}}{{Ch{Cf}}}}{{{f{CnDG`}}}{{f{CnADd}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DG`}}}DG`}{{{f{c}}{f{Cne}}}b{}{}}{{{f{DG`}}}{{f{ADb}}}}{{}DG`}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{CnDG`}}Fh}b}{{{f{DG`}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DG`}}}Fh}{FhDG`}{{{f{CnDG`}}}b}70{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}{{{f{DG`}}}{{Cb{{f{DGb}}}}}}7````{{AJ`{f{c}}d}M`AIf}{{{f{{l{c}}}}}{{Gf{Fh{l{c}}}}}Dd}``{{{f{DGd}}}{{f{B`}}}}{{{f{BNf}}}{{Bd{{l{In}}Bb}}}}{{{f{BNf}}}{{Bd{{l{Mb}}Bb}}}}0{{{f{BNf}}}{{Bd{{l{An}}Bb}}}}22112{{{f{BNf}}}{{Bd{{l{Lh}}Bb}}}}322{{{f{BNf}}{f{Al}}}{{Bd{B`Bb}}}}{{{f{BNf}}Jf}{{Bd{{l{Jd}}Bb}}}}1445`{{{f{AHh}}FhFh}AHh}0`{{Fh{f{Cn{Fn{d}}}}}b}```11{{Fh{f{{Ab{B`}}}}{f{CnF`}}}{{Bd{{AJb{{l{El}}}}Bb}}}}{{{f{{Ab{B`}}}}{f{{Ab{d}}}}d}{{Bd{AJdBb}}}}{{{f{Al}}{f{{Ab{B`}}}}{f{{Ab{d}}}}d}{{Bd{{l{En}}Bb}}}}{{{f{Al}}{f{{Ab{B`}}}}}{{Bd{{l{En}}Bb}}}}{{{f{B`}}}{{Bd{{Ch{Cf}}Bb}}}}{{{f{{Ab{B`}}}}}{{Bd{AJdBb}}}}{{{f{{Ab{B`}}}}}{{Bd{{l{En}}Bb}}}}0```````````88```{{{f{BKh}}}{{f{{l{Aj}}}}}}{{{f{BKl}}}{{Bd{{l{Aj}}Bb}}}}{{{f{BKl}}}{{l{Aj}}}}{{{f{BKl}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{BKl}}{f{Al}}d}{{Bd{{l{An}}Bb}}}}{{{f{BKl}}{f{{l{Aj}}}}dd}{{Bd{{l{An}}Bb}}}}{{{f{BKl}}{f{Al}}}{{Bd{{l{An}}Bb}}}}{{{f{BKl}}{f{Al}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKl}}{f{{l{Aj}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKl}}{f{{l{Aj}}}}Fh}{{Bd{{l{Aj}}Bb}}}}{{{f{BKl}}{f{Al}}}{{Bd{{l{j}}Bb}}}}{{{f{BKl}}{f{{l{Aj}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BKl}}{f{Al}}{f{Ef}}}{{Bd{B`Bb}}}}5{{{f{BKl}}{f{{l{Aj}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BKl}}{f{Al}}}{{Bd{{l{El}}Bb}}}}=<{{{f{{Ab{{f{{l{Aj}}}}}}}}{f{Al}}d}{{Bd{{l{Aj}}Bb}}}}{{{f{BKl}}{f{Al}}{f{Al}}}{{Bd{{l{Aj}}Bb}}}}0{{{f{BKl}}{f{Al}}{f{Al}}Fh}{{Bd{{l{Aj}}Bb}}}}1{{{f{BKl}}{f{{l{Aj}}}}}{{l{j}}}}{{{f{BKl}}{f{{l{Aj}}}}Fh}{{Bd{AJlBb}}}}0{{{f{{l{Aj}}}}{f{{l{Aj}}}}e}{{l{j}}}{{Cj{}{{Cd{{f{Al}}}}}}}{{Dh{{f{Al}}{f{Al}}}{{Df{c}}}}}}2{{{f{{l{Aj}}}}{f{{l{Aj}}}}Fhed}{{Bd{AJlBb}}}{{Cj{}{{Cd{{f{Al}}}}}}}{{Dh{{f{Al}}{f{Al}}}{{Df{c}}}}}}2{{{f{{l{Aj}}}}{f{Al}}d}{{l{Aj}}}}{{{f{BKl}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}{{{f{BKl}}}{{l{El}}}}0{{{f{BKl}}}{{l{Aj}}}}{{{f{BKl}}{f{B`}}{f{B`}}}{{Bd{{l{Aj}}Bb}}}}3{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}404040{{{f{BKl}}{f{{l{Aj}}}}}{{l{Aj}}}}10{{{f{BKl}}{f{{l{El}}}}d}{{Bd{{l{Jd}}Bb}}}}444````````{{eFhFh}{{DGf{Gb}}}{{Hf{Al}}}{{Cj{}{{Cd{c}}}}}}{{eFhFh}{{DGh{Gb}}}{{Hf{{Ab{A`}}}}}{{Cj{}{{Cd{c}}}}}}```````````{{{f{c}}h}b{}}0{{{f{BFn}}}{{Bd{B`Bb}}}}{{{f{Al}}{Fn{{Ch{Cf}}}}{f{ADb}}}{{Bd{B`Bb}}}}{{{f{Al}}{Fn{{Ch{Cf}}}}{f{ADb}}{Cb{{f{{DEd{EhEh}}}}}}}{{Bd{B`Bb}}}}{{B`B`}}{{B`c}{}{AfKn}}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AfKn}}{{{f{CnB`}}{f{B`}}}{{Bd{{f{CnB`}}Bb}}}}{{{f{B`}}}{{Cb{Fh}}}}0{{{f{BFn}}Ej}{{l{El}}}}{{{f{BFn}}}{{Bd{{l{El}}Bb}}}}`{{{f{B`}}}{{Bd{{f{{l{Bj}}}}Bb}}}}{{{f{B`}}Fh}{{f{{Ch{Cf}}}}}}{{{f{BFn}}}{{f{ADd}}}}{{{f{CnBFn}}}{{f{CnADd}}}}{{{f{B`}}}{{l{j}}}}{{{f{CnBFn}}}{{f{Cn{l{c}}}}}Dd}{{{f{BFn}}}{{f{{l{c}}}}}Dd}{{{f{B`}}}{{f{BFn}}}}{{{f{B`}}}{{f{B`}}}}0{{{f{CnBFn}}}{{Bd{FhBb}}}}{{{f{CnB`}}}{{Bd{FhBb}}}}{{{f{B`}}}{{Bd{{f{{l{n}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{En}}}}Bb}}}}{{{f{BFn}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{B`}}}{{Bd{{f{{l{An}}}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00{{{f{BFn}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Ef}}}{{Bd{B`Bb}}}}0{{{f{B`}}}{{Bd{{f{AJn}}Bb}}}}6{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{{Bd{B`Bb}}}Ah}{{{f{BFn}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{Fh}}}}}}}}{{{f{BFn}}}{{f{{Fn{{Ch{Cf}}}}}}}}{{{f{CnBFn}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}}{{{f{CnB`}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}}{{{f{B`}}}B`}{{{f{Ih}}}Ih}1{{{f{BFn}}}{{ADl{BFn}}}}{{{f{c}}{f{Cne}}}b{}{}}0{{{f{CnB`}}}b}{{{f{B`}}}{{Bd{{f{{Jb{J`In}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jb{JhJd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jb{JlJj}}}}Bb}}}}{{}B`}{Fh{{f{c}}}{}}00{{{f{B`}}}f}{Fh{{f{Cnc}}}{}}00{{B`c}{}{AfKn}}{{{f{B`}}{f{B`}}}}{{B`B`}}{{{f{B`}}c}{}{AfKn}}{Fhb}00{{{f{BFn}}}B`}{{{f{BFn}}}{{f{Ef}}}}{{{f{B`}}}{{Bd{{f{{Jb{JnJd}}}}Bb}}}}{{{f{Ih}}{f{Ih}}}d}{{{f{B`}}{f{B`}}}d}{{{f{{AFb{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{An}}Bb}}}}{{{f{B`}}{f{Al}}}{{Bd{{l{An}}Bb}}}}{{{f{B`}}c}{{Bd{{l{An}}Bb}}}AMh}3{{{f{B`}}{f{Al}}}}3{{{f{B`}}c}{}AMh}66{{{f{c}}{f{e}}}d{}{}}00{{{f{B`}}}Fh}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{CnB`}}{f{B`}}}{{Bd{{f{CnB`}}Bb}}}}{{{f{B`}}IdFh}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ed}}}}Bb}}}}{{{f{BFn}}}{{Dl{Mn}}}}{{{f{B`}}AF`}{{Bd{B`Bb}}}}{{{f{BFn}}{f{{l{An}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{l{An}}}}d}{{Bd{B`Bb}}}}{{{f{Ih}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{B`}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{B`}}}Eh}{cc{}}0{{{Jb{JnJd}}}B`}{{{Jb{JhJd}}}B`}{{{l{c}}}B`Dd}{{{Jb{KbJd}}}B`}4{{{Jb{J`In}}}B`}{{{f{Al}}{f{{Ab{Id}}}}d}{{Bd{B`Bb}}}}{{{f{Al}}{f{{Ab{Id}}}}{f{Ef}}d}{{Bd{B`Bb}}}}{{{f{Al}}{Ch{Cf}}}{{Bd{B`Bb}}}}{{{f{Al}}{Fn{{Ch{Cf}}}}{f{Ef}}}B`}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}{cB`{{Gh{}{{Cd{L`}}}}}}{cB`{{Gh{}{{Cd{{f{A`}}}}}}}}{cB`{{Gh{}{{Cd{Lf}}}}}}{cB`{{Gh{}{{Cd{{Cb{L`}}}}}}}}{cB`{{Gh{}{{Cd{Ij}}}}}}{cB`{{Gh{}{{Cd{{f{M`}}}}}}}}{cB`{{Gh{}{{Cd{Eh}}}}}}{cB`{{Gh{}{{Cd{{Cb{Il}}}}}}}}{cB`{{Gh{}{{Cd{{f{Gb}}}}}}}}{cB`{{Gh{}{{Cd{{f{Il}}}}}}}}{cB`{{Gh{}{{Cd{Il}}}}}}{cB`{{Gh{}{{Cd{{Cb{Lf}}}}}}}}{cB`{{Gh{}{{Cd{Gb}}}}}}{cB`{{Gh{}{{Cd{{f{Lj}}}}}}}}{cB`{{Gh{}{{Cd{{f{Ln}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Ij}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Md}}}}}}}}{cB`{{Gh{}{{Cd{{f{d}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Lj}}}}}}}}{cB`{{Gh{}{{Cd{{f{L`}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Ln}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{d}}}}}}}}{cB`{{Gh{}{{Cd{Lj}}}}}}{cB`{{Gh{}{{Cd{Ln}}}}}}{cB`{{Gh{}{{Cd{Md}}}}}}{cB`{{Gh{}{{Cd{{Cb{M`}}}}}}}}{cB`{{Gh{}{{Cd{{f{Al}}}}}}}}{cB`{{Gh{}{{Cd{A`}}}}}}{cB`{{Gh{}{{Cd{d}}}}}}{cB`{{Gh{}{{Cd{{Cb{Gb}}}}}}}}{cB`{{Gh{}{{Cd{{f{Ij}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{A`}}}}}}}}{cB`{{Gh{}{{Cd{{f{Md}}}}}}}}{cB`{{Gh{}{{Cd{{f{Lf}}}}}}}}{cB`{{Gh{}{{Cd{M`}}}}}}{{{f{Al}}{Fn{Gb}}}B`}{{{f{Al}}{Fn{Il}}}B`}{{{f{Al}}{Fn{M`}}}B`}{{{f{Al}}{Fn{A`}}}B`}{{{f{Al}}{Fn{Lf}}}B`}{{{f{Al}}{Fn{Ln}}}B`}{{{f{Al}}{Fn{Lj}}}B`}{{{f{Al}}{Fn{L`}}}B`}{{{f{Al}}{Fn{Md}}}B`}{{{f{Al}}{Fn{Ij}}}B`}{{{f{Al}}Fh{f{Ef}}}B`}{{{f{B`}}FhFh}B`}{{{f{BFn}}Fh}{{Bd{IdBb}}}}{{{f{B`}}}Fh}{{{f{B`}}}C`}{{{f{BFn}}Fh}{{Cb{{f{If}}}}}}{{{f{BFn}}FhFh}{{Cb{{f{If}}}}}}{{{f{BFn}}Fh}Id}{{{f{{AFb{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{An}}Bb}}}}{{{f{B`}}{f{Al}}}{{Bd{{l{An}}Bb}}}}{{{f{B`}}c}{{Bd{{l{An}}Bb}}}AMh}30{{{f{B`}}{f{Al}}}}3{{{f{BFn}}}d}{{{f{Ih}}{f{Cnc}}}bAG`}{{{f{B`}}{Cb{Fh}}}B`}{{{f{B`}}}{{Bd{{f{{l{Lh}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{In}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}`{{{f{B`}}}{{Bd{{l{j}}Bb}}}}{{}Fh}00{ce{}{}}00{B`AOf}1{B@nB`}{B`B`}={{{f{B`}}}{{Bd{{l{An}}Bb}}}}000{{{f{BFn}}}{{l{An}}}}0{{}d}0{{{f{B`}}}Ih}{{{f{B`}}}DGj}{{{f{BFn}}}Fh}{{{f{BFn}}Fh}B`}{{{f{B`}}}{{Bd{{f{{l{j}}}}Bb}}}}{B`BGj}{{{f{{AFb{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{An}}Bb}}}}{{{f{B`}}c}{{Bd{{l{An}}Bb}}}AMh}{{{f{B`}}{f{Al}}}}3210{{{f{B`}}}{{Bd{{Cb{c}}Bb}}}Kn}{{{f{BFn}}}{{Bd{B`Bb}}}}{{{f{BFn}}}{{Cb{L`}}}}{{{f{B`}}}B`}1232{{B`c}{}{AfKn}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AfKn}}?{{{f{BFn}}}{{Bd{FhBb}}}}{{{f{BFn}}}{{f{Al}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{M`}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{Il}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{B`}}}}}}}}{{{f{Al}}{Lb{M`}}}B`}{{{f{Al}}c}B`{{Hf{{Ab{Id}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{Lj}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Dl{Al}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{A`}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{{Dl{Al}}}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{AJf}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Fn{A`}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{ANb}}}}}}{{{f{Al}}{Lb{Il}}}B`}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{L`}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{f{{Ab{A`}}}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{AJj}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{Ij}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{d}}}}}}{{{f{Al}}{f{B`}}}B`}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{Lf}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{AJf}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{Lj}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{Ln}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{Gb}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{ANd}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{M`}}}}}}{{{f{Al}}{Lb{Gb}}}B`}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{d}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{AJj}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{{f{Al}}}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{Il}}}}}}{{{f{Al}}c}B`B@n}{{{f{Al}}c}B`{{Hf{{Ab{{Dl{{Ab{A`}}}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{{Dl{{Ab{A`}}}}}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{{f{{Ab{A`}}}}}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{B`}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{Eh}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{Md}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{Ij}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{L`}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{Eh}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{{Fn{A`}}}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{A`}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{f{Al}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{Ln}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{Gb}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{Lf}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{ANb}}}}}}}}{{{f{Al}}{Lb{Lf}}}B`}{{{f{Al}}c}B`{{Hf{{Ab{{Cb{Md}}}}}}}}{{{f{Al}}c}B`{{Hf{{Ab{ANd}}}}}}{{{f{Al}}{f{Ef}}}B`}{{{f{BFn}}FhFh}B`}{{{f{Al}}Fh}B`}{{{f{CnDGj}}}Cb}{{{f{{AFb{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{An}}Bb}}}}{{{f{B`}}c}{{Bd{{l{An}}Bb}}}AMh}{{{f{B`}}{f{Al}}}{{Bd{{l{An}}Bb}}}}3{{{f{B`}}c}{}AMh}3{{{f{B`}}{f{Al}}}}{{{f{B`}}}{{Bd{{f{ABf}}Bb}}}}{{{f{BFn}}}Fh}`{{{f{B`}}}{{Ch{K`}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{BFn}}L`Ml}{{Bd{B`Bb}}}}{{{f{BFn}}}B`}{{{f{B`}}c}{}{AfKn}}{{B`c}{}{AfKn}}{{{f{B`}}{f{B`}}}}{{{f{CnBFn}}{f{Al}}}b}{{{f{CnB`}}{f{Al}}}{{f{CnB`}}}}{{{f{B`}}{f{{Ab{Gb}}}}}{{Bd{B`Bb}}}}6{IhIh}{{{f{BFn}}{f{Dh}}N`}{{Bd{B`Bb}}}}{{{f{B`}}L`dd{Cb{Il}}}{{Bd{B`Bb}}}}{{{f{B`}}Fhdd{Cb{Il}}}{{Bd{B`Bb}}}}{{{f{CnB`}}Ih}b}{{{f{BFn}}Gb}B`}{{{f{CnBFn}}}b}{{{f{CnB`}}}b}{{{f{B`}}{Cb{Il}}}B`}{{{f{DGj}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{BFn}}GbFh}B`}{{{f{B`}}Ej}{{Bd{B`Bb}}}}{{{f{BFn}}Ej}{{Bd{B`Bb}}}}{{{f{BFn}}A`}{{Cb{L`}}}}{{{f{BFn}}A`}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Aj}}}}Bb}}}}{{{f{B`}}Fh}{{Bd{{Dl{Al}}Bb}}}}{{{f{B`}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AJl}}Bb}}}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AfKn}}{{B`B`}}{{{f{B`}}c}{}{AfKn}}{{{f{B`}}}{{Bd{cBb}}}Kn}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{Cb{Fh}}}B`}{{{f{BFn}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{Ab{Nf}}}}Ih}B`}{{{f{B`}}{f{{Ab{Nf}}}}}B`}{{{f{BFn}}{f{{Ab{M`}}}}}{{Bd{B`Bb}}}}{{{f{BFn}}{f{{Ab{M`}}}}}B`}{{{f{B`}}{f{{Ab{M`}}}}d}B`}{{{f{B`}}{f{{l{El}}}}d}{{Bd{B`Bb}}}}{{{f{BFn}}{f{{l{El}}}}}B`}{{{f{B`}}{f{{Ab{M`}}}}}B`}{{{f{B`}}{f{{l{El}}}}d}B`}{{{f{B`}}}{{Bd{{f{{Jb{KbJd}}}}Bb}}}}{{{f{B`}}Fhd}{{Ch{Cf}}}}{{{f{B`}}{Cb{{f{Al}}}}d}{{Bd{AOfBb}}}}>{{{f{c}}}e{}{}}0{{{f{B`}}}{{Dl{B`}}}}{{{f{c}}}Eh{}}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{c{{Bd{e}}}{}{}}0{{{Gf{{f{Al}}{Ch{Cf}}}}}{{Bd{B`Bb}}}}1{{{Gf{{f{AMl}}{Fn{{Ch{Cf}}}}}}}{{Bd{B`Bb}}}}{{{Gf{{f{Al}}{Fn{{Ch{Cf}}}}}}}{{Bd{B`Bb}}}}{{{Gf{{f{AMl}}{Ch{Cf}}}}}{{Bd{B`Bb}}}}444{{{f{c}}}Oj{}}00{{{f{B`}}}{{Bd{{f{{l{Ll}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ld}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mf}}}}Bb}}}}{{{f{BFn}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{BFn}}}{{Bd{{f{{l{c}}}}Bb}}}Dd}`{{{f{BFn}}A`}{{Cb{L`}}}}{{{f{BFn}}A`}{{Bd{B`Bb}}}}{ce{}{}}00{{B`{f{Al}}}B`}{{{f{B`}}c}B`{AfKn}}{{{f{B`}}{f{{l{An}}}}{f{B`}}}{{Bd{B`Bb}}}}````{{{f{B`}}{f{B`}}c}B`{{E`{{f{B`}}{f{B`}}}{{Df{B`}}}}}}{{{BGl{}{{Df{c}}}}{f{B`}}}c{}}{{{f{BGn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Bf}}}}{f{B`}}}{{Bd{B`Bb}}}}`210210210210``{{{f{BNh}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Fd}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BNh}}c}{{Bd{B`Bb}}}Ah}{{{f{{l{Fd}}}}c}{{Bd{B`Bb}}}Ah}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{CHh}}}CHh}{{{f{c}}{f{Cne}}}b{}{}}{{}CHh}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{CHh}}{f{CHh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CHh}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{CHh}}{f{Cnc}}}bAG`}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}3``{{{f{c}}h}b{}}{{{f{CnDn}}}{{f{CnB`}}}}{{{f{Dn}}}{{f{B`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{Dn}}}Dn}{{{f{c}}{f{Cne}}}b{}{}}{{{f{Dn}}}B`}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{cc{}}{{}Fh}{ce{}{}}{{{f{CnB`}}}Dn}{{{f{CnDn}}{f{Cn{Ch{Cf}}}}}b}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Oj{}}5{{{f{CnDn}}{f{Cn{Ch{Cf}}}}e}c{}{{Dh{{f{Dn}}}{{Df{c}}}}}}","D":"AEJfKl","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",10240],[5,"ListType",1687,10241],[5,"ChunkedArray",17,10242],[5,"BinaryType",1687,10241],[1,"u8"],[1,"slice"],[10,"PolarsNumericType",1687,10241],[10,"Num",10243],[10,"ToPrimitive",10244],[5,"StringType",1687,10241],[1,"str"],[5,"BooleanType",1687,10241],[5,"Series",9762,10245],[6,"PolarsError",3071,10246],[6,"Result",10247],[10,"NumOpsDispatchInner",10163,10248],[6,"GroupsProxy",3444,10249],[5,"FixedSizeListType",1687,10241],[5,"ObjectType",1687,10241],[10,"PolarsObject",1260,10250],[5,"Settings",17,10242],[6,"Option",10251],[17,"Item"],[10,"Array",10252],[5,"Box",10253],[10,"Iterator",10254],[5,"AmortizedListIter",10255],[0,"mut"],[17,"IsNested"],[5,"FalseT",1687,10241],[10,"PolarsDataType",1687,10241],[17,"Output"],[10,"Fn",10256],[10,"Copy",10257],[6,"Cow",10258],[5,"UnstableSeries",10216,10259],[10,"FnMut",10256],[5,"Float32Type",1687,10241],[5,"Float64Type",1687,10241],[6,"DataType",1687,10260],[5,"String",10261],[5,"SortOptions",1382,10262],[5,"UInt32Type",1687,10241],[5,"BinaryOffsetType",1687,10241],[5,"SortMultipleOptions",1382,10262],[10,"PolarsIntegerType",1687,10241],[10,"NumOpsDispatchCheckedInner",10184,10263],[5,"Iter",10264],[1,"usize"],[1,"fn"],[5,"Map",10265],[5,"Vec",10266],[10,"DoubleEndedIterator",10267],[1,"i64"],[5,"OffsetsBuffer",10268],[1,"tuple"],[10,"IntoIterator",10269],[5,"Formatter",10270],[5,"Error",10270],[17,"Array"],[10,"FallibleIterator",10271],[5,"Bitmap",10272],[10,"PolarsAsRef",10273],[10,"AsRef",10274],[10,"Borrow",10275],[10,"IntoParallelIterator",10276],[10,"Send",10257],[10,"Sync",10257],[10,"NoOption",10277],[10,"TrustedLen",10278],[6,"AnyValue",1687,10279],[10,"PolarsObjectSafe",1260,10250],[6,"IsSorted",9762,10280],[1,"f32"],[1,"u64"],[5,"Int32Type",1687,10241],[5,"DateType",1687,10241],[5,"Logical",1687,10281],[5,"Int64Type",1687,10241],[6,"TimeUnit",1687,10282],[5,"DatetimeType",1687,10241],[5,"Int128Type",1687,10241],[5,"DecimalType",1687,10241],[5,"DurationType",1687,10241],[10,"ExactSizeIterator",10283],[5,"TimeType",1687,10241],[10,"PolarsFloatType",1687,10241],[10,"PolarsIterator",1188,10284],[5,"Iter",10285],[5,"IterNames",10285],[6,"ChunkedArrayLayout",17,10242],[10,"NumCast",10244],[1,"f64"],[5,"Range",10286],[5,"UInt64Type",1687,10241],[1,"i32"],[5,"Int16Type",1687,10241],[1,"i16"],[5,"UInt16Type",1687,10241],[1,"u16"],[1,"u32"],[5,"Int8Type",1687,10241],[1,"i8"],[5,"UInt8Type",1687,10241],[10,"ParallelIterator",10276],[10,"IndexedParallelIterator",10276],[6,"QuantileInterpolOptions",3807,10287],[5,"Field",1687,10288],[5,"RollingOptionsFixedWindow",3807,10289],[10,"PolarsOpsNumericType",10290],[10,"Sized",10257],[5,"ChunkId",3807,10291],[17,"HasViews"],[5,"RandomState",10292],[5,"BytesHash",10293],[5,"ViewRepr",10294],[1,"array"],[5,"Dim",10295],[5,"ArrayBase",10294],[5,"OwnedRepr",10296],[6,"Either",10297],[5,"TypeId",10298],[5,"NullableIdxSize",3807,10291],[10,"FnOnce",10256],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",866,10299],[5,"AnonymousListBuilder",894,10300],[5,"AnonymousOwnedListBuilder",894,10300],[5,"ListBooleanChunkedBuilder",894,10301],[5,"ListPrimitiveChunkedBuilder",894,10302],[10,"ListBuilderTrait",894,10303],[10,"ChunkedBuilder",894,10304],[5,"ListStringChunkedBuilder",894,10305],[5,"ListBinaryChunkedBuilder",894,10305],[5,"ListNullChunkedBuilder",894,10306],[5,"BinViewChunkedBuilder",894,10307],[10,"ViewType",10308],[5,"BooleanChunkedBuilder",894,10309],[5,"NullChunkedBuilder",894,10310],[5,"PrimitiveChunkedBuilder",894,10311],[10,"Clone",10312],[5,"NullChunked",10313],[10,"NewChunkedArray",894,10304],[10,"ChunkedCollectInferIterExt",1168,10314],[10,"ChunkedCollectIterExt",1168,10314],[10,"Canonical",1182,10315],[10,"ChunkedCollectParIterExt",1184,10316],[10,"FromParIterWithDtype",1184,10316],[5,"BooleanArray",10317],[5,"BoolIterNoNull",1188,10284],[5,"FixedSizeListArray",10318],[5,"FixedSizeListIterNoNull",1188,10284],[5,"StructIter",1188,10284],[5,"SomeIterator",1188,10284],[5,"ObjectArray",1260,10250],[6,"ArrowDataType",1687,10319],[10,"Any",10298],[10,"Debug",10270],[5,"BitmapIter",10320],[6,"ZipValidity",10321],[5,"Arc",3807,10322],[5,"ObjectChunkedBuilder",1331,10323],[10,"AnonymousObjectBuilder",1354,10324],[5,"ObjectRegistry",1354,10324],[17,"FuncRet"],[10,"ChunkApply",1382,10325],[10,"ChunkApplyKernel",1382,10325],[10,"ChunkSort",1382,10325],[10,"ChunkUnique",1382,10325],[10,"ChunkCast",1382,10325],[6,"FillNullStrategy",1382,10325],[10,"ChunkCompare",9762,10325],[10,"ChunkExplode",1382,10325],[10,"ChunkFillNullValue",1382,10325],[10,"ChunkFilter",1382,10325],[10,"ChunkFull",1382,10325],[10,"ChunkFullNull",1382,10325],[10,"ChunkAnyValue",1382,10325],[10,"Hasher",10326],[10,"IsFirstDistinct",1382,10325],[10,"IsLastDistinct",1382,10325],[10,"ChunkAgg",1382,10325],[10,"ChunkQuantile",1382,10325],[10,"ChunkExpandAtIndex",1382,10325],[10,"Reinterpret",1382,10325],[10,"ChunkReverse",1382,10325],[10,"ChunkRollApply",1382,10325],[10,"ChunkSet",1382,10325],[10,"ChunkShift",1382,10325],[10,"ChunkShiftFill",1382,10325],[10,"SlicedArray",1382,10327],[10,"ChunkVar",1382,10325],[10,"ChunkTake",1382,10325],[10,"ChunkTakeUnchecked",1382,10325],[10,"ChunkBytes",1382,10325],[10,"ChunkZip",1382,10325],[10,"BinaryFnMut",1580,10328],[10,"StaticArray",1687,10329],[10,"TernaryFnMut",1580,10328],[10,"Error",10330],[10,"UnaryFnMut",1580,10328],[5,"PrimitiveArray",10331],[6,"SearchSortedSide",1620,10332],[5,"NoNull",3807,10333],[5,"RowsEncoded",10334],[5,"NaiveDateTime",10335],[6,"Tz",10336],[5,"NaiveTime",10337],[5,"StructChunked",1687,10338],[5,"CategoricalChunked",1687,10339],[5,"CategoricalChunkedBuilder",1687,10340],[10,"ArrayFromIter",1687,10341],[10,"ArrayFromIterDtype",1687,10341],[10,"AsRefDataType",1687,10260],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",10342],[10,"From",10274],[5,"BinaryViewArrayGeneric",10308],[6,"RevMapping",1687,10343],[10,"CategoricalMergeOperation",1687,10344],[10,"LogicalType",1687,10281],[6,"CategoricalOrdering",1687,10343],[5,"OwnedObject",1687,10279],[6,"UnknownKind",1687,10260],[5,"CategoricalType",1687,10241],[6,"ArrowTimeUnit",1687],[10,"ArrayCollectIterExt",1687,10341],[5,"GlobalRevMapMerger",1687,10344],[10,"NumericNative",1687,10241],[10,"Into",10274],[5,"ArrowField",3807],[6,"IntegerType",10345],[6,"PrimitiveType",10346],[5,"TimeDelta",10347],[5,"NaiveDate",10348],[5,"LazyCompact",10349],[5,"SmartString",10350],[10,"GetAnyValue",1687,10279],[5,"CatIter",1687,10339],[6,"Ordering",10351],[5,"Duration",3807,10352],[1,"u128"],[6,"PhysicalType",10345],[5,"DataFrame",3162,10353],[5,"StringCacheHolder",3049,10354],[5,"ErrString",3071,10246],[6,"PolarsWarning",3071,10355],[5,"TryReserveError",10356],[6,"Error",10357],[5,"Utf8Error",10358],[5,"Error",10359],[5,"Error",10360],[6,"Error",10361],[10,"Display",10270],[5,"Schema",3807,10362],[10,"IntoSeries",9762,10363],[6,"NullStrategy",3162,10353],[6,"UniqueKeepStrategy",3162,10353],[5,"HashSet",10364],[5,"ArrowSchema",3807,10365],[5,"Row",3698,10366],[5,"GroupBy",3444,10367],[5,"DynamicGroupOptions",3807,10368],[5,"RangeInclusive",10286],[5,"RangeToInclusive",10286],[5,"RangeTo",10286],[5,"RangeFrom",10286],[5,"RangeFull",10286],[5,"RecordBatchIter",3162,10353],[5,"PhysRecordBatchIter",3162,10353],[5,"LazyFrame",3807,10369],[10,"IntoVec",3807,10333],[5,"MeltArgs",3415,10370],[5,"RollingGroupOptions",3807,10368],[10,"RangeBounds",10286],[6,"IndexOrder",3807,10371],[5,"StructArray",3807,10372],[5,"RecordBatchT",10373],[5,"GroupsIdx",3444,10249],[5,"UnitVec",10374],[6,"GroupByMethod",3444,10367],[5,"SlicedGroups",3444,10249],[5,"GroupsProxyParIter",3444,10249],[10,"UnindexedConsumer",10375],[6,"GroupsIndicator",3444,10249],[6,"AAggExpr",10376],[10,"IntoGroupsProxy",3444,10377],[5,"Copied",10378],[5,"Zip",10379],[5,"GroupsProxyIter",3444,10249],[10,"IsFloat",10380],[10,"NativeType",10381],[10,"AggList",3682,10382],[10,"TakeExtremum",3682,10383],[10,"PhysicalAggExpr",3695,10384],[6,"AnyValueBuffer",3698,10385],[6,"AnyValueBufferTrusted",3698,10385],[5,"Node",10386],[6,"IR",10387],[5,"Arena",10386],[6,"AExpr",10376],[10,"JoinDispatch",3807,10388],[5,"JoinArgs",3807,10389],[10,"SeriesTrait",9762,10280],[10,"DfTake",3807,10390],[10,"DataFrameOps",3807,10391],[5,"CsvReader",3807,10392],[10,"PhysicalIoExpr",10393],[10,"MmapBytesReader",10394],[6,"Expr",3807,10395],[10,"LhsNumOps",10163,10248],[10,"NumOpsDispatch",10163,10248],[5,"LazyGroupBy",3807,10369],[10,"Allocator",10396],[5,"JoinBuilder",3807,10369],[10,"AnonymousScan",3807,10397],[5,"LazyJsonLineReader",3807,10398],[5,"ScanArgsAnonymous",3807,10399],[10,"FunctionOutputField",3807,10400],[5,"SpecialEq",3807,10400],[6,"VisitRecursion",10401],[6,"FunctionExpr",3807,10402],[10,"ArgAgg",3807,10403],[5,"ArrayNameSpace",3807,10404],[5,"ListNameSpace",3807,10405],[5,"IpcStreamReader",3807,10406],[10,"Read",10407],[10,"SeriesUdf",3807,10400],[10,"AsBinary",3807,10408],[10,"StringMethods",8859,10409],[10,"PhysicalExpr",3807,10410],[5,"BorrowedFd",10411],[10,"AsFd",10411],[10,"AsList",3807,10412],[10,"PartitionedAggregation",3807,10410],[10,"AsRawFd",10413],[6,"AggExpr",3807,10395],[10,"SeriesSealed",3807,10414],[10,"StatsEvaluator",10393],[5,"PhysicalIoHelper",3807,10410],[10,"AsString",3807,10415],[20,"MaybeUninit",10416],[10,"StringNameSpaceImpl",3807,10417],[5,"OwnedBatchedCsvReader",3807,10418],[5,"CsvWriter",3807,10419],[5,"BatchedWriter",10419],[10,"Write",10407],[5,"IpcWriter",3807,10420],[5,"BatchedWriter",10420],[5,"ParquetReader",3807,10421],[5,"BatchedParquetReader",3807,10422],[5,"ParquetWriter",3807,10423],[5,"BatchedWriter",10424],[5,"BatchedCsvReader",3807,10418],[5,"BinaryNameSpace",8842,10425],[6,"Operator",3807,10395],[10,"RenameAliasFn",3807,10400],[5,"UserDefinedFunction",3807,10426],[10,"SeriesBinaryUdf",3807,10400],[5,"InProcessQuery",3807,10427],[5,"HashMap",10428],[5,"CategoricalNameSpace",3807,10429],[10,"RoundSeries",3807,10430],[10,"TemporalMethods",9645,10431],[10,"NumOpsDispatchChecked",10184,10263],[5,"RollingOptionsDynamicWindow",3807,10432],[5,"Bounds",3807,10433],[6,"ClosedWindow",3807,10434],[6,"Label",3807,10434],[6,"StartBy",3807,10434],[5,"Window",3807,10435],[5,"CsvReadOptions",3807,10436],[5,"CsvParseOptions",3807,10436],[6,"CsvEncoding",3807,10436],[6,"CommentPrefix",3807,10436],[6,"NullValues",3807,10436],[5,"CsvWriterOptions",3807,10437],[5,"SerializeOptions",3807,10437],[6,"QuoteStyle",3807,10437],[5,"IpcScanOptions",3807,10438],[5,"IpcWriterOptions",3807,10420],[6,"IpcCompression",3807,10420],[6,"InterpolationMethod",3807,10439],[5,"JsonWriterOptions",3807,10440],[5,"ParquetOptions",3807,10441],[6,"JoinCoalesce",3807,10389],[6,"ParallelStrategy",3807,10441],[6,"JoinType",3807,10389],[5,"ParquetWriteOptions",3807,10442],[6,"JoinValidation",3807,10389],[6,"ParquetCompression",3807,10442],[5,"AsOfOptions",3807,10443],[5,"GzipLevel",3807,10442],[6,"AsofStrategy",3807,10443],[5,"BrotliLevel",3807,10442],[5,"ZstdLevel",3807,10442],[6,"ClosedInterval",3807,10444],[5,"LazyCsvReader",3807,10445],[6,"RankMethod",3807,10446],[5,"RankOptions",3807,10446],[5,"ScanArgsIpc",3807,10447],[5,"ScanArgsParquet",3807,10448],[6,"DslPlan",3807,10449],[5,"When",3807,10450],[5,"Then",3807,10450],[5,"ChainedWhen",3807,10450],[5,"ChainedThen",3807,10450],[6,"Excluded",3807,10395],[6,"BooleanFunction",3807,10451],[6,"CategoricalFunction",3807,10452],[6,"PowFunction",3807,10453],[5,"DatetimeArgs",3807,10454],[5,"DurationArgs",3807,10454],[5,"RollingCovOptions",3807,10455],[5,"StrptimeOptions",3807,10455],[5,"JoinOptions",3807,10455],[6,"WindowType",3807,10455],[6,"WindowMapping",3807,10455],[5,"OptState",3807,10456],[6,"LiteralValue",3807,10457],[5,"AnonymousScanOptions",3807,10458],[5,"UnionArgs",3807,10458],[5,"FileMetaData",3807,10459],[5,"RollingVarParams",3807,10460],[5,"RollingQuantileParams",3807,10460],[6,"NonExistent",3807,10461],[10,"LazyFileListReader",3807,10462],[5,"CloudOptions",8995,10463],[10,"Ord",10351],[6,"ColumnOrder",10464],[10,"BinaryNameSpaceImpl",3807,10465],[5,"PathBuf",10466],[5,"IpcStreamWriterOption",3807,10406],[10,"SerWriter",3807,10467],[5,"IpcWriterOption",3807,10420],[10,"CrossJoin",3807,10468],[10,"ExprEvalExtension",3807,10469],[10,"DateMethods",8859,10470],[10,"DatetimeMethods",8859,10471],[10,"DurationMethods",8859,10472],[10,"BinaryUdfOutputField",3807,10400],[10,"Default",10473],[5,"RowGroupMetaData",10474],[5,"ParquetStatistics",3807],[6,"NullBehavior",10190,10475],[5,"Weak",10322],[5,"DateLikeNameSpace",9350,10476],[1,"char"],[10,"FromIterator",10269],[10,"PartialEq",10351],[10,"Scalar",10477],[10,"ListNameSpaceExtension",3807,10478],[5,"ExecutionState",10479],[5,"AggregationContext",3807,10410],[10,"Command",10480],[5,"StructNameSpace",3807,10481],[10,"SerReader",3807,10467],[5,"IpcReader",3807,10438],[5,"IpcStreamWriter",3807,10406],[5,"JsonWriter",3807,10440],[5,"JsonReader",3807,10440],[5,"JsonLineReader",3807,10482],[5,"File",10483],[10,"UdfSchema",3807,10484],[6,"ListFunction",10485],[6,"StringFunction",10486],[6,"ArrayFunction",10487],[6,"BinaryFunction",10488],[6,"RangeFunction",10489],[6,"TemporalFunction",10490],[6,"StructFunction",10491],[5,"Path",10466],[5,"CString",10492],[5,"CStr",10493],[5,"OsStr",10494],[10,"ToOwned",10258],[1,"never"],[5,"OsString",10494],[5,"MutableStatistics",10495],[5,"MutableStructArray",10496],[5,"GrowableStruct",10497],[10,"FromData",9344,10498],[5,"Buffer",10499],[10,"FromDataUtf8",9344,10498],[10,"FromDataBinary",9344,10498],[5,"ListArray",10500],[6,"Ambiguous",3807,10461],[10,"NamedFromOwned",3807,10501],[5,"FunctionOptions",10458],[10,"PartialOrd",10351],[6,"Context",10449],[5,"FieldsMapper",3807,10502],[10,"IndexOfSchema",3807,10362],[5,"BoundsIter",3807,10435],[6,"ReaderBytes",10394],[10,"PolarsTemporalGroupby",3807,10368],[10,"PolarsArray",3807,10503],[10,"Hash",10326],[10,"SeriesJoin",3807,10504],[10,"TimeMethods",8859,10505],[10,"DataFrameJoinOps",3807,10506],[10,"IntoListNameSpace",3807,10478],[5,"FileMetaData",10507],[10,"SeriesMethods",3807,10508],[5,"StructValueIter",10509],[10,"AsofJoin",3807,10443],[10,"AsofJoinBy",3807,10510],[10,"ListNameSpaceImpl",3807,10511],[5,"ExprNameNameSpace",3807,10512],[5,"KeyValue",10507],[10,"IntoLazy",3807,10369],[10,"Literal",3807,10457],[5,"Null",3807,10457],[5,"RowIndex",10513],[10,"ChunkAggSeries",3807,10514],[10,"QuantileAggSeries",3807,10515],[10,"PolarsMonthEnd",3807,10516],[10,"PolarsMonthStart",3807,10517],[10,"IndexToUsize",3807,10518],[10,"NamedFrom",3807,10501],[6,"RowGroupFetcher",10422],[5,"SplitNChars",3807,10519],[5,"Pin",10520],[5,"Request",10330],[10,"SeriesRank",3807,10446],[5,"BorrowedCursor",10521],[10,"VarInt",10522],[5,"IoSliceMut",10407],[10,"SeriesOpsTime",8859,10523],[10,"PolarsRound",3807,10524],[5,"AnonymousScanArgs",3807,10397],[10,"ChunkedSet",3807,10290],[5,"SchemaDescriptor",10525],[6,"SeekFrom",10407],[10,"VarAggSeries",3807,10526],[5,"StringNameSpace",10527],[10,"TakeChunked",3807,10390],[5,"IRPlan",10387],[10,"ToDummies",3807,10528],[10,"PolarsTruncate",3807,10529],[5,"AllocError",10396],[5,"RwLock",10530],[10,"PolarsUpsample",3807,10531],[10,"VecHash",3807,10532],[5,"NonZero",10533],[6,"JsonFormat",3807,10440],[5,"BTreeMap",10534],[5,"IoSlice",10407],[10,"ArrayNameSpace",8823,10535],[10,"AsArray",8823,10536],[10,"AsString",8927,10409],[6,"Pattern",8927,10537],[5,"DatetimeInfer",8965,10538],[10,"StrpTimeParser",8965,10538],[17,"Error"],[10,"TryFromWithUnit",8965,10538],[6,"CloudType",8995,10463],[5,"AnonymousBuilder",9405,10539],[6,"RollingFunction",9543,10540],[6,"RollingFunctionBy",9572,10541],[5,"MutableNullArray",9609,10542],[5,"MutableBitmap",10543],[10,"AsSeries",9645,10431],[5,"Utf8Array",10544],[5,"BinaryArray",10545],[5,"SeriesIter",9762,10546],[10,"InitHashMaps",1687],[10,"InitHashMaps2",1687],[5,"TrueT",1687],[15,"IO",8771],[15,"Context",8771],[15,"Count",8765],[15,"Slice",8766],[8,"AllowedOptimizations",3807],[10,"ListFromIter",3807],[15,"Quantile",8650],[15,"Min",8650],[15,"Max",8650],[15,"IsBetween",9514],[15,"Any",9514],[15,"All",9514],[15,"GroupBy",8660],[15,"Union",8660],[15,"Sort",8660],[15,"Cache",8660],[15,"ExtContext",8660],[15,"DataFrameScan",8660],[15,"Select",8660],[15,"HStack",8660],[15,"Scan",8660],[15,"MapFunction",8660],[15,"Filter",8660],[15,"Distinct",8660],[15,"Slice",8660],[15,"Sink",8660],[15,"Join",8660],[15,"HConcat",8660],[15,"SortBy",8711],[15,"Filter",8711],[15,"Cast",8711],[15,"Sort",8711],[15,"Gather",8711],[15,"RenameAlias",8711],[15,"Ternary",8711],[15,"Function",8711],[15,"Window",8711],[15,"AnonymousFunction",8711],[15,"Slice",8711],[15,"BinaryExpr",8711],[15,"Round",9517],[15,"RoundSF",9517],[15,"Clip",9517],[15,"BackwardFill",9517],[15,"ForwardFill",9517],[15,"Random",9517],[15,"GatherEvery",9517],[15,"Rank",9517],[15,"ValueCounts",9517],[15,"Replace",9517],[15,"CumCount",9517],[15,"CumSum",9517],[15,"CumProd",9517],[15,"CumMin",9517],[15,"CumMax",9517],[15,"Range",8768],[10,"Utf8FromIter",9758],[10,"BinaryFromIter",9758]],"r":[[1,10547],[2,10547],[3,10547],[4,10547],[6,10354],[7,10547],[8,10547],[9,10547],[13,10547],[14,10547],[16,10354],[17,10242],[18,10242],[19,10242],[25,10242],[118,10242],[151,10242],[152,10242],[178,10242],[179,10242],[240,10242],[305,10242],[453,10242],[593,10242],[597,10242],[735,10242],[866,10299],[894,10300],[895,10300],[896,10307],[897,10307],[898,10309],[899,10304],[900,10305],[901,10301],[902,10303],[903,10306],[904,10302],[905,10305],[906,10304],[907,10310],[908,10311],[909,10307],[1042,10304],[1058,10303],[1086,10304],[1151,10300],[1152,10300],[1153,10305],[1154,10301],[1155,10303],[1156,10306],[1157,10302],[1158,10305],[1166,10303],[1168,10314],[1169,10314],[1182,10315],[1184,10316],[1185,10316],[1188,10284],[1189,10284],[1190,10284],[1191,10284],[1192,10284],[1238,10284],[1258,10548],[1259,10548],[1260,10250],[1261,10250],[1262,10250],[1263,10250],[1274,10250],[1302,10250],[1331,10323],[1354,10324],[1355,10324],[1356,10324],[1357,10324],[1369,10324],[1370,10324],[1371,10324],[1374,10324],[1376,10324],[1383,10325],[1384,10325],[1385,10325],[1386,10325],[1387,10325],[1388,10325],[1389,10325],[1390,10325],[1391,10325],[1392,10325],[1393,10325],[1394,10325],[1395,10325],[1396,10325],[1397,10325],[1398,10325],[1399,10325],[1400,10325],[1401,10325],[1402,10325],[1403,10325],[1404,10325],[1405,10325],[1406,10325],[1407,10325],[1408,10325],[1409,10325],[1412,10325],[1413,10325],[1421,10325],[1422,10327],[1423,10262],[1424,10262],[1437,10325],[1478,10325],[1481,10325],[1490,10325],[1493,10325],[1536,10325],[1542,10325],[1578,10325],[1580,10328],[1584,10328],[1585,10328],[1586,10328],[1587,10328],[1588,10328],[1589,10328],[1590,10328],[1591,10328],[1592,10328],[1593,10328],[1594,10328],[1595,10328],[1596,10328],[1597,10328],[1598,10328],[1599,10328],[1600,10328],[1601,10328],[1602,10328],[1603,10328],[1604,10328],[1605,10328],[1606,10328],[1607,10328],[1608,10328],[1609,10328],[1610,10328],[1611,10328],[1612,10328],[1613,10328],[1614,10328],[1615,10549],[1616,10549],[1617,10550],[1618,10550],[1619,10550],[1623,10332],[1625,10332],[1643,10332],[1649,10327],[1650,10551],[1651,10551],[1652,10551],[1653,10551],[1656,10552],[1657,10553],[1658,10553],[1659,10553],[1660,10553],[1661,10553],[1662,10553],[1663,10553],[1664,10327],[1665,10262],[1666,10262],[1677,10554],[1678,10555],[1679,10555],[1680,10555],[1681,10554],[1682,10554],[1683,10556],[1684,10555],[1685,10555],[1686,10555],[1688,10279],[1692,10241],[1693,10341],[1694,10341],[1695,10341],[1696,10319],[1698,10260],[1702,10241],[1704,10241],[1705,10241],[1707,10241],[1712,10241],[1713,10241],[1714,10339],[1717,10339],[1718,10340],[1719,10344],[1720,10343],[1721,10241],[1722,10260],[1723,10260],[1724,10260],[1729,10557],[1730,10241],[1733,10558],[1734,10241],[1739,10559],[1740,10241],[1745,10560],[1746,10241],[1750,10241],[1751,10288],[1752,10288],[1755,10241],[1761,10241],[1762,10241],[1766,10241],[1767,10241],[1768,10279],[1770,10344],[1774,10561],[1775,10518],[1776,10561],[1777,10561],[1778,10562],[1779,10561],[1781,10241],[1782,10241],[1786,10241],[1787,10241],[1791,10241],[1792,10241],[1796,10241],[1797,10241],[1801,10241],[1802,10241],[1812,10241],[1813,10241],[1815,10281],[1816,10281],[1828,10241],[1831,10241],[1833,10241],[1834,10279],[1837,10562],[1838,10562],[1839,10561],[1840,10562],[1841,10562],[1842,10241],[1843,10241],[1844,10241],[1845,10241],[1847,10343],[1849,10329],[1853,10241],[1855,10241],[1859,10338],[1865,10563],[1866,10241],[1867,10282],[1868,10260],[1871,10241],[1875,10241],[1876,10241],[1880,10241],[1881,10241],[1885,10241],[1886,10241],[1890,10241],[1891,10241],[1895,10260],[2060,10344],[2072,10281],[2159,10260],[2668,10344],[2669,10344],[2672,10260],[3026,10339],[3027,10339],[3028,10340],[3029,10344],[3030,10343],[3032,10344],[3036,10343],[3037,10344],[3039,10344],[3040,10344],[3041,10339],[3042,10339],[3043,10343],[3048,10343],[3049,10354],[3055,10354],[3058,10354],[3066,10354],[3076,10246],[3082,10246],[3083,10246],[3084,10355],[3098,10246],[3111,10246],[3127,10355],[3134,10246],[3135,10246],[3136,10246],[3137,10246],[3138,10246],[3139,10355],[3140,10246],[3159,10564],[3160,10564],[3161,10564],[3163,10353],[3168,10353],[3169,10353],[3171,10353],[3172,10353],[3239,10353],[3273,10353],[3336,10353],[3415,10370],[3444,10249],[3447,10367],[3448,10367],[3450,10249],[3451,10249],[3452,10249],[3453,10249],[3454,10249],[3455,10249],[3458,10249],[3460,10377],[3472,10249],[3481,10367],[3548,10367],[3558,10367],[3682,10382],[3683,10383],[3684,10383],[3685,10383],[3686,10383],[3687,10383],[3688,10383],[3689,10383],[3690,10383],[3691,10383],[3695,10384],[3700,10385],[3701,10385],[3721,10366],[3752,10366],[3773,10366],[3787,10366],[3788,10366],[3789,10366],[3805,10565],[3806,10565],[3809,10395],[3811,10410],[3817,10456],[3819,10461],[3822,10397],[3823,10397],[3824,10458],[3830,10279],[3831,10322],[3832,10403],[3835,10299],[3839,10241],[3840,10341],[3842,10341],[3843,10341],[3844,10404],[3845,10252],[3846,10319],[3848,10365],[3850,10408],[3851,10412],[3853,10443],[3854,10260],[3855,10415],[3857,10443],[3858,10510],[3859,10443],[3862,10566],[3866,10418],[3867,10422],[3872,10241],[3873,10307],[3876,10465],[3878,10241],[3879,10241],[3881,10241],[3882,10400],[3889,10241],[3890,10309],[3891,10451],[3892,10241],[3893,10249],[3896,10433],[3897,10435],[3899,10442],[3903,10339],[3907,10339],[3908,10340],[3909,10452],[3910,10344],[3911,10429],[3912,10343],[3913,10241],[3916,10450],[3917,10450],[3918,10325],[3919,10514],[3920,10325],[3921,10325],[3922,10325],[3923,10325],[3924,10325],[3925,10325],[3926,10325],[3927,10325],[3928,10325],[3929,10325],[3930,10325],[3931,10325],[3932,10291],[3933,10389],[3934,10325],[3935,10325],[3936,10325],[3937,10325],[3938,10325],[3939,10325],[3940,10325],[3941,10325],[3942,10325],[3943,10325],[3944,10325],[3945,10325],[3946,10242],[3947,10304],[3948,10314],[3949,10314],[3950,10290],[3952,10444],[3953,10434],[3960,10436],[3967,10468],[3968,10436],[3969,10436],[3970,10436],[3971,10392],[3972,10419],[3973,10437],[3979,10260],[3980,10260],[3981,10353],[3982,10506],[3983,10391],[3987,10260],[3993,10557],[3994,10470],[3996,10241],[3999,10454],[4000,10558],[4001,10471],[4002,10241],[4007,10559],[4008,10241],[4010,10390],[4017,10449],[4021,10352],[4026,10454],[4027,10560],[4028,10472],[4029,10241],[4030,10460],[4031,10368],[4038,10395],[4041,10395],[4042,10469],[4043,10512],[4047,10566],[4048,10566],[4049,10241],[4050,10288],[4051,10288],[4052,10502],[4053,10512],[4054,10459],[4055,10567],[4057,10325],[4058,10325],[4067,10241],[4075,10241],[4076,10241],[4081,10241],[4082,10241],[4090,10498],[4091,10498],[4092,10498],[4095,10402],[4096,10400],[4100,10279],[4102,10400],[4104,10344],[4105,10367],[4107,10367],[4109,10249],[4110,10249],[4111,10249],[4112,10249],[4113,10249],[4114,10249],[4119,10442],[4126,10561],[4127,10566],[4131,10518],[4132,10561],[4133,10249],[4134,10291],[4135,10561],[4138,10427],[4140,10362],[4141,10371],[4142,10518],[4143,10562],[4144,10561],[4146,10389],[4149,10241],[4150,10241],[4155,10241],[4156,10241],[4161,10241],[4162,10241],[4167,10241],[4168,10241],[4173,10241],[4174,10241],[4176,10439],[4178,10377],[4179,10369],[4180,10478],[4181,10363],[4182,10333],[4184,10420],[4185,10438],[4186,10438],[4187,10406],[4188,10406],[4189,10406],[4190,10420],[4191,10420],[4192,10420],[4195,10325],[4199,10325],[4209,10389],[4210,10369],[4211,10389],[4212,10388],[4213,10455],[4215,10389],[4216,10389],[4218,10440],[4219,10482],[4221,10440],[4222,10440],[4223,10440],[4227,10434],[4229,10568],[4231,10568],[4232,10568],[4238,10445],[4239,10462],[4240,10369],[4241,10369],[4242,10398],[4248,10389],[4251,10248],[4257,10305],[4258,10301],[4259,10303],[4260,10241],[4262,10503],[4263,10405],[4264,10478],[4265,10511],[4266,10302],[4267,10305],[4268,10241],[4269,10457],[4271,10457],[4273,10281],[4276,10281],[4300,10370],[4318,10457],[4323,10501],[4324,10501],[4336,10304],[4338,10333],[4339,10461],[4349,10457],[4357,10436],[4358,10291],[4359,10291],[4360,10248],[4361,10263],[4362,10241],[4365,10241],[4367,10241],[4371,10395],[4372,10456],[4380,10418],[4381,10279],[4382,10441],[4383,10442],[4384,10441],[4385,10421],[4387,10442],[4388,10423],[4389,10410],[4390,10462],[4393,10410],[4394,10410],[4395,10562],[4396,10562],[4397,10561],[4398,10562],[4399,10562],[4401,10503],[4402,10241],[4403,10246],[4404,10241],[4405,10241],[4406,10284],[4407,10516],[4408,10517],[4409,10241],[4410,10250],[4411,10246],[4412,10524],[4413,10368],[4414,10529],[4416,10531],[4418,10453],[4419,10311],[4422,10515],[4423,10287],[4424,10437],[4432,10446],[4433,10446],[4434,10325],[4436,10400],[4440,10343],[4447,10455],[4450,10368],[4451,10432],[4452,10289],[4453,10460],[4454,10569],[4455,10460],[4458,10430],[4459,10570],[4464,10399],[4465,10447],[4466,10448],[4467,10362],[4470,10362],[4471,10332],[4475,10467],[4476,10467],[4477,10437],[4478,10245],[4480,10400],[4481,10504],[4482,10508],[4483,10523],[4484,10446],[4485,10414],[4486,10280],[4487,10400],[4499,10327],[4500,10249],[4505,10262],[4506,10262],[4507,10400],[4508,10519],[4510,10434],[4511,10329],[4519,10354],[4521,10241],[4522,10307],[4524,10409],[4525,10417],[4527,10241],[4528,10455],[4532,10372],[4533,10338],[4536,10481],[4543,10390],[4545,10431],[4547,10450],[4554,10563],[4555,10505],[4556,10241],[4557,10282],[4558,10260],[4560,10528],[4565,10241],[4571,10241],[4572,10241],[4577,10241],[4578,10241],[4583,10241],[4584,10241],[4589,10241],[4590,10241],[4591,10484],[4595,10458],[4597,10353],[4600,10260],[4602,10426],[4611,10526],[4612,10532],[4614,10450],[4616,10435],[4619,10455],[4620,10455],[4627,10442],[4714,10571],[4718,10571],[4729,10572],[4739,10367],[4741,10573],[4743,10574],[4755,10574],[4766,10575],[4772,10576],[4775,10577],[4788,10578],[4793,10578],[4795,10325],[4801,10579],[4830,10580],[4834,10581],[4838,10582],[4846,10576],[4848,10450],[5100,10344],[5105,10581],[5113,10576],[5121,10566],[5122,10566],[5123,10566],[5131,10583],[5134,10584],[5136,10584],[5138,10584],[5316,10585],[5322,10574],[5326,10586],[5327,10573],[5329,10587],[5341,10573],[5352,10587],[5354,10588],[5357,10587],[5358,10587],[5359,10588],[5360,10588],[5369,10503],[5370,10589],[5375,10590],[5376,10260],[5384,10591],[5386,10574],[5387,10591],[5389,10591],[5391,10591],[5393,10574],[5394,10591],[5401,10547],[5403,10577],[5404,10579],[5405,10454],[5407,10577],[5408,10577],[5409,10555],[5410,10555],[5411,10555],[5474,10503],[5475,10388],[5728,10495],[5730,10547],[5732,10592],[5870,10593],[5871,10576],[5876,10573],[5877,10573],[5879,10454],[5887,10352],[5888,10352],[6136,10367],[6162,10325],[6200,10576],[6204,10503],[6207,10325],[6212,10594],[6304,10367],[6308,10574],[6312,10588],[6526,10325],[6532,10576],[6534,10325],[6574,10566],[6576,10566],[6587,10434],[6588,10434],[6664,10595],[6676,10596],[6677,10596],[6679,10597],[6687,10573],[6693,10518],[6694,10598],[6825,10577],[6826,10577],[6828,10439],[6968,10444],[6970,10566],[6971,10598],[6978,10599],[6982,10600],[6985,10601],[6994,10581],[6997,10581],[7003,10589],[7038,10576],[7053,10576],[7065,10457],[7111,10344],[7112,10344],[7117,10575],[7128,10576],[7131,10576],[7139,10602],[7140,10566],[7141,10581],[7150,10581],[7156,10581],[7170,10260],[7180,10581],[7200,10579],[7240,10579],[7250,10603],[7251,10604],[7299,10605],[7320,10581],[7324,10576],[7325,10503],[7380,10246],[7381,10246],[7382,10246],[7383,10246],[7390,10506],[7400,10581],[7431,10574],[7442,10606],[7443,10607],[7445,10608],[7452,10596],[7454,10566],[7549,10325],[7562,10583],[7600,10503],[7618,10325],[7632,10519],[7634,10519],[7651,10595],[7665,10579],[7666,10609],[7668,10609],[7670,10609],[7672,10609],[7674,10609],[7686,10581],[7708,10450],[7712,10577],[8261,10576],[8281,10503],[8440,10450],[8648,10325],[8775,10382],[8776,10383],[8777,10383],[8778,10383],[8779,10383],[8780,10383],[8781,10383],[8782,10383],[8783,10383],[8784,10383],[8788,10328],[8792,10328],[8793,10328],[8794,10328],[8795,10328],[8796,10328],[8797,10328],[8798,10328],[8799,10328],[8800,10328],[8801,10328],[8802,10328],[8803,10328],[8804,10328],[8805,10328],[8806,10328],[8807,10328],[8808,10328],[8809,10328],[8810,10328],[8811,10328],[8812,10328],[8813,10328],[8814,10328],[8815,10328],[8816,10328],[8817,10328],[8818,10328],[8819,10328],[8820,10328],[8821,10328],[8822,10328],[8823,10535],[8824,10536],[8842,10425],[8858,10429],[8859,10470],[8860,10471],[8861,10472],[8862,10432],[8863,10523],[8864,10409],[8865,10505],[8918,10610],[8927,10409],[8933,10537],[8934,10409],[8956,10409],[8965,10538],[8967,10538],[8968,10538],[8978,10538],[8997,10463],[8998,10463],[9032,10611],[9044,10463],[9045,10463],[9051,10279],[9055,10241],[9056,10341],[9057,10341],[9058,10341],[9059,10319],[9061,10260],[9065,10241],[9067,10241],[9068,10241],[9070,10241],[9075,10241],[9076,10241],[9077,10339],[9080,10339],[9081,10340],[9082,10344],[9083,10343],[9084,10241],[9085,10260],[9086,10260],[9087,10260],[9092,10557],[9093,10241],[9096,10558],[9097,10241],[9102,10559],[9103,10241],[9108,10560],[9109,10241],[9113,10241],[9114,10288],[9115,10288],[9118,10241],[9124,10241],[9125,10241],[9129,10241],[9130,10241],[9131,10279],[9133,10344],[9137,10561],[9138,10518],[9139,10561],[9140,10561],[9141,10562],[9142,10561],[9144,10241],[9145,10241],[9149,10241],[9150,10241],[9154,10241],[9155,10241],[9159,10241],[9160,10241],[9164,10241],[9165,10241],[9175,10241],[9176,10241],[9178,10281],[9179,10281],[9191,10241],[9194,10241],[9196,10241],[9197,10279],[9200,10562],[9201,10562],[9202,10561],[9203,10562],[9204,10562],[9205,10241],[9206,10241],[9207,10241],[9208,10241],[9210,10343],[9212,10329],[9216,10241],[9218,10241],[9222,10338],[9228,10563],[9229,10241],[9230,10282],[9231,10260],[9234,10241],[9238,10241],[9239,10241],[9243,10241],[9244,10241],[9248,10241],[9249,10241],[9253,10241],[9254,10241],[9258,10260],[9271,10344],[9273,10281],[9278,10260],[9294,10344],[9295,10344],[9296,10260],[9314,10339],[9315,10339],[9316,10340],[9317,10344],[9318,10343],[9320,10344],[9324,10343],[9325,10344],[9327,10344],[9328,10344],[9329,10339],[9330,10339],[9331,10343],[9336,10343],[9337,10354],[9338,10354],[9339,10354],[9340,10354],[9341,10596],[9342,10596],[9343,10596],[9344,10498],[9345,10498],[9346,10498],[9350,10476],[9402,10384],[9405,10539],[9425,10549],[9426,10549],[9439,10451],[9441,10452],[9460,10402],[9485,10453],[9510,10402],[9511,10402],[9512,10402],[9513,10402],[9537,10452],[9541,10453],[9547,10540],[9576,10541],[9601,10550],[9602,10550],[9603,10550],[9604,10612],[9605,10613],[9606,10613],[9607,10613],[9608,10613],[9609,10542],[9642,10332],[9643,10332],[9644,10332],[9645,10431],[9646,10431],[9667,10327],[9670,10327],[9671,10551],[9672,10551],[9673,10551],[9674,10551],[9677,10552],[9678,10553],[9679,10553],[9680,10553],[9681,10553],[9682,10553],[9683,10553],[9684,10553],[9685,10327],[9686,10262],[9687,10262],[9698,10415],[9699,10519],[9700,10417],[9719,10595],[9727,10519],[9729,10519],[9731,10595],[9738,10609],[9740,10609],[9742,10609],[9744,10609],[9746,10609],[9752,10426],[9758,10614],[9759,10614],[9763,10325],[9765,10363],[9766,10280],[9769,10245],[9770,10546],[9771,10546],[9772,10280],[9787,10245],[9962,10245],[10077,10245],[10154,10245],[10163,10248],[10164,10248],[10165,10248],[10167,10248],[10171,10248],[10184,10263],[10185,10263],[10192,10475],[10216,10259],[10217,10259]],"b":[[31,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[32,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[33,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[34,"impl-Add-for-ChunkedArray%3CT%3E"],[35,"impl-Add-for-ChunkedArray%3CStringType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[38,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[39,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[40,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[41,"impl-Add-for-%26ChunkedArray%3CT%3E"],[42,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[44,"impl-AggList-for-ChunkedArray%3CT%3E"],[45,"impl-AggList-for-ChunkedArray%3CListType%3E"],[46,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[47,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[48,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[49,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[50,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkedArray%3CFixedSizeListType%3E"],[56,"impl-ChunkedArray%3CListType%3E"],[57,"impl-ChunkedArray%3CFixedSizeListType%3E"],[61,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[62,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[63,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[64,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[65,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[66,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[68,"impl-ChunkedArray%3CFixedSizeListType%3E"],[69,"impl-ChunkedArray%3CListType%3E"],[71,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CFloat64Type%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[76,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[77,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[79,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[80,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[81,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[82,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[83,"impl-ChunkedArray%3CBinaryType%3E"],[84,"impl-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkedArray%3CT%3E"],[88,"impl-ChunkedArray%3CFixedSizeListType%3E"],[89,"impl-ChunkedArray%3CListType%3E"],[90,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[91,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[92,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[93,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[94,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[95,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[96,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[97,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[98,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[99,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[100,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[101,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[103,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[104,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[105,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[106,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[107,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[108,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[109,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[110,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[111,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[112,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[116,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[117,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[120,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[121,"impl-ChunkedArray%3CStringType%3E"],[125,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[128,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[130,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[133,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[134,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[135,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[138,"impl-Flags-for-Settings"],[139,"impl-Settings"],[140,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[141,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[142,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[159,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[161,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[162,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[163,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[164,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[165,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[166,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[167,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[193,"impl-Div-for-ChunkedArray%3CT%3E"],[194,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[195,"impl-Div-for-%26ChunkedArray%3CT%3E"],[196,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[206,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[207,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[208,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[209,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[210,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[211,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[212,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[213,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[214,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[215,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[216,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[217,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[218,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[219,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[220,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[221,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[222,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[223,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[224,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[225,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[228,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[229,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[230,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[231,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[232,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[233,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[234,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[235,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[236,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[237,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[238,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[241,"impl-Debug-for-ChunkedArray%3CT%3E"],[242,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[243,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[244,"impl-Debug-for-ChunkedArray%3CListType%3E"],[245,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[246,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[247,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[248,"impl-LowerHex-for-Settings"],[249,"impl-Binary-for-Settings"],[250,"impl-UpperHex-for-Settings"],[251,"impl-Octal-for-Settings"],[252,"impl-Debug-for-Settings"],[254,"impl-ChunkedArray%3CListType%3E"],[255,"impl-ChunkedArray%3CFixedSizeListType%3E"],[261,"impl-Flags-for-Settings"],[262,"impl-Settings"],[270,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[271,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[272,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[273,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[275,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[276,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[277,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[278,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[279,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[280,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[281,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[283,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[284,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[285,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[287,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[288,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[289,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[290,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[291,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[292,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[293,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[294,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[295,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[296,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[297,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[298,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[299,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[300,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[301,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[302,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[303,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[304,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[307,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[308,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[309,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[310,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[311,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[312,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[313,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[314,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[316,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[317,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[318,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[319,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[320,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[321,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[322,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[323,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[324,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[325,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[326,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[327,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[330,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[331,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[332,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[333,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[334,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[335,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[336,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[337,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[338,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[339,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[340,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[341,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[342,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[343,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[344,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[345,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[347,"impl-ChunkedArray%3CFixedSizeListType%3E"],[348,"impl-ChunkedArray%3CListType%3E"],[350,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[351,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[352,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[353,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[354,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[355,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[356,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[357,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[358,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[359,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[360,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[361,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[362,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[363,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[364,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[365,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[366,"impl-ChunkedArray%3CListType%3E"],[367,"impl-ChunkedArray%3CFixedSizeListType%3E"],[369,"impl-ChunkedArray%3CListType%3E"],[370,"impl-ChunkedArray%3CFixedSizeListType%3E"],[375,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[376,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[377,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[378,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[379,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[380,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[381,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[382,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[383,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[384,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[385,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[386,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[388,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[389,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[390,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[391,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[392,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[393,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[394,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[395,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[396,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[397,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[398,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[399,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[400,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[401,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[402,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[403,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[404,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[405,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[412,"impl-ChunkedArray%3CListType%3E"],[413,"impl-ChunkedArray%3CFixedSizeListType%3E"],[425,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[426,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[427,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[428,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[429,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[430,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[431,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[432,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[435,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[436,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[457,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[468,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[469,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[470,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[471,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[472,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[473,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[474,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[475,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[476,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[477,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[478,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[479,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[480,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[481,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[482,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[483,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[484,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[485,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[486,"impl-ChunkedArray%3CBooleanType%3E"],[487,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[488,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[489,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[490,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[491,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[492,"impl-ChunkedArray%3CBooleanType%3E"],[493,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[494,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[495,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[496,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[497,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[498,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[499,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[500,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[501,"impl-ChunkedArray%3CBooleanType%3E"],[502,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[503,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[504,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[505,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[507,"impl-ChunkedArray%3CT%3E"],[508,"impl-ChunkedArray%3CBooleanType%3E"],[509,"impl-Mul-for-ChunkedArray%3CT%3E"],[510,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[511,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[512,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[514,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[515,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[516,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[518,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[520,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[523,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[527,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[528,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[529,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[530,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[531,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[532,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[533,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[534,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[535,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[536,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[538,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[539,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[540,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[541,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[542,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[543,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[544,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[545,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[546,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[547,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[548,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[549,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[550,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[551,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[552,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[553,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[554,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[555,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[556,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[557,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[559,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[560,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[561,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[562,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[563,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[564,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[565,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[566,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[571,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[572,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[574,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[575,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[577,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[578,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[579,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[580,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[581,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[582,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[583,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[584,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[585,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[586,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[587,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[588,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[589,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[590,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[591,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[594,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[595,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[596,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[598,"impl-ChunkedArray%3CListType%3E"],[599,"impl-ChunkedArray%3CStringType%3E"],[600,"impl-ChunkedArray%3CStringType%3E"],[601,"impl-ChunkedArray%3CListType%3E"],[604,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[605,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[606,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[607,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[608,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[609,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[628,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[629,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[630,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[631,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[632,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[633,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[634,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[635,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[636,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[637,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[638,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[639,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[640,"impl-Rem-for-ChunkedArray%3CT%3E"],[641,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[645,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[646,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[647,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[648,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[649,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[650,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[651,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[652,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[657,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[658,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[659,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[660,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[661,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[662,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[663,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[664,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[665,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[666,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[667,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[668,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[669,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[670,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[671,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[678,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[679,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[680,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[681,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[682,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[683,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[684,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[685,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[686,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[687,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[688,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[689,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[690,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[691,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[692,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[693,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[696,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[697,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[698,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[699,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[700,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[701,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[702,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[703,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[704,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[705,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[707,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[708,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[709,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[710,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[711,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[712,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[713,"impl-Sub-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkedArray%3CBooleanType%3E"],[718,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[719,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[720,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[721,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[722,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[725,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[726,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[729,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[730,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[731,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[732,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[733,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[734,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[739,"impl-ChunkedArray%3CListType%3E"],[740,"impl-ChunkedArray%3CFixedSizeListType%3E"],[741,"impl-ChunkedArray%3CT%3E"],[742,"impl-ChunkedArray%3CListType%3E"],[749,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[750,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[751,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[752,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[753,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[754,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[756,"impl-ChunkedArray%3CListType%3E"],[757,"impl-ChunkedArray%3CFixedSizeListType%3E"],[774,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[775,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[776,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[777,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[778,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[783,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[784,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[785,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[786,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[791,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[793,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[798,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[799,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[802,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[803,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[804,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[805,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[806,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[807,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[808,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[809,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[810,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[811,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[812,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[813,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[814,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[815,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[816,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[817,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[827,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[858,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[859,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[860,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[861,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[862,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[1037,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1038,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1265,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1266,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1298,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1299,"impl-ObjectArray%3CT%3E"],[1311,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1312,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1322,"impl-ObjectArray%3CT%3E"],[1323,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1325,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1326,"impl-ObjectArray%3CT%3E"],[1328,"impl-Array-for-ObjectArray%3CT%3E"],[1329,"impl-ObjectArray%3CT%3E"],[1332,"impl-ObjectChunkedBuilder%3CT%3E"],[1333,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1335,"impl-ObjectChunkedBuilder%3CT%3E"],[1336,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2062,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2063,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2064,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2065,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2066,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2070,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2071,"impl-Logical%3CDurationType,+Int64Type%3E"],[2312,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2313,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2314,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2315,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2316,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2324,"impl-PartialEq-for-DataType"],[2325,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2331,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2332,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2333,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2335,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2336,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2337,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2371,"impl-Display-for-AnyValue%3C\'_%3E"],[2372,"impl-Debug-for-AnyValue%3C\'a%3E"],[2374,"impl-Display-for-DataType"],[2375,"impl-Debug-for-DataType"],[2377,"impl-Display-for-TimeUnit"],[2378,"impl-Debug-for-TimeUnit"],[2383,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2385,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2398,"impl-From%3CK%3E-for-AnyValue%3C\'_%3E"],[2400,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2402,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2403,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2405,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2406,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2407,"impl-From%3C%26ArrowField%3E-for-Field"],[2432,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2433,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2456,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2457,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2458,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2459,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2460,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2464,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2465,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2466,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2467,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2468,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2503,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2504,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2505,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2507,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2508,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2509,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2608,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2609,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2610,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2611,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2612,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2660,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2661,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2662,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2664,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2665,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2666,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2679,"impl-PolarsMonthEnd-for-Logical%3CDatetimeType,+Int64Type%3E"],[2680,"impl-PolarsMonthEnd-for-Logical%3CDateType,+Int32Type%3E"],[2681,"impl-PolarsMonthStart-for-Logical%3CDateType,+Int32Type%3E"],[2682,"impl-PolarsMonthStart-for-Logical%3CDatetimeType,+Int64Type%3E"],[2705,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2706,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2707,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2708,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2709,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2710,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2711,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2712,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2717,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2718,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2719,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2721,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2722,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2723,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2727,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2728,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[2748,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[2749,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[2756,"impl-Logical%3CDurationType,+Int64Type%3E"],[2757,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2762,"impl-Logical%3CTimeType,+Int64Type%3E"],[2763,"impl-Logical%3CDateType,+Int32Type%3E"],[2764,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2778,"impl-Logical%3CDurationType,+Int64Type%3E"],[2779,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2826,"impl-Logical%3CTimeType,+Int64Type%3E"],[2827,"impl-Logical%3CDateType,+Int32Type%3E"],[2828,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2833,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[2834,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3113,"impl-Display-for-ErrString"],[3114,"impl-Debug-for-ErrString"],[3115,"impl-Display-for-PolarsError"],[3116,"impl-Debug-for-PolarsError"],[3120,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3121,"impl-From%3CError%3E-for-PolarsError"],[3122,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3123,"impl-From%3CError%3E-for-PolarsError"],[3124,"impl-From%3CError%3E-for-PolarsError"],[3125,"impl-From%3CError%3E-for-PolarsError"],[3248,"impl-Display-for-DataFrame"],[3249,"impl-Debug-for-DataFrame"],[3255,"impl-From%3C%26Schema%3E-for-DataFrame"],[3256,"impl-From%3CStructChunked%3E-for-DataFrame"],[3257,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3284,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3285,"impl-Index%3Cusize%3E-for-DataFrame"],[3286,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3287,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3288,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3289,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3290,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3291,"impl-Index%3C%26str%3E-for-DataFrame"],[3382,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3383,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3556,"impl-Debug-for-GroupByMethod"],[3557,"impl-Display-for-GroupByMethod"],[3564,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3565,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3566,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3600,"impl-IntoIterator-for-GroupsIdx"],[3601,"impl-IntoIterator-for-%26GroupsIdx"],[3603,"impl-IntoParallelIterator-for-GroupsIdx"],[3604,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4832,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4833,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5455,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[5456,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5457,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5928,"impl-Expr"],[5929,"impl-PartialEq-for-Expr"],[5932,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[5933,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[5946,"impl-PartialEq-for-Arc%3CT,+A%3E"],[5947,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[5948,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[5953,"impl-PartialEq-for-StructArray"],[5954,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6221,"impl-Display-for-Duration"],[6222,"impl-Debug-for-Duration"],[6249,"impl-Debug-for-JoinType"],[6250,"impl-Display-for-JoinType"],[6252,"impl-Debug-for-JoinValidation"],[6253,"impl-Display-for-JoinValidation"],[6263,"impl-Display-for-Expr"],[6264,"impl-Debug-for-Expr"],[6266,"impl-Debug-for-Operator"],[6267,"impl-Display-for-Operator"],[6269,"impl-Debug-for-BooleanFunction"],[6270,"impl-Display-for-BooleanFunction"],[6271,"impl-Display-for-CategoricalFunction"],[6272,"impl-Debug-for-CategoricalFunction"],[6273,"impl-Display-for-PowFunction"],[6274,"impl-Debug-for-PowFunction"],[6275,"impl-Display-for-FunctionExpr"],[6276,"impl-Debug-for-FunctionExpr"],[6289,"impl-Pointer-for-Arc%3CT,+A%3E"],[6290,"impl-Debug-for-Arc%3CT,+A%3E"],[6291,"impl-Display-for-Arc%3CT,+A%3E"],[6364,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6365,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6404,"impl-From%3C%26str%3E-for-Expr"],[6406,"impl-From%3Ci8%3E-for-Expr"],[6407,"impl-From%3Cf32%3E-for-Expr"],[6408,"impl-From%3Ci64%3E-for-Expr"],[6409,"impl-From%3Cbool%3E-for-Expr"],[6410,"impl-From%3Ci32%3E-for-Expr"],[6411,"impl-From%3Cu8%3E-for-Expr"],[6412,"impl-From%3Ci16%3E-for-Expr"],[6413,"impl-From%3CAggExpr%3E-for-Expr"],[6414,"impl-From%3Cu32%3E-for-Expr"],[6415,"impl-From%3Cf64%3E-for-Expr"],[6416,"impl-From%3Cu64%3E-for-Expr"],[6417,"impl-From%3Cu16%3E-for-Expr"],[6421,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6422,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6423,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6424,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6425,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6426,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6427,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6428,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6429,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6430,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6434,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6436,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6437,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6438,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6452,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6454,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6455,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6456,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6457,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6458,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6459,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6460,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6461,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6463,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6464,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6465,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6466,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6467,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6468,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6475,"impl-From%3CArrowSchema%3E-for-Schema"],[6476,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6478,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6479,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6480,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6481,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6483,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6484,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6498,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6499,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6507,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6508,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6520,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6521,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7605,"impl-Array-for-StructArray"],[7606,"impl-StructArray"],[7614,"impl-Array-for-StructArray"],[7615,"impl-StructArray"],[8284,"impl-Array-for-StructArray"],[8285,"impl-StructArray"],[8530,"impl-LazyCsvReader"],[8531,"impl-LazyFileListReader-for-LazyCsvReader"],[8532,"impl-LazyJsonLineReader"],[8533,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8579,"impl-LazyCsvReader"],[8580,"impl-LazyFileListReader-for-LazyCsvReader"],[8581,"impl-LazyJsonLineReader"],[8582,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8616,"impl-Array-for-StructArray"],[8617,"impl-StructArray"],[8984,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[8985,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[8990,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[8991,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9560,"impl-Debug-for-RollingFunction"],[9561,"impl-Display-for-RollingFunction"],[9589,"impl-Display-for-RollingFunctionBy"],[9590,"impl-Debug-for-RollingFunctionBy"],[9778,"impl-Add-for-Series"],[9779,"impl-Add%3CT%3E-for-Series"],[9780,"impl-Add-for-%26Series"],[9781,"impl-Add%3CT%3E-for-%26Series"],[9796,"impl-AsSeries-for-Series"],[9797,"impl-SeriesSealed-for-Series"],[9841,"impl-Div%3CT%3E-for-Series"],[9842,"impl-Div-for-%26Series"],[9843,"impl-Div-for-Series"],[9844,"impl-Div%3CT%3E-for-%26Series"],[9854,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9855,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9856,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9858,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9859,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9860,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9877,"impl-Display-for-Series"],[9878,"impl-Debug-for-Series"],[9882,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[9883,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[9884,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[9885,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[9887,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[9893,"impl-FromIterator%3Cf64%3E-for-Series"],[9894,"impl-FromIterator%3C%26u8%3E-for-Series"],[9895,"impl-FromIterator%3Ci32%3E-for-Series"],[9896,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[9897,"impl-FromIterator%3Cf32%3E-for-Series"],[9898,"impl-FromIterator%3C%26u32%3E-for-Series"],[9899,"impl-FromIterator%3CString%3E-for-Series"],[9900,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[9901,"impl-FromIterator%3C%26i64%3E-for-Series"],[9902,"impl-FromIterator%3C%26u64%3E-for-Series"],[9903,"impl-FromIterator%3Cu64%3E-for-Series"],[9904,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[9905,"impl-FromIterator%3Ci64%3E-for-Series"],[9906,"impl-FromIterator%3C%26i16%3E-for-Series"],[9907,"impl-FromIterator%3C%26u16%3E-for-Series"],[9908,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[9909,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[9910,"impl-FromIterator%3C%26bool%3E-for-Series"],[9911,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[9912,"impl-FromIterator%3C%26f64%3E-for-Series"],[9913,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[9914,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[9915,"impl-FromIterator%3Ci16%3E-for-Series"],[9916,"impl-FromIterator%3Cu16%3E-for-Series"],[9917,"impl-FromIterator%3Ci8%3E-for-Series"],[9918,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[9919,"impl-FromIterator%3C%26str%3E-for-Series"],[9920,"impl-FromIterator%3Cu8%3E-for-Series"],[9921,"impl-FromIterator%3Cbool%3E-for-Series"],[9922,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[9923,"impl-FromIterator%3C%26f32%3E-for-Series"],[9924,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[9925,"impl-FromIterator%3C%26i8%3E-for-Series"],[9926,"impl-FromIterator%3C%26i32%3E-for-Series"],[9927,"impl-FromIterator%3Cu32%3E-for-Series"],[9928,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[9929,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[9930,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[9931,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[9932,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[9933,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[9934,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[9935,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[9936,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[9937,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[9947,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9948,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9949,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9951,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9952,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9953,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9990,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9991,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9992,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9994,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9995,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9996,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10005,"impl-Mul%3CT%3E-for-Series"],[10006,"impl-Mul-for-Series"],[10007,"impl-Mul-for-%26Series"],[10008,"impl-Mul%3CT%3E-for-%26Series"],[10012,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[10013,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[10014,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[10015,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[10016,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[10017,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[10018,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[10019,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[10020,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[10021,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[10022,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[10023,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[10024,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[10025,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[10026,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[10027,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[10028,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[10029,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[10030,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[10031,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[10032,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[10033,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[10034,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[10035,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[10036,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[10037,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[10038,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[10039,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[10040,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[10041,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[10042,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[10043,"impl-NamedFrom%3CT,+T%3E-for-Series"],[10044,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[10045,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[10046,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[10047,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[10048,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[10049,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[10050,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[10051,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[10052,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[10053,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[10054,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[10055,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[10056,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[10057,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[10058,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[10059,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[10060,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[10061,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[10062,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[10068,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10069,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10070,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10072,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10073,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10074,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10082,"impl-Rem%3CT%3E-for-%26Series"],[10083,"impl-Rem%3CT%3E-for-Series"],[10084,"impl-Rem-for-%26Series"],[10108,"impl-Sub-for-%26Series"],[10109,"impl-Sub%3CT%3E-for-Series"],[10110,"impl-Sub-for-Series"],[10111,"impl-Sub%3CT%3E-for-%26Series"],[10136,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10138,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10139,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10140,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAJkN4A0dDiAOIQ4iDiMOJA4pDiwOMQ4yDlcO","e":"OzAAAAEAAM8c9gMCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB8AOgAAAD4ABQBIAAIATAAKAFsABQBiAAoAbwAAAHEABQB4AAsAhgACAIsAAACNAAIAkgAGAJoABgCiAAgArgAEALQAAAC5AAcAwgAIAM0AFQDlAAoA8QAQAAYBAAAJAQEADQENABwBEAA0ARQASwESAF8BEgB2AQAAeAEeAJkBAwClAREAugEDAMEBAQDGAQEAyQEGANUBJgD+AQcABwIyADwCAQA/AhEAUgIDAFcCBABdAgUAZwIAAGkCGgCGAgcAkgIOAKICAQCmAhAAuQIRAM0CBgDYAgEA3QIAAOECAQDoAgEA7gIHAPgCAQD7AgoABwMEAA0DAAAPAygAOgMAADwDIwBiAzQAmQMIAKYDEQC7A1gAIQQSAD8EBwBIBFwApgQAAKkEFADCBAMAygQDANAEHgDxBBMABgUHAA8FAAARBQAAEwUAABUFAQAZBQ4AKQUAACwFAAAuBQMAMwUBADYFAQA5BQgAQwUAAEUFBQBNBQEAUAUAAFIFAQBVBQMAWgUDAF8FAgBjBQMAaQUAAGwFAAB0BQAAeQUAAHwFAQCBBQEAhAUAAIcFAACOBQAAkwUCAJ4FBgCnBQ0AtwUFAL8FCADLBQIAzwUBANMFAADVBQEA2wUFAOQFAQDtBQEA+QUAAPsFAQD+BQAAAQYAAAMGAAAHBgAACQYAAA4GDAAdBgIAKwYAAC0GBwA2BgIAPAYAAD4GAwBDBgEARgYFAFIGFQBpBgEAbQYEAHMGAwB6BgYAjgYDAJMGBwCcBgQAowYCAKcGBQCvBgAAsQYMAMIGAQDGBgEAzAYBAM8GAQDSBgMA1wYAANkGAADcBgEA4AYAAOIGAQDlBgAA5wYCAOsGDAD5BgAA+wYBAP4GAAAABwEAAwcAAAUHAQAIBwAACgcBAA0HAAARBwAAFQcBABkHAAAcBwAAHgcAACAHAwAlBwAAKAcHADEHAQA0BwQAOgcBAD4HAABABwIARQcAAEoHAwBPBwEAUgcAAFQHAQBXBwAAWQcBAFwHAABeBwEAYQcAAGMHAQBmBwAAaAcAAGsHJQCSBxcAqwdrABkITgBpCAcAcwiUAAkJBgARCSgAOwkBAD4JDwBQCQAAUgkAAF8JAABhCQAAYwkBAGYJAgBqCQAAgQkBAIQJAACMCQAAjwkAAJEJBgCZCQQAnwkAAKEJBACnCQEAqgkZAMgJDgDZCSkABAoAAC8KCAA6CgAAPAoBAD8KBABFCgEASgoAAEwKBQBTCgAAVgoCAFsKBABhCgAAYwoPAHUKAAB4ChIAjAoAAI8KDACdCgwAqwoAAK0KAQCxCg4AwQoAAMgKAADKCgAAzwoPAOEKAADjCgIA6AogAA4LYgByCy0AoQsBAKQLMwDZCwEA3AsIAOYLAADoCwEA6wsEAPELAQD2CwAA+AsCAPwLAAAADBoAHAwRADAMBgA4DAMAPwwEAEUMFQBeDAAAYQwKAG0MAgB1DBAAiAwQAKAMAQCkDAIAqAwAAKoMAACvDAMAuAwDAMoMAADMDAAAzgwBANUMDADoDAIA+wwBAAgNAQAMDQAAEg0AABsNAQAeDQAAIQ0BACgNAAAqDQQAMg0GADsNCQBGDQAASQ0BAE0NBABZDQ0AaA0CAG0NCgB5DQEAfA0DAIENAwCGDQkAkQ0HAJoNAQCdDRgAtw0oAOENBgDtDQIA8Q0AAPMNAAD1DQMA+w0AAP8NBwAPDg0AHg4BACUOAwAqDgEALg4CADMOAAA1Dh8AWA4MAGcOBQBuDgcAdw4jAJ0OCwCqDg8Auw4AAL4OAwDFDgYAzw4OAOAOBgDpDgAA7A4IAPYOAQD6DgMA/w4FAAYPAAALDwkAFg8BABoPAgAeDwEAIQ8KAC0PAAAwDwAAMg8JAD0PAAA/DwgASQ8DAFEPAABUDwAAXA8CAGMPAABmDwEAbA8KAHgPCwCHDwYAjw8BAJIPAwCaDwMAoQ8CAKgPAwCtDwAArw8KALwPCQDHDwEAyw8AAM4PAADQDwIA1A8CANgPBADeDwIA5A8CAOoPAADsDwEA8A8AAPIPBAD5Dw4ACRAAAAwQAQAPEAMAFRACABsQEQAuEAkAOhAAADwQAQBAEAAAQhABAEYQAABIEAEATBAAAE4QAwBUEAEAVxABAFsQAABeEAAAYBADAGUQAgBpEAYAchAHAHwQAACAEAEAhBAAAIYQAACIEAEAixABAI4QAQCTEAsAohAFAKkQBwCzEAIAtxAFAMEQAQDEEAAAxhABAMkQAwDPEAEA0hACANYQAADYEAMA3hAEAOQQAwDpEAIA7RAAAO8QAADxEAEA9BAAAPYQAAD4EAAA+hACAP8QAwAEEQcADhECABQRAAAWEQUAHRECACERAAAkEQAAJhEDACwRAQAvEQMANBECADgRAgA8EQwAShEiAG4RBQB1EQMAfBEBAIARAACCEQUAiREEAI8RAACREQEAlREBAJgRAQCdEQcAqREFALARAwC3EQEAuhEFAMERAQDFEQEAyxEEANERBgDaEQAA3BEBAOARAADiEQEA5hEAAOgRAQDsEQAA7hEDAPQRAwD5EQEA/xEHAAgSAAALEgMAERICABUSVwBuEgMAdxIAAHkSAAB8EgUAhBIAAIsSAACOEgAAkBIAAJISAACWEgUAoBIAAKQSAACrEgAArxIAALsSAQC+EgQAxBIAAMYSAgDKEgEA0BICANUSBADbEgAA3RIBAOUSCgDyEvIA5hMAAOgTAQDrEwAA7RMCAPQTAQD6EwAA/BMAAAQUAAAIFAEACxQAABUUSQBgFAoAbBRVAMMUAQDHFAIAzRQCANMUCgDhFAQA6xQAAO0UAAD3FAEA+xQAAAEVAAADFQEACBUBABcVAAAdFQAAIhUCACgVAAAqFQUAMhUpAF0V+gBaFgAAXxYBAGIWAwBoFgAAahYCAHEWMQCkFjcA3RYNAO8WAQD0FgAA9xYAAPsWAgD/FikAKhcQADwXCwBLF54A7BcAAPIXAAD1FwAA+BcFAP8XAAADGAAACRgAAAsYAAATGAAAFhgAAB8YAAAiGAIAJxgFAC4YAQAzGAAANRgDAD0YAABBGAAARRhdAKQYAACnGAAAzRgAANcYAADdGAEA6RgAAAUZAAAHGQsAFhkJACMZAAAlGQIALhkAAD8ZAABHGQAATBkBAE8ZAwBUGQEAWBkAAF0ZAABgGQQAZhkAAGwZAQBwGQIAdhkFAH0ZAgCBGQIAhRkAAIcZAACJGQAAjhkAAJcZAACaGQEAnRkCAKIZAACkGQAAqBkBAKwZBAC1GQEAuRkAAMQZAADGGTwABhoCAA0aAAAPGgAAERoEABgaAAAaGgAAHRoAACQaAgApGnsApxoAAKwaAQAnGwAAKRsGADIbAQA1GwUAPRsAAD8bAgBDGwEARxsAAEobAQBQGwAAWBsAAFobAABdGwUAZRsCAHYbAQB5GwEAghsAAIQbAQCHGwAAixsCAJEbAACTGwEAlxsAAJwbAQCgGwEApBsCAKgbAwCuGw4AwhsAAMgbAQDPGwAA0hsFANsbAADjGwIA9xsAAP8bAQADHAAABhwBAAkcAAAMHAAAEBwAABUcAAAXHAAAHRwAAB8cAgAmHAgANRwIAEMcAABFHAAASRwAAE8cAABRHAMAWRwBAFwcAQBfHAAAYhwHAGscAABtHAAAbxwAAHIcAwCEHAAAhxwBAJIcBgCeHAIAphwAAKwcAgCwHAAAuxwAAL0cAwDCHAUAyhwFANUcAwDaHAAA3hwCAOQcAADnHAAA8xwAAPYcAQD5HAEA/BwDAAIdBQAJHQQAFB0AABYdAAAaHQAAHR0CACMdAAAnHQAAKR0AACsdAQBOHQAAUx0AAF0dAwBiHQUAaR0AAGsdAABuHQAAcx0AAHcdAAB5HQIAfR0BAIIdAACEHQEAhx0BAIodAQCRHQMAmB0AAKQdAACmHQAArR0EALYdAAC4HQAAvB0AAL4dAQDDHQAAxR0AAMsdCQDWHQAA2B0AANsdAADiHQAA5B0AAOsdAADyHQoA/x0CAAQeAgAOHgAAHR4AAB8eAAAiHgIAJh4DACweAQAvHgAAMx4AADceVwCRHgkAnB4AAKIeCwCvHgEAsh6GADsfAAA/H3cAuh8AALwfAwDHHwAAyh8AAM4fdgBGIAAAUiAAAFggBQBfIAAAYiAAAGQgAABmIAAAaSAAAHAgAAByIAAAdCB3APQgAwD9IAAAACEAAAMhAAAFIQEACiEAABIhAAAbIQAAIiEAADEhAAA+IQEAUCEAAFQhAABWIQEAYCEDAGUhBAB4IQAAhSEAAIchAACLIQAAkiEAAKIhAQCpIQAAqyEAAK8hFADIIQEAyyFFABMiAAAVIgAAFyIBABoiAQAdIgQAIyImAEwiBQBTIgkAXiICAGQiAABmIgMAayIBAG4iBQB4IhIAjCIBAI8iAgCUIgAAlyIDAJwiBgCzIgAAwSICANciAADgIggA7SIAAO8iCwD8IgIAACMRABMjAQAWIw8AJyMXAEEjAABDIwIASCMMAFYjBwBfIwQAZiMCAGojBQByIwAAdCMMAIUjAQCJIwEAjyMBAJIjAQCVIwMAmiMAAJwjAACfIwEAoyMAAKUjAQCoIwAAqiMCAK4jDAC8IwAAviMBAMEjAADDIwEAxiMAAMgjAQDLIwAAzSMBANAjAADUIwAA2CMBANwjAADfIwAA4SMAAOMjAwDoIwAA6yMHAPQjAQD3IwQA/SMBAAEkAAADJAIACCQAAA0kAwASJAEAFSQAABckAQAaJAAAHCQBAB8kAAAhJAEAJCQAACYkAQApJAAAKyQAAC4kEQBBJAYASiQAAE0kEABfJAgAaSQBAGwkCAB2JAAAeCQBAH4kAACAJAQAiSQBAJIkAgCYJAAAmiQAAKQkAACzJAMAuyQKAMckAADJJAgA1CSGAFwlAQBfJRgAeSUBAHwlCQCIJREAmyUAAJ0lDwCuJQIAtSUAAMglAwDPJQYA4yUFAOslAAD0JQAA9iUBAP0lBwALJgoAHyYEACUmAAAnJgIAKyYEADMmAwA4JgEAPCYAAEImBABLJgIATyYGAFkmAgBgJgIAZCYBAGomDgB8JgEAgCYBAIMmAACFJgAAiCYCAJUmAwCbJgMAoCYAAKMmAAClJi4A1yYAAN0mAQDgJgEA5CYAAOomAQDtJgIA8yYDAP4mAgAFJwAACCcBAAwnAQARJwAAFicDAB0nAwAiJy0AUicBAFYnAQBZJwAAWycAAF4nAQBjJwIAaCcAAGonAABtJwEAcicBAHYnAAB6JwAAfScDAIUnAACQJwAAkicBAJUnDgCqJwEAricCALInAAC0JxYAzScBANEnDgDhJwEA5CcFAOsnCgD3JwAA+ScAAPsnBAA="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGTPPTTFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCFIKKNNNNNMNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPNMMMMMMNMCNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFPRIIIIIKKKKRGPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHHNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPFPPPPPGIGPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPIFEKPPKGEEIEKGPPGFFFPPEEPKFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNOONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNMNNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNKKKKKFFFNHHHHHHHNHHENNNNNNNNHHNNHHNNNNNNNNNNNNNHHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNHNNNNENHHHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkIdIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","checked_div","checked_div_num","chunk_id","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal_missing","equal_missing","extend","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_name","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_flags","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","insert","intersection","intersects","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_no_null_iter","into_series","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_as_series","mean","mean","median","median_as_series","min","min","min_as_series","min_max","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_as_series","prune_empty_chunks","quantile","quantile_as_series","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","remove","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","sort","sort_with","std","std_as_series","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_as_series","symmetric_difference","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_as_series","vzip","vzip","vzip","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","One","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash_impl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","last","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max","max_as_series","max_as_series","max_as_series","mean","median","median","median_as_series","median_as_series","merge_dtypes","min","min_as_series","min_as_series","min_as_series","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_as_series","quantile_as_series","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_as_series","std_as_series","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_as_series","sum_as_series","sum_as_series","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","value","value_unchecked","value_within_range","values_iter","var_as_series","var_as_series","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_as_series","merge_map","min_as_series","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_as_series","max_as_series","median_as_series","metadata","metadata","min_as_series","min_as_series","min_periods","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_as_series","prod_as_series","provide","ptr_eq","quantile_as_series","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_as_series","store","string_cache","strong_count","sum_as_series","sum_as_series","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_as_series","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","new","new_inserting_at_index","remove","rename","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_sum_as_series","_sum_as_series","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_as_series","max_as_series","mean","mean","mean_as_series","median","median","median_as_series","median_as_series","min","min_as_series","min_as_series","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_as_series","quantile_as_series","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","sort_with","std","std","std_as_series","std_as_series","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_as_series","tail","take","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","unstable","var","var","var_as_series","var_as_series","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Arg","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","materialize_dyn_int","new","new","next","next_back","rayon","size_hint","slice_slice","split_ca","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[476,"polars_core::chunked_array::arithmetic"],[504,"polars_core::chunked_array::builder"],[608,"polars_core::chunked_array::builder::list"],[762,"polars_core::chunked_array::collect"],[776,"polars_core::chunked_array::float"],[778,"polars_core::chunked_array::from_iterator_par"],[782,"polars_core::chunked_array::iterator"],[819,"polars_core::chunked_array::iterator::par"],[821,"polars_core::chunked_array::object"],[892,"polars_core::chunked_array::object::builder"],[915,"polars_core::chunked_array::object::registry"],[943,"polars_core::chunked_array::ops"],[1064,"polars_core::chunked_array::ops::arity"],[1099,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1101,"polars_core::chunked_array::ops::gather"],[1104,"polars_core::chunked_array::ops::search_sorted"],[1133,"polars_core::chunked_array::ops::sort"],[1140,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1141,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1148,"polars_core::chunked_array::ops::sort::options"],[1222,"polars_core::chunked_array::temporal"],[1223,"polars_core::chunked_array::temporal::conversion"],[1226,"polars_core::config"],[1230,"polars_core::datatypes"],[2603,"polars_core::datatypes::categorical"],[2743,"polars_core::datatypes::categorical::revmap"],[2795,"polars_core::datatypes::categorical::string_cache"],[2814,"polars_core::datatypes::revmap"],[2820,"polars_core::datatypes::string_cache"],[2824,"polars_core::error"],[2885,"polars_core::error::PolarsError"],[2889,"polars_core::error::constants"],[2892,"polars_core::export"],[2900,"polars_core::fmt"],[2930,"polars_core::frame"],[3192,"polars_core::frame::explode"],[3221,"polars_core::frame::group_by"],[3456,"polars_core::frame::group_by::GroupByMethod"],[3457,"polars_core::frame::group_by::GroupsProxy"],[3459,"polars_core::frame::group_by::aggregations"],[3472,"polars_core::frame::group_by::expr"],[3475,"polars_core::frame::row"],[3569,"polars_core::functions"],[3571,"polars_core::hashing"],[3619,"polars_core::prelude"],[4173,"polars_core::prelude::PolarsError"],[4177,"polars_core::prelude::default_arrays"],[4183,"polars_core::prelude::list"],[4206,"polars_core::prelude::null"],[4236,"polars_core::prelude::revmap"],[4242,"polars_core::prelude::slice"],[4245,"polars_core::prelude::string_cache"],[4249,"polars_core::prelude::utf8"],[4253,"polars_core::random"],[4254,"polars_core::schema"],[4326,"polars_core::series"],[4707,"polars_core::series::arithmetic"],[4732,"polars_core::series::arithmetic::checked"],[4740,"polars_core::series::ops"],[4766,"polars_core::series::unstable"],[4790,"polars_core::utils"],[4899,"polars_core::utils::flatten"],[4904,"dyn_clone::sealed"],[4905,"num_traits"],[4906,"num_traits::cast"],[4907,"polars_error"],[4908,"polars_core::series::arithmetic::borrowed"],[4909,"polars_core::frame::group_by::proxy"],[4910,"core::option"],[4911,"core::iter::traits::iterator"],[4912,"core::ops::function"],[4913,"core::marker"],[4914,"polars_core::datatypes::dtype"],[4915,"alloc::string"],[4916,"polars_core::datatypes::aliases"],[4917,"polars_core::series::arithmetic::borrowed::checked"],[4918,"polars_arrow::array"],[4919,"alloc::vec"],[4920,"core::iter::traits::double_ended"],[4921,"core::iter::traits::collect"],[4922,"core::fmt"],[4923,"core::result"],[4924,"polars_utils::iter::fallible"],[4925,"polars_arrow::bitmap::immutable"],[4926,"rayon::iter"],[4927,"polars_arrow::trusted_len"],[4928,"polars_core::datatypes::any_value"],[4929,"polars_core::series::series_trait"],[4930,"polars_core::chunked_array::logical::decimal"],[4931,"core::iter::traits::exact_size"],[4932,"bitflags::iter"],[4933,"core::slice::iter"],[4934,"core::iter::adapters::map"],[4935,"core::convert"],[4936,"core::ops::range"],[4937,"polars_arrow::legacy::kernels::rolling::no_nulls"],[4938,"polars_core::datatypes::field"],[4939,"polars_core::chunked_array::ops::rolling_window"],[4940,"polars_utils::index"],[4941,"ahash::random_state"],[4942,"polars_utils::hashing"],[4943,"ndarray::aliases"],[4944,"either"],[4945,"core::any"],[4946,"polars_core::chunked_array::arithmetic::numeric"],[4947,"polars_core::chunked_array::builder::string"],[4948,"polars_arrow::array::binview"],[4949,"polars_core::chunked_array::builder::boolean"],[4950,"polars_core::chunked_array::builder::null"],[4951,"polars_core::chunked_array::builder::primitive"],[4952,"core::clone"],[4953,"polars_core::chunked_array::builder::list::anonymous"],[4954,"polars_core::chunked_array::builder::list::boolean"],[4955,"polars_core::chunked_array::builder::list::primitive"],[4956,"polars_core::chunked_array::builder::list::binary"],[4957,"polars_core::chunked_array::builder::list::null"],[4958,"alloc::boxed"],[4959,"polars_arrow::array::boolean"],[4960,"polars_arrow::datatypes"],[4961,"polars_arrow::bitmap::utils::iterator"],[4962,"polars_arrow::bitmap::utils::zip_validity"],[4963,"alloc::sync"],[4964,"polars_arrow::offset"],[4965,"core::hash"],[4966,"polars_arrow::array::static_array"],[4967,"core::error"],[4968,"polars_arrow::array::primitive"],[4969,"polars_arrow::legacy::array::slice"],[4970,"polars_row::row"],[4971,"chrono::naive::datetime"],[4972,"alloc::borrow"],[4973,"polars_arrow::array::static_array_collect"],[4974,"bytemuck::zeroable"],[4975,"polars_core::chunked_array::logical::categorical"],[4976,"polars_core::chunked_array::logical::categorical::merge"],[4977,"polars_core::chunked_array::logical"],[4978,"polars_core::datatypes::time_unit"],[4979,"polars_arrow::datatypes::physical_type"],[4980,"polars_arrow::types"],[4981,"core::borrow"],[4982,"smartstring::alias"],[4983,"polars_arrow::pushable"],[4984,"core::cmp"],[4985,"polars_core::chunked_array::logical::categorical::builder"],[4986,"polars_core::chunked_array::logical::categorical::revmap"],[4987,"polars_core::chunked_array::logical::categorical::string_cache"],[4988,"polars_error::warning"],[4989,"polars_core::series::from"],[4990,"polars_utils::aliases"],[4991,"polars_arrow::datatypes::schema"],[4992,"polars_core::chunked_array::ndarray"],[4993,"polars_arrow::record_batch"],[4994,"polars_arrow::array::struct_"],[4995,"polars_utils::idx_vec"],[4996,"rayon::iter::plumbing"],[4997,"polars_core::frame::group_by::into_groups"],[4998,"core::iter::adapters::copied"],[4999,"core::iter::adapters::zip"],[5000,"polars_arrow::legacy::kernels::rolling"],[5001,"polars_utils::float"],[5002,"polars_arrow::types::native"],[5003,"polars_core::frame::group_by::aggregations::agg_list"],[5004,"polars_core::frame::row::av_buffer"],[5005,"polars_arrow::array::binary"],[5006,"polars_core::hashing::identity"],[5007,"hashbrown::map"],[5008,"polars_core::hashing::vector_hasher"],[5009,"core::alloc"],[5010,"std::os::fd::owned"],[5011,"std::os::fd::raw"],[5012,"core::mem::maybe_uninit"],[5013,"polars_arrow::legacy::kernels::time"],[5014,"core::default"],[5015,"polars_arrow::scalar"],[5016,"std::fs"],[5017,"std::io::error"],[5018,"regex::error"],[5019,"simdutf8::basic"],[5020,"alloc::collections"],[5021,"std::ffi::os_str"],[5022,"std::path"],[5023,"alloc::ffi::c_str"],[5024,"core::ffi::c_str"],[5025,"polars_arrow::legacy::array::default_arrays"],[5026,"polars_arrow::buffer::immutable"],[5027,"polars_arrow::array::list"],[5028,"polars_core::named_from"],[5029,"polars_arrow::legacy::array"],[5030,"polars_core::chunked_array::ops::aggregate"],[5031,"polars_core::chunked_array::ops::aggregate::quantile"],[5032,"polars_arrow::legacy::index"],[5033,"core::pin"],[5034,"core::io::borrowed_buf"],[5035,"std::io"],[5036,"polars_core::chunked_array::ops::aggregate::var"],[5037,"alloc::collections::btree::map"],[5038,"polars_arrow::legacy::array::list"],[5039,"polars_arrow::legacy::array::null"],[5040,"polars_arrow::bitmap::mutable"],[5041,"polars_arrow::array::utf8"],[5042,"polars_core::series::iterator"],[5043,"polars_arrow::legacy::utils"],[5044,"polars_arrow::legacy::trusted_len::rev"],[5045,"smartstring::config"],[5046,"smartstring"],[5047,"polars_error::constants"],[5048,"polars_arrow::legacy::prelude"],[5049,"polars_arrow::legacy::array::utf8"],[5050,"polars_core::utils::any_value"],[5051,"polars_core::utils::schema"],[5052,"polars_core::utils::supertype"],[5053,"polars_core::utils::series"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````````{{{f{c}}h}b{}}0{{{f{{l{j}}}}}d}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{}An}{{{f{{l{Al}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bh}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}42{{{f{Bj{l{c}}}}{f{{l{c}}}}}b{{C`{}{{Bl{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cd{B`}{{Cb{B`}}}}Cf}}{{{f{{l{j}}}}c}{{l{j}}}{{Cj{Ch}{{Cb{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{{l{Cl}}}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{{l{Cn}}}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{}{{Cj{B`}{{Cb{{B`{e}}}}}}}C`}{{{l{c}}e}{{l{c}}}n{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}{f{Cd}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cd}}}{{l{e}}}nC`}{{{f{{l{D`}}}}c}{{l{D`}}}{{Cj{{f{{Dd{Db}}}}}{{Cb{{f{{Dd{Db}}}}}}}}}}{{{f{{l{Df}}}}c}{{l{Df}}}{{Cj{{f{Bh}}}{{Cb{{f{Bh}}}}}}}}{{{f{Bj{l{c}}}}e}bn{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}Dhg}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{Df}}}}c}{{l{Df}}}{{Cj{{f{Bh}}{f{BjDj}}}}}}{{{f{{l{j}}}}{f{Cd}}}{{Af{Dl}}}}{{{f{{l{c}}}}g{f{Bj{Dd{e}}}}}bn{}{{Cd{B`{f{e}}}{{Cb{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}g}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{c}}}}Dn}E`n}{{{f{{l{c}}}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}n}{{{f{{l{c}}}}}{{Af{E`}}}n}`{{{f{{l{Df}}}}}Ed}{{{f{{l{c}}}}}{{f{{l{c}}}}}C`}{{{f{{l{c}}}}}{{f{Dh}}}C`}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEf{}}{{AnAn}An}{{{f{BjAn}}An}b}210{{{f{An}}}Db}0321{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00``{{{f{{l{c}}}}{f{Dh}}}{{Af{Ad}}}n}{{{f{{l{c}}}}e}{{l{g}}}n{{Cd{}{{Cb{}}}}Cf}n}1{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Eh}{{{f{{l{c}}}}e}{{Af{Ad}}}EhAb}{{{f{{l{c}}}}}EjC`}{{{f{{l{c}}}}}{{f{{En{El}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{En{El}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}C`}0{{{f{An}}}An}{{{f{c}}{f{Bje}}}b{}{}}0``{AnAn}{{{f{{l{c}}}}}{{Af{{f{Dd}}}}}n}{{{f{An}}An}d}{{{f{{l{c}}}}}{{`{{F`{}{{Bb{{f{Dd}}}}}}}}}n}{{}{{l{c}}}C`}{{}An}{Fb{{f{c}}}{}}00{Fb{{f{Bjc}}}{}}00{{AnAn}An}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{Fbb}{{{f{Bj{l{c}}}}}bC`}11{{{f{{l{c}}}}}{{f{Dh}}}C`};{{{f{An}}{f{An}}}d}{{{f{{l{c}}}}e}FdnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}10{{{f{Bj{l{c}}}}{f{{l{c}}}}}bn}{{{f{BjAn}}c}b{{Ff{}{{Bb{An}}}}}}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fd}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}}{{B`{Fb}}}C`}`{{{f{{l{c}}}}{f{BjFh}}}Fjn}{{{f{{l{Al}}}}{f{BjFh}}}Fj}{{{f{An}}{f{BjFh}}}Fj}0000{{{f{{l{c}}}}e}bC`{{Cj{B`}}}}{{{f{{l{j}}}}c}b{{Cj{{B`{Ch}}}}}}{c{{l{e}}}Fl{{C`{}{{Fn{c}}}}}}{cc{}}00{Db{{B`{An}}}}{DbAn}00{{{f{Bh}}c}{{l{e}}}Ff{{C`{}{{Fn{}}}}C`}}{{{f{{l{c}}}}e}{{l{c}}}{{C`{}{{Fn{}}}}C`}Ff}{{{f{Bh}}{En{El}}}{{l{c}}}C`}{{{f{Bh}}{En{El}}Dh}{{l{c}}}C`}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}0{c{{l{e}}}{{Ff{}{{Bb{{Gf{En{B`{Gd}}}}}}}}}n}{c{{l{e}}}{{Ff{}{{Bb{B`}}}}}n}{c{{l{Al}}}{{Ff{}{{Bb{{B`{d}}}}}}}}{cAn{{Ff{}{{Bb{An}}}}}}{{{f{Bh}}c}{{l{e}}}{{Bf{}{{Bb{B`}}}}}n}32{{{f{Bh}}c}{{l{e}}}{{Bf{}{{Bb{}}}}}n}`{{{f{Bh}}}{{B`{An}}}}{c{{l{e}}}{{Gh{}{{Bb{B`}}}}}n}{{{f{Bh}}{f{Dd}}}{{l{c}}}n}{{{f{Bh}}{f{{Dd{B`}}}}}{{l{c}}}n}{c{{l{e}}}{{Gj{}{{Bb{B`}}}}}n}{{{f{Bh}}En}{{l{c}}}n}{{{f{Bh}}En{B`{Gd}}}{{l{c}}}n}{{{f{Bh}}Fb}{{l{c}}}n}0{{{f{{l{c}}}}Fb}{{l{c}}}C`}{{{f{Bh}}Fb{f{Dh}}}Dl}{{{f{{l{c}}}}Fb}B`C`}{{{f{{l{c}}}}Fb}{{Af{Gl}}}n}{{{f{{l{c}}}}Fb}Gln}{{{f{{l{j}}}}Fb}{{B`{Ad}}}}{{{f{{l{c}}}}}AnC`}{{{f{{l{j}}}}}Ad}{{{f{{l{{Gn{c}}}}}}Fb}{{B`{{f{H`}}}}}Hb}0{{{f{An}}}Hd}7{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}FbdFb}AjEf}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}{{{f{{l{c}}}}e}FdnAb}10{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}{B`{Fb}}}{{l{c}}}C`}{{}Fb}00{{FbHf{B`{Hh}}}{{l{c}}}n}{{{f{{l{j}}}}}Dh}{{{f{BjAn}}An}b}{{AnAn}An}{{{f{An}}An}d}{ce{}{}}00{{{l{Hj}}{B`{Fb}}Fb}{{Af{Hl}}}}{{{l{Hj}}{B`{Fb}}Fb}Hl}{{{f{{l{c}}}}}en{}}{Anc{}}{{{f{{l{c}}}}}{{`{HnI`{Ib{}{{Bb{}}}}F`Gj}}}n}{{{l{c}}}AdC`}{{{f{An}}}d}?0{{{f{{l{c}}}}}FdId}000{{{f{{l{c}}}}}FdC`}0{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}HdC`}{{{f{{l{c}}}}}{{`{{If{}{{Bb{B`}}}}}}}C`}{{{f{An}}}{{Ih{An}}}}{{{f{An}}}{{Ij{An}}}}{{{f{{l{c}}}}}{{J`{{Il{El}}{In{{f{El}}}{{Cb{{B`{{f{Gd}}}}}}}}}}}C`}`{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fb}}}C`}{{{f{{l{c}}}}}{{Jb{c}}}C`}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{c}}}}}FbC`}{{{f{{l{c}}}}e}{{l{c}}}n{A`Jd}}00{{{f{{l{c}}}}Fb}{{l{c}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}{{{f{{l{c}}}}e}FdnAb}10{{{f{{l{c}}}}}B`n}{{{f{{l{Al}}}}}{{B`{d}}}}{{{f{{l{c}}}}}Adn}{{{f{{l{c}}}}}{{B`{Jf}}}n}{{{f{{l{Al}}}}}{{B`{Jf}}}}{{{f{{l{c}}}}}{{B`{Jf}}}Ef}{{{f{{l{c}}}}}AdEf}564{{{f{{l{c}}}}}{{B`{Gf}}}n}{{{f{Bh}}{f{{Dd{Db}}}}FbFb}{{l{Al}}}}{{{f{Bh}}{f{Dd}}}{{l{c}}}n}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}{{Af{Fb}}}n}{{{f{{l{c}}}}}{{f{Bh}}}C`}{{{f{Bh}}c}{{l{Cn}}}{{Jh{{Dd{{B`{Hf}}}}}}}}{{{f{Bh}}{Jl{Jj}}}{{l{Jn}}}}{{{f{Bh}}c}{{l{K`}}}{{Jh{{Dd{{B`{Kb}}}}}}}}{{{f{Bh}}c}{{l{D`}}}{{Jh{{Dd{{B`{{En{Db}}}}}}}}}}{{{f{Bh}}c}{{l{Kd}}}{{Jh{{Dd{{B`{Hh}}}}}}}}{{{f{Bh}}c}{{l{Kf}}}{{Jh{{Dd{Kh}}}}}}{{{f{Bh}}c}{{l{Df}}}{{Jh{{Dd{Dj}}}}}}{{{f{Bh}}c}{{l{Cl}}}{{Jh{{Dd{{B`{Jf}}}}}}}}{{{f{Bh}}c}{{l{Cl}}}{{Jh{{Dd{Jf}}}}}}{{{f{Bh}}c}{{l{Kf}}}{{Jh{{Dd{{B`{Kh}}}}}}}}{{{f{Bh}}c}{{l{Jn}}}{{Jh{{Dd{{B`{Jj}}}}}}}}{{{f{Bh}}{Jl{Hh}}}{{l{Kd}}}}{{{f{Bh}}c}{{l{Jn}}}{{Jh{{Dd{Jj}}}}}}{{{f{Bh}}{Jl{Kh}}}{{l{Kf}}}}{{{f{Bh}}c}{{l{K`}}}{{Jh{{Dd{Kb}}}}}}{{{f{Bh}}c}{{l{Al}}}{{Jh{{Dd{d}}}}}}{{{f{Bh}}c}{{l{D`}}}{{Jh{{Dd{{En{Db}}}}}}}}{{{f{Bh}}c}{{l{Cn}}}{{Jh{{Dd{Hf}}}}}}{{{f{Bh}}{Jl{Kb}}}{{l{K`}}}}{{{f{Bh}}c}{{l{Al}}}{{Jh{{Dd{{B`{d}}}}}}}}{{{f{Bh}}c}{{l{Df}}}{{Jh{{Dd{{B`{Dj}}}}}}}}{{{f{Bh}}c}{{l{Kd}}}{{Jh{{Dd{Hh}}}}}}{{{f{Bh}}}{{l{{Gn{c}}}}}Hb}{{{f{{l{c}}}}FbFb}{{l{c}}}n}{{{f{Bh}}{En{c}}}{{l{{Gn{c}}}}}Hb}{{{f{Bh}}{En{c}}Gd}{{l{{Gn{c}}}}}Hb}{{{f{Bh}}En}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Id}{AnAn}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}{{{f{{l{c}}}}e}FdnAb}10{{{f{{l{c}}}}}FbC`}``{{{f{{l{j}}}}}{{`{{Kj{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{{l{Df}}}}}{{`{{Kj{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Kl{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{{l{Df}}}}}{{`{{Kl{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{{l{c}}}}}Adn}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}JfKn}{{Af{{B`{Jf}}}}}Ef}{{{f{{l{c}}}}JfKn}{{Af{Ad}}}Ef}{{{f{Bh}}FbJf}{{Af{{l{Al}}}}}}{{{f{Bh}}FbJfJf}{{Af{{l{c}}}}}n}{{{f{Bh}}Fb}{{l{c}}}n}{{{f{Bh}}FbJfJf}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{L`}}}C`}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{BjAn}}An}b}{{{f{Bj{l{c}}}}{f{Bh}}}bC`}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cd}}Lb}{{Af{Ad}}}n}{{{f{{l{c}}}}Fbe}{{Af{{l{c}}}}}Id{{Cj{{f{Bj{l{c}}}}}{{Cb{B`}}}}}}{{{f{{l{c}}}}Jfdd{B`{Hh}}}{{Af{{l{c}}}}}C`}{{{f{{l{c}}}}Fbdd{B`{Hh}}}{{Af{{l{c}}}}}C`}{{{f{{l{c}}}}eB`}{{Af{{l{c}}}}}n{{Ff{}{{Bb{Ld}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Ff{}{{Bb{Ld}}}}}{{Cd{B`}{{Cb{B`}}}}}}{{{f{{l{c}}}}{f{Fd}}B`}{{Af{{l{c}}}}}n}{{{f{BjAn}}And}b}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{j}}}}Dh}b}{{{f{Bj{l{c}}}}Ld}bC`}{{{f{Bj{l{c}}}}Hd}bC`}{{{f{BjAn}}Hd}b}{{{f{{l{c}}}}Kh}{{l{c}}}n}{{{f{{l{c}}}}KhB`}{{l{c}}}n}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}KhFb}{{l{c}}}C`}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dn}{{l{c}}}n}{{{f{{l{c}}}}Db}{{B`{Jf}}}n}{{{f{{l{c}}}}Db}AdEf}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{AnAn}An}{{{f{BjAn}}An}b}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}B`n}{{{f{{l{Al}}}}}{{B`{Ld}}}}{{{f{{l{c}}}}}Adn}5{{{f{{l{c}}}}{B`{Fb}}}{{l{c}}}C`}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}C`{{Jh{{Dd{Ld}}}}Lf}}{{{f{{l{c}}}}{f{E`}}}{{Af{{l{c}}}}}C`}{{{f{{l{c}}}}{f{E`}}}{{l{c}}}{{C`{}{{Lh{Bn}}}}C`}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{C`{}{{Lh{Bn}}}}C`}{{Jh{{Dd{Ld}}}}Lf}}`{{{f{{l{c}}}}dLj}{{En{{En{Ll}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}Id}{{{f{{l{Df}}}}Fb}{{Af{Ad}}}}{{{f{Bj{l{j}}}}Dh}b}{{{f{{l{j}}}}}{{Af{Ln}}}}{{{f{{l{c}}}}}{{Af{M`}}}n}{{{f{c}}}e{}{}}0{{{f{{l{D`}}}}}Mb}{{{f{{l{c}}}}}{{En{B`}}}n}{{{f{{l{c}}}}}{{Md{En{En{B`}}}}}n}{{{f{BjAn}}An}b}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Cj{Ch}{{Cb{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Af{{B`{c}}}}}}}}Cf}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{G`{{B`{e}}g}}}}}}Cf}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{G`{eg}}}}}}}C`}{c{{G`{e}}}{}{}}00{{{f{Bh}}g}{{G`{{l{i}}e}}}Fl{}{{Ff{}{{Bb{{G`{ce}}}}}}}{{C`{}{{Fn{c}}}}C`}}111{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Af{{B`{Ad}}}}}}}}}}{{{f{c}}}Mf{}}00{{AnAn}An}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}C`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}Fb}{}C`}{{{f{{l{c}}}}Db}{{B`{Jf}}}n}{{{f{{l{c}}}}Db}AdEf}{ce{}{}}00{{{f{Bh}}c}{{l{e}}}Fl{{C`{}{{Fn{c}}}}C`}}{{{f{{l{c}}}}{En{El}}}{{l{c}}}C`}{{{l{c}}{f{Bh}}}{{l{c}}}C`}{{{f{{Dd{Mh}}}}e}c{}{{Mj{{f{E`}}}{{Cb{c}}}}}}{{{f{{l{c}}}}Hd}{{l{c}}}C`}{{{l{c}}}en{}}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}2310{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}453201453267453201542301{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fd}}{f{{l{c}}}}}{{Af{{l{c}}}}}C`}````{{{Nb{}{{Ml{c}}{Mn{e}}{N`{g}}}}{Nb{}{{Ml{c}}{Mn{e}}{N`{g}}}}}e{}{}{}}{{{Nb{}{{Ml{c}}{Mn{e}}{N`{g}}}}c}e{}{}{}}{{c{Nb{}{{Ml{c}}{Mn{e}}{N`{g}}}}}e{}{}{}}{{{Nb{}{{Ml{c}}{Mn{e}}{N`{g}}}}{Nb{}{{Ml{c}}{Mn{e}}{N`{g}}}}}g{}{}{}}{{{Nb{}{{Ml{c}}{Mn{e}}{N`{g}}}}c}g{}{}{}}{{c{Nb{}{{Ml{c}}{Mn{e}}{N`{g}}}}}g{}{}{}}{{{Nb{}{{Ml{c}}{Mn{e}}{N`{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BjNd}}}b}{{{f{Bj{Nf{c}}}}}b{NhLf}}{{{f{BjNj}}}b}{{{f{BjNl}}}b}{{{f{Bj{Nn{c}}}}}bn}{{{f{Bj{Nf{c}}}}{B`{e}}}b{NhLf}{{Jh{c}}}}{{{f{BjNd}}{B`{c}}}b{}}{{{f{BjNd}}c}b{}}{{{f{Bj{Nf{c}}}}e}b{NhLf}{{Jh{c}}}}{{{f{BjNj}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bjc}}}{{f{Bje}}}{}{}}000{{{f{{Nf{c}}}}}{{Nf{c}}}{NhLf}}{{{f{Nj}}}Nj}{{{f{Nl}}}Nl}{{{f{{Nn{c}}}}}{{Nn{c}}}{nO`}}{{{f{c}}{f{Bje}}}b{}{}}000{Fb{{f{c}}}{}}000{Fb{{f{Bjc}}}{}}000{Fbb}000{Nd{{l{c}}}C`}{{{Nf{Bh}}}Mb}{{{Nf{{Dd{Db}}}}}Ed}{ObMb}{OdEd}{NjFd}`{{{Nn{c}}}{{l{c}}}n}{cc{}}000{{{f{Bh}}e}Of{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}e}Of{}{{Bf{}{{Bb{c}}}}}}{{{f{Bh}}{f{{Dd{c}}}}}Of{}}{{{f{Bh}}{f{{Dd{{B`{c}}}}}}}Of{}}{{}Fb}000{ce{}{}}000`{{{f{Bh}}Fb}{{Nf{c}}}{NhLf}}{{{f{Bh}}Fb}Nj}{{{f{Bh}}Fb}Nl}{{{f{Bh}}Fb}{{Nn{c}}}n}{{{f{BjNd}}}b}{{{f{BjNj}}}b}{{{f{BjNl}}}b}{{{f{Bj{Nn{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{G`{e}}}{}{}}0000000{{{f{c}}}Mf{}}000;;;;````````{{{f{BjOh}}{f{Fl}}}b}{{{f{BjOh}}}b}{{{f{BjOj}}}b}{{{f{BjOl}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Gj}}{{{f{Bj{On{c}}}}e}bn{{Bf{}{{Bb{B`}}}}Gj}}{{{f{Bj{On{c}}}}e}bn{{Bf{}{{Bb{}}}}Gj}}{{{f{BjA@`}}}b}54{{{f{BjA@b}}}b}{{{f{BjA@d}}}b}{{{f{BjOl}}}b}{{{f{BjA@f}}}b}{{{f{Bj{On{c}}}}}bn}{{{f{BjOh}}{B`{{f{Fl}}}}}b}{{{f{BjOh}}{B`{{f{Ad}}}}}{{Af{b}}}}{{{f{BjA@`}}{B`{{f{Ad}}}}}{{Af{b}}}}{{{f{Bj{On{c}}}}{B`{{f{Dd}}}}}bn}{{{f{BjA@`}}{f{Ad}}}{{Af{b}}}}{{{f{BjOh}}{f{Ad}}}{{Af{b}}}}{{{f{BjOj}}{f{Ad}}}{{Af{b}}}}{{{f{BjA@b}}{f{Ad}}}{{Af{b}}}}{{{f{BjA@d}}{f{Ad}}}{{Af{b}}}}{{{f{BjOl}}{f{Ad}}}{{Af{b}}}}{{{f{BjA@f}}{f{Ad}}}{{Af{b}}}}{{{f{Bj{On{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bj{On{c}}}}{f{Dd}}}bn}{{{f{BjA@b}}c}b{{Bf{}{{Bb{{B`{{f{Bh}}}}}}}}Gj}}{{{f{BjA@d}}c}b{{Bf{}{{Bb{{B`{{f{{Dd{Db}}}}}}}}}}Gj}}{{{f{BjA@b}}c}b{{Bf{}{{Bb{{f{Bh}}}}}}}}{{{f{BjA@d}}c}b{{Bf{}{{Bb{{f{{Dd{Db}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bjc}}}{{f{Bje}}}{}{}}000000`{{}Oh}{{}Oj}{Fb{{f{c}}}{}}000000{Fb{{f{Bjc}}}{}}000000{Fbb}000000{{{f{A@b}}}d}{{{f{A@d}}}d}{{{f{Ol}}}d}{{{f{{On{c}}}}}dn}{{{f{A@`}}}d}{{{f{A@b}}}{{f{L`}}}}{{{f{A@d}}}{{f{L`}}}}{{{f{Ol}}}{{f{L`}}}}{{{f{{On{c}}}}}{{f{L`}}}n}{{{f{A@`}}}{{f{L`}}}}{{{f{BjOh}}}Dl}{{{f{BjOj}}}Dl}{{{f{BjA@f}}}Dl}{{{f{BjA@`}}}Dl}{cc{}}000000{{{f{Dh}}FbFb{f{Bh}}}{{Af{{A@h{A@`}}}}}}{{}Fb}000000{{{f{BjA@b}}}El}{{{f{BjA@d}}}El}{{{f{BjOl}}}El}{{{f{Bj{On{c}}}}}Eln}{{{f{BjA@`}}}El}{ce{}{}}000000{{{f{Bh}}Fb{B`{Dh}}}Oh}{{{f{Bh}}Fb{B`{Dh}}}Oj}{{{f{Bh}}FbFb}A@b}{{{f{Bh}}FbFb}A@d}{{{f{Bh}}FbFb}Ol}{{{f{Bh}}Fb}A@f}{{{f{Bh}}FbFbDh}{{On{c}}}n}{{{f{Bh}}FbFbDhDh}{{On{c}}}n}{c{{G`{e}}}{}{}}0000000000000{{{f{c}}}Mf{}}000000:::::::``{{A@j{f{Bh}}}{{l{c}}}C`}{{A@l{f{{l{c}}}}}{{l{c}}}C`}10{{A@l{f{Bh}}Dh}{{l{c}}}C`}0{{A@j{f{Bh}}}{{G`{{l{c}}e}}}C`{}}{{A@l{f{{l{c}}}}}{{G`{{l{c}}e}}}C`{}}10{{A@l{f{Bh}}Dh}{{G`{{l{c}}e}}}C`{}}0`{A@nA@n}``{{AA`{f{Bh}}Dh}e{}{{AAb{c}}}}{{e{f{Bh}}Dh}AAb{}{{Gh{}{{Bb{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{cc{}}0{{}Fb}0{ce{}{}}000{{{f{AAd}}}AAf}{{{f{BjAAf}}}{{B`{c}}}{}}{{{f{Bj{AAh{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{AAh{c}}}}}{{B`{e}}}F`{}}`{{{f{AAf}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{{AAh{c}}}}}{{Gf{Fb{B`{Fb}}}}}Bf}{c{{G`{e}}}{}{}}000{{{f{c}}}Mf{}}088``````{{{f{c}}h}b{}}{e{{AAj{c}}}Hb{{Ff{}{{Bb{{f{c}}}}}}}}{e{{AAj{c}}}Hb{{Ff{}{{Bb{{B`{{f{c}}}}}}}}}}{{AAle}g{}{{Ff{}{{Bb{c}}}}}{}}0{{{f{H`}}}{{f{AAn}}}}{{{f{{AAj{c}}}}}{{f{AAn}}}Hb}{{{f{Bj{AAj{c}}}}}{{f{BjAAn}}}Hb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}`{{{f{{AAj{c}}}}}{{AAj{c}}}{HbO`}}{{{f{c}}{f{Bje}}}b{}{}}{{{f{{AAj{c}}}}}{{f{AAl}}}Hb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{{f{H`}}}}{f{{f{H`}}}}}d}{{{f{H`}}{f{H`}}}d}{{{f{{AAj{c}}}}{f{BjFh}}}Fj{HbAB`}}{cc{}}{{FbAAl}{{AAj{c}}}Hb}{{{f{{AAj{c}}}}Fb}{{B`{{f{c}}}}}Hb}{{}AAl}{{{f{Gd}}{f{{AAj{c}}}}{f{{AAj{c}}}}}{{AAj{c}}}Hb}{{AAl{f{Gd}}cc}{{AAj{e}}}{}Hb}{{{f{Gd}}{f{{AAj{c}}}}e}{{AAj{c}}}Hb{}}{{{f{Gd}}c{f{{AAj{e}}}}}{{AAj{e}}}{}Hb}{{}Fb}{ce{}{}}{{{f{{AAj{c}}}}}eHb{}}{{{f{{AAj{c}}}}Fb}dHb}{{{f{c}}Fb}d{}}1{{{f{{AAj{c}}}}}{{ABf{{f{c}}{ABb{c}}ABd}}}Hb}{{{f{{AAj{c}}}}}{{ABf{egABd}}}Hb{}{}}{{{f{{AAj{c}}}}}FbHb}0`{{{f{Bj{AAj{c}}}}{B`{Gd}}}bHb}{{{f{Bj{AAj{c}}}}FbFb}bHb}{{{f{c}}FbFb}e{}{}}01{{{f{H`}}}{{A@h{H`}}}}{{{f{{AAj{c}}}}}{{A@h{Fl}}}Hb}{{{f{c}}}e{}{}}{g{{G`{{AAj{c}}e}}}Hb{}{{Ff{}{{Bb{{G`{{f{c}}e}}}}}}}}{g{{G`{{AAj{c}}e}}}Hb{}{{Ff{}{{Bb{{G`{{B`{{f{c}}}}e}}}}}}}}{{AAlg}{{G`{ie}}}{}{}{{Ff{}{{Bb{{G`{ce}}}}}}}{}}0{c{{G`{e}}}{}{}}0{{{f{c}}}Mf{}}{{{f{H`}}}{{f{Bh}}}}{{}{{f{Bh}}}}{{{f{{AAj{c}}}}}{{B`{{f{Gd}}}}}Hb}{{{f{{AAj{c}}}}Fb}{{f{c}}}Hb}{{{f{{AAj{c}}}}Fb}eHb{}}1{{{f{{AAj{c}}}}}{{f{{ABh{{En{c}}}}}}}Hb}{{{f{{AAj{c}}}}}eHb{}}{{{f{{AAj{c}}}}}{{ABb{c}}}Hb}{ce{}{}}{{{AAj{c}}{B`{Gd}}}{{AAj{c}}}Hb}{{{f{{AAj{c}}}}{B`{Gd}}}{{A@h{Fl}}}Hb}1`{{{f{Bj{ABj{c}}}}}bHb}0{{{f{Bj{ABj{c}}}}{B`{c}}}bHb}{{{f{Bj{ABj{c}}}}c}bHb}{{{f{Bj{ABj{c}}}}{f{AAn}}}bHb}{{{f{Bj{ABj{c}}}}{f{AAn}}}{{Af{b}}}Hb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{}{{ABj{c}}}Hb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{ABj{c}}}{{ABl{c}}}Hb}{cc{}}{{}Fb}{ce{}{}}{{{f{Bh}}Fb}{{ABj{c}}}Hb}{{{f{Bj{ABj{c}}}}}AdHb}{c{{G`{e}}}{}{}}0{{{f{c}}}Mf{}}4````{{{f{BjABn}}}b}{{{f{BjABn}}{B`{{f{AAn}}}}}b}{{{f{BjABn}}{f{AAn}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}`?>={{{f{AC`}}{f{BjFh}}}Fj}<{{{f{Bh}}Fb}{{A@h{ABn}}}}{{}ACb}{{}AAl}>={{}d}`{{ACdACbAAl}b}{{{f{BjABn}}}Ad}==<{ce{}{}}````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{ACh{}{{ACf{c}}}}}}g}{{ACh{}{{ACf{c}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{ACj}}{f{Cd}}}ACj}{{{f{ACj}}{f{Cd}}}{{l{c}}}C`}{{{f{{ACh{}{{ACf{c}}}}}}i{f{Bj{Dd{g}}}}}b{}{}{}{{Cd{{B`{e}}{f{g}}}{{Cb{g}}}}}}{{{f{{ACh{}{{ACf{c}}}}}}g}{{ACh{}{{ACf{c}}}}}{}{}{{Cd{e}{{Cb{c}}}}Cf}}{{{f{ACl}}Dn}E`}{{{f{ACl}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{ACn}}}{{Af{E`}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{AD`}}{f{Dh}}}{{Af{Ad}}}}0{{{f{ADb}}}ADb}{{{f{c}}{f{Bje}}}b{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{ADb}}{f{ADb}}}d}{{{f{{ADd{}{{Bb{c}}}}}}e}c{}{}}0{{{f{ADf}}}{{Af{Ad}}}}{{{f{ADf}}}{{Af{{Gf{Ad{ADh{Kh}}}}}}}}`{{{f{ADj}}c}{{Af{ADj}}}{}}{{{f{ADl}}{f{Fd}}}{{Af{{l{c}}}}}C`}`{{{f{ADb}}{f{BjFh}}}Fj}{cc{}}`{{{f{Bh}}cFb}ADn{}}{{{f{Bh}}Fb}AE`}`{{{f{AEb}}Fb}{{Af{Gl}}}}{{{f{AEb}}Fb}Gl}::{{{f{ADb}}{f{Bjc}}}bAEd}{{}Fb}{ce{}{}}{{{f{AEf}}}{{Af{Fd}}}}{{{f{AEh}}}{{Af{Fd}}}}??{{{f{AEj}}}{{B`{c}}}{}}{{{f{AEj}}}{{B`{Jf}}}}{{{f{AEl}}}{{B`{c}}}{}}2{{{f{AEj}}}{{B`{{Gf{cc}}}}}{}}{{{f{ACn}}}{{Af{Fb}}}}{{{f{AEn}}FbFb}{{l{c}}}C`}{{{f{{ADd{}{{Bb{c}}}}}}e}c{}{}}0{{{f{ADf}}}{{Af{{ADh{Kh}}}}}}{{{f{AEl}}JfKn}{{Af{{B`{c}}}}}{}}{{{f{AF`}}}AF`}{{{f{AFb}}{f{Cd}}Lb}{{Af{Ad}}}}{{{f{AFd}}c{B`{e}}}{{Af{AFd}}}{{Ff{}{{Bb{Ld}}}}}{}}{{{f{AFd}}ci}{{Af{AFd}}}{{Ff{}{{Bb{Ld}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{g}}}}}}}}`{{{f{AFd}}{f{Fd}}{B`{c}}}{{Af{AFd}}}{}}{{{f{AFf}}Kh}{{l{c}}}C`}{{{f{AFh}}Khc}{{l{e}}}{}C`}`{{{f{ACl}}d}{{l{c}}}C`}{{{f{ACl}}Dn}{{l{c}}}C`}{{{f{AFj}}Db}{{B`{Jf}}}}{{{f{AEj}}}{{B`{c}}}{}}{{{f{AFl}}{f{c}}}{{Af{AFl}}}Lf}{{{f{AFn}}{f{c}}}AFnLf}{{{f{AG`}}}{{En{{f{{Dd{Db}}}}}}}}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mf{}}{{{f{ACn}}}{{Af{ACn}}}}8{ce{}{}}`{{{f{AGb}}{f{Fd}}{f{{l{c}}}}}{{Af{{l{c}}}}}C`}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}C`C`{{Cd{ff}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}C`}{{{l{c}}{l{e}}gik}{{l{m}}}C`C`{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`Fl{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}C`C`{{AGd{B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}g}bC`C`{{Cj{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`{}{{Cj{}{{Cb{g}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bh}}}{{l{k}}}C`C`{FlAGf}{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bh}}}{{l{k}}}C`C`Fl{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}C`C`Fl{{Cj{}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}C`C`{{Cj{ff}{{Cb{{A@h{Fl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}C`C`{{Cj{ff}{{Cb{{A@h{Fl}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{G`{{l{m}}i}}}C`C`{}{}{{Cj{B`B`}{{Cb{{G`{{B`{g}}i}}}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}C`C`C`{{AGh{B`B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}k}{{G`{{l{m}}i}}}C`C`FlAGj{{Cj{ff}{{Cb{{G`{gi}}}}}}}{{C`{}{{Fn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bh}}}{{G`{{l{m}}i}}}C`C`FlAGj{{Cj{ff}{{Cb{{G`{gi}}}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{G`{{l{c}}g}}}C`C`AGj{{Cj{ff}{{Cb{{G`{{A@h{Fl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{G`{{l{o}}k}}}C`C`C`{}{}{{Cj{B`B`B`}{{Cb{{G`{{B`{i}}k}}}}}}}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{G`{{B`{e}}g}}}}}}}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{G`{eg}}}}}}}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{FlAGf}AGj{{Cj{f}{{Cb{{G`{eg}}}}}}}{{C`{}{{Fn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}C`{{AGl{B`}}}C`}{{{f{{l{c}}}}e}{{l{g}}}C`AGlC`}{{{f{{l{c}}}}g}{{l{i}}}C`Fl{{Cj{f}{{Cb{e}}}}}{{C`{}{{Fn{e}}}}}}{{{l{c}}g}{{l{i}}}C`Fl{{Cj{}{{Cb{e}}}}}{{C`{}{{Fn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{FlAGf}{{Cj{f}{{Cb{e}}}}}{{C`{}{{Fn{e}}}}}}0{{{f{{l{c}}}}}Fbn}0{{HdHd}Hd}{{{f{E`}}Ld}{{Af{b}}}}{{{f{{AGn{Ld}}}}Ld}{{Af{b}}}}````{{{f{c}}h}b{}}{{AH`{f{c}}d}LdAGf}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{AH`}}}AH`}{{{f{c}}{f{Bje}}}b{}{}}{{}AH`}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{AH`}}{f{AH`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AH`}}{f{BjFh}}}Fj}{cc{}}{{{f{AH`}}{f{Bjc}}}bAEd}{{}Fb}{ce{}{}}{{{f{{l{c}}}}}{{Gf{Fb{l{c}}}}}C`}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mf{}}4`{{Fb{f{Bj{En{d}}}}}b}```{{{f{AHb}}FbFb}AHb}0{{Fb{f{{Dd{Ad}}}}{f{BjEb}}}{{Af{{AHd{E`}}}}}}{{{f{{Dd{Ad}}}}{f{{Dd{d}}}}d}{{Af{AHf}}}}{{{f{Bh}}{f{{Dd{Ad}}}}{f{{Dd{d}}}}d}{{Af{AHh}}}}{{{f{Bh}}{f{{Dd{Ad}}}}}{{Af{AHh}}}}{{{f{Ad}}}{{Af{El}}}}{{{f{{Dd{Ad}}}}}{{Af{AHf}}}}{{{f{{Dd{Ad}}}}}{{Af{AHh}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{{{f{Dn}}}Dn}{{{f{Eb}}}Eb}{{{f{c}}{f{Bje}}}b{}{}}0{{}Dn}{{}Eb}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0``{Fbb}0{{{f{Dn}}{f{Dn}}}d}{{{f{Eb}}{f{Eb}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dn}}{f{BjFh}}}Fj}{{{f{Eb}}{f{BjFh}}}Fj}{cc{}}{{{f{Eb}}}Dn}1{{{f{Dn}}}Eb}{{{f{Dn}}{f{Bjc}}}bAEd}{{{f{Eb}}{f{Bjc}}}bAEd}{{}Fb}0{ce{}{}}0````{{}Dn}{{}Eb}``{{{f{AHb}}FbFb}AHb}0{{{f{c}}}e{}{}}0{c{{G`{e}}}{}{}}000{{{f{c}}}Mf{}}066{{Dnd}Dn}{{Ebd}Eb}101010{{Ebc}Eb{{Ff{}{{Bb{d}}}}}}{DnDn}{EbEb}`{AHjKh}00{{}d}>>0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000000000000000000000{{{f{Dl}}}d}{{{f{Hl}}{f{Hl}}}c{}}{{{f{Fd}}{f{Fd}}}c{}}{{FdFd}c{}}{{MbMb}c{}}{{{f{Mb}}{f{Mb}}}c{}}{{{f{Mb}}{f{Bh}}}c{}}{{{f{Ed}}{f{{Dd{Db}}}}}c{}}{{EdEd}c{}}{{{f{Ed}}{f{Ed}}}c{}}{{{f{Gl}}{f{Gl}}}Gl}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHl}}}{}}000000{{{f{Mb}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ed}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fd}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dl}}{f{Aj}}}Ad}{{{f{Fd}}{f{Aj}}}Ad}{{{f{Mb}}{f{Aj}}}Ad}{{{f{Ed}}{f{Aj}}}Ad}{{{f{{ABl{c}}}}{f{Aj}}}AdHb}{{{f{Fd}}}d}{{{f{Fd}}}{{B`{d}}}}{{{f{Dl}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Dl}}{f{Bh}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Dl}}c}Dl{{Cd{{B`{Ad}}}{{Cb{{B`{Ad}}}}}}Cf}}{{{f{Fd}}c}Fd{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}Cf}}{{{f{Mb}}c}Mb{{Cd{{B`{{f{Bh}}}}}{{Cb{{B`{{AHn{Bh}}}}}}}}Cf}}{{{f{Ed}}c}Ed{{Cd{{B`{{f{{Dd{Db}}}}}}}{{Cb{{B`{{AHn{{Dd{Db}}}}}}}}}}Cf}}{{{f{{ABl{c}}}}e}{{ABl{c}}}Hb{{Cd{{B`{{f{c}}}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{Dl}}c}Dl{{Cj{Ch}{{Cb{Ad}}}}}}{{{f{Dl}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{AI`}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{AIb}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{Fd}}{f{Cd}}}Fd}{{{f{Mb}}{f{Cd}}}Mb}{{{f{Ed}}{f{Cd}}}Ed}{{{f{Fd}}{f{Cd}}}{{l{c}}}C`}{{{f{Mb}}{f{Cd}}}{{l{c}}}C`}{{{f{Ed}}{f{Cd}}}{{l{c}}}C`}{{{f{Mb}}c}Mb{{Cj{{f{Bh}}}{{Cb{{f{Bh}}}}}}}}{{{f{Ed}}c}Ed{{Cj{{f{{Dd{Db}}}}}{{Cb{{f{{Dd{Db}}}}}}}}}}{{{f{Mb}}c}Mb{{Cj{{f{Bh}}{f{BjDj}}}}}}{{{f{Dl}}{f{Cd}}}{{Af{Dl}}}}{{{f{Dl}}e{f{Bj{Dd{c}}}}}b{}{{Cd{{B`{Ad}}{f{c}}}{{Cb{c}}}}}}{{{f{Fd}}e{f{Bj{Dd{c}}}}}b{}{{Cd{{B`{d}}{f{c}}}{{Cb{c}}}}}}{{{f{Mb}}e{f{Bj{Dd{c}}}}}b{}{{Cd{{B`{{f{Bh}}}}{f{c}}}{{Cb{c}}}}}}{{{f{Ed}}e{f{Bj{Dd{c}}}}}b{}{{Cd{{B`{{f{{Dd{Db}}}}}}{f{c}}}{{Cb{c}}}}}}{{{f{{ABl{c}}}}g{f{Bj{Dd{e}}}}}bHb{}{{Cd{{B`{{f{c}}}}{f{e}}}{{Cb{e}}}}}}{{{f{Dl}}c}Dl{{Cd{Ad}{{Cb{Ad}}}}Cf}}{{{f{Fd}}c}Fd{{Cd{d}{{Cb{d}}}}Cf}}{{{f{Mb}}c}Mb{{Cd{{f{Bh}}}{{Cb{{AHn{Bh}}}}}}Cf}}{{{f{Ed}}c}Ed{{Cd{{f{{Dd{Db}}}}}{{Cb{{AHn{{Dd{Db}}}}}}}}Cf}}{{{f{{ABl{c}}}}e}{{ABl{c}}}Hb{{Cd{{f{c}}}{{Cb{c}}}}Cf}}{{{f{Fd}}Dn}E`}{{{f{Mb}}Dn}E`}{{{f{Ed}}Dn}E`}{{{f{AHh}}Dn}E`}{{{f{Fd}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Mb}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Ed}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{AHh}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Fd}}}{{Af{E`}}}}{{{f{Mb}}}{{Af{E`}}}}{{{f{Ed}}}{{Af{E`}}}}{{{f{{ABl{c}}}}}{{Af{E`}}}Hb}{eAId{}{{Ff{}{{Bb{c}}}}}}0{{AAle}AIf{}{{Ff{}{{Bb{c}}}}}}0{{{f{Mb}}}Ed}{{{f{Gl}}}Gl}{{{f{Dh}}}{{f{Dh}}}}{{{f{L`}}}{{f{Dh}}}}{{{f{AIh}}}{{f{Dh}}}}{{{f{{AGf{}{{AIj{c}}{AIl{e}}{AIn{g}}}}}}}{{B`{{f{{Dd{c}}}}}}}O`{AJ`{AJb{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}{f{{l{c}}}}{f{{l{e}}}}g}DlC`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Ad}}}}}}}}{{{f{Fd}}{f{Fd}}}c{}}{{FdFd}c{}}0110{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000{{{f{Bjc}}}{{f{Bje}}}{}{}}000000000000000000000000000000000{Dh{{A@h{Dh}}}}{{{f{AJd}}{f{AJd}}c}{{Af{AJd}}}AJf}{{{f{AJh}}{f{Dh}}}{{Af{Ad}}}}{{{f{Hl}}{f{Dh}}}{{Af{Ad}}}}{{{f{Dl}}{f{Dh}}}{{Af{Ad}}}}{{{f{Fd}}{f{Dh}}}{{Af{Ad}}}}{{{f{Mb}}{f{Dh}}}{{Af{Ad}}}}{{{f{Ed}}{f{Dh}}}{{Af{Ad}}}}{{{f{AHh}}{f{Dh}}}{{Af{Ad}}}}{{{f{Gl}}{f{Dh}}}Gl}54321`{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHl}}}{}}0000{{{f{AI`}}{f{Ad}}}{{Af{Ad}}}}{{{f{AIb}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AJj{ce}}}}}{{AJj{ce}}}C`C`}{{{f{AJl}}}AJl}{{{f{Gl}}}Gl}{{{f{AJn}}}AJn}{{{f{Dh}}}Dh}{{{f{L`}}}L`}{{{f{AK`}}}AK`}{{{f{AKb}}}AKb}{{{f{AKd}}}AKd}{{{f{Jn}}}Jn}{{{f{Kd}}}Kd}{{{f{AKf}}}AKf}{{{f{AKh}}}AKh}{{{f{K`}}}K`}{{{f{Kf}}}Kf}{{{f{Cn}}}Cn}{{{f{Cl}}}Cl}{{{f{AKj}}}AKj}{{{f{AKl}}}AKl}{{{f{Df}}}Df}{{{f{D`}}}D`}{{{f{AKn}}}AKn}{{{f{Al}}}Al}{{{f{AL`}}}AL`}{{{f{ALb}}}ALb}{{{f{ALd}}}ALd}{{{f{ALf}}}ALf}{{{f{AAl}}}AAl}{{{f{ALh}}}ALh}{{{f{c}}{f{Bje}}}b{}{}}0000000000000000000000000000{{{f{BjL`}}Dh}b}{ALje{}{{AId{c}}AGf}}0{{ALjAAl}e{}{{AIf{c}}AGf}}0{{{f{Dh}}}d}00{ALlDh}{{{f{L`}}}{{f{Dh}}}}{{}Gl}{{}AJn}{{}Dh}{{}AAl}{{{f{{AJj{ce}}}}}{{f{g}}}C`C`{}}{Fb{{f{c}}}{}}000000000000000000000000000000000{Fb{{f{Bjc}}}{}}{{{f{Bj{AJj{ce}}}}}{{f{Bjg}}}C`C`{}}111111111111111111111111111111111{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHl}}}{}}000000{Fbb}000000000000000000000000000000000{{{f{AJh}}}{{f{Dh}}}}{{{f{Hl}}}{{f{Dh}}}}{{{f{Gl}}}Dh}`{{{f{Gl}}{f{Gl}}}d}{{{f{AJn}}{f{AJn}}}d}{{{f{Dh}}{f{AAl}}}d}{{{f{Dh}}{f{Dh}}}d}{{{f{L`}}{f{L`}}}d}{{{f{AK`}}{f{AK`}}}d}{{{f{AAl}}{f{AAl}}}d}{{{f{ALh}}{f{ALh}}}d}{{{f{Gl}}{f{Gl}}d}d}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Mb}}{f{Bh}}}Fd}{{{f{Mb}}{f{Mb}}}Fd}{{{f{Ed}}{f{{Dd{Db}}}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}542310{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{Dl}}}{{Af{{Gf{Ad{ADh{Kh}}}}}}}}{{{f{Mb}}}{{Af{{Gf{Ad{ADh{Kh}}}}}}}}{{{f{{AJj{ce}}}}}L`C`C`}{{{f{Fd}}d}{{Af{Fd}}}}{{{f{Ed}}{f{{Dd{Db}}}}}{{Af{Ed}}}}{{{f{Dl}}{f{Fd}}}{{Af{Dl}}}}{{{f{Fd}}{f{Fd}}}{{Af{{l{Al}}}}}}{{{f{Mb}}{f{Fd}}}{{Af{{l{Df}}}}}}{{{f{Ed}}{f{Fd}}}{{Af{{l{D`}}}}}}{{{f{AHh}}{f{Fd}}}{{Af{AHh}}}}{{{f{{ABl{c}}}}{f{Fd}}}{{Af{{l{{Gn{c}}}}}}}Hb}{{AJf{f{ALn}}{f{ALn}}}{{Af{ALn}}}}{{{f{Dl}}{f{BjFh}}}Fj}{{{f{Mb}}{f{BjFh}}}Fj}{{{f{Ed}}{f{BjFh}}}Fj}{{{f{{ABl{c}}}}{f{BjFh}}}FjHb}{{{f{AJl}}{f{BjFh}}}Fj}{{{f{Gl}}{f{BjFh}}}Fj}0{{{f{AJn}}{f{BjFh}}}Fj}{{{f{Dh}}{f{BjFh}}}Fj}0{{{f{L`}}{f{BjFh}}}Fj}{{{f{AK`}}{f{BjFh}}}Fj}0{{{f{AAl}}{f{BjFh}}}{{G`{bAM`}}}}{{{f{ALh}}{f{BjFh}}}{{G`{bAM`}}}}{{{f{Dl}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}000000{{{B`{c}}}Gl{{AMb{Gl}}}}{cGlAMd}22{{{f{AAl}}}Dh}{GlDh}4{{{f{Gl}}}Dh}5{{{f{AMf}}}L`}{{{f{Gl}}}L`}{{{f{ALh}}}AK`}888888888888888888888{AMhAAl}9{AMjAAl}:{{{f{AAl}}d}Dh}{cDl{{Ff{}{{Bb{{B`{Ad}}}}}}}}{eDl{{AMl{Ad}}}{{Ff{}{{Bb{c}}}}}}{cDl{{Ff{}{{Bb{{B`{{A@h{Fl}}}}}}}}}}{cFd{{Ff{}{{Bb{d}}}}}}{eMb{{Jh{Bh}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{eMb{{`{Bh}}}{{Ff{}{{Bb{c}}}}}}{eEd{{`{{Dd{Db}}}}}{{Ff{}{{Bb{c}}}}}}{eEd{{Jh{{Dd{Db}}}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{e{{ABl{c}}}Hb{{Ff{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}c}{{l{Al}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{{f{Bh}}e}Mb{{Jh{Bh}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}e}Ed{{Jh{{Dd{Db}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}e}{{ABl{c}}}Hb{{Bf{}{{Bb{{B`{c}}}}}}}}<;98765{eAHh{{`{{Dd{Db}}}}}{{Ff{}{{Bb{c}}}}}}{eAHh{{Jh{{Dd{Db}}}}}{{Ff{}{{Bb{{B`{c}}}}}}}}6{{{f{Bh}}c}{{l{Al}}}{{Bf{}{{Bb{d}}}}}}{{{f{Bh}}e}Mb{{Jh{Bh}}}{{Bf{}{{Bb{c}}}}}}{{{f{Bh}}e}Ed{{Jh{{Dd{Db}}}}}{{Bf{}{{Bb{c}}}}}}{{{f{Bh}}e}{{ABl{c}}}Hb{{Bf{}{{Bb{c}}}}}}{{AMnDh}L`}{cDl{{Gh{}{{Bb{{B`{Ad}}}}}}}}{cFd{{Gh{}{{Bb{d}}}}}}{cFd{{Gh{}{{Bb{{B`{d}}}}}}}}{eMb{{Jh{Bh}}HnI`}{{Gh{}{{Bb{{B`{c}}}}}}}}{eMb{{`{Bh}}HnI`AN`}{{Gh{}{{Bb{c}}}}}}{eEd{{`{{Dd{Db}}}}HnI`AN`}{{Gh{}{{Bb{c}}}}}}{eEd{{Jh{{Dd{Db}}}}HnI`}{{Gh{}{{Bb{{B`{c}}}}}}}}{{c{f{Bh}}Dh}Dl{{Gh{}{{Bb{{B`{Ad}}}}}}}}{{{f{Bh}}{f{{Dd{d}}}}}Fd}{{{f{Bh}}{f{{Dd{c}}}}}Mb{{Jh{Bh}}}}{{{f{Bh}}{f{{Dd{c}}}}}Ed{{Jh{{Dd{Db}}}}}}{{{f{Bh}}{f{{Dd{c}}}}}{{ABl{c}}}Hb}{{{f{Bh}}{f{{Dd{{B`{d}}}}}}}Fd}{{{f{Bh}}{f{{Dd{{B`{c}}}}}}}Mb{{Jh{Bh}}}}{{{f{Bh}}{f{{Dd{{B`{c}}}}}}}Ed{{Jh{{Dd{Db}}}}}}{{{f{Bh}}{f{{Dd{{B`{c}}}}}}}{{ABl{c}}}Hb}{cFd{{Gj{}{{Bb{{B`{d}}}}}}}}{{{En{c}}AAl}{{AGf{}{{AIj{c}}{AIl{e}}{AIn{g}}}}}O`{AJ`{AJb{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{En{c}}AAl}{{AGf{}{{AIj{e}}{AIl{c}}{AIn{g}}}}}{AJ`{AJb{e}}}O`{{F`{}{{Bb{e}}}}GjHnI`}}{{FbcAAl}{{AGf{}{{AIj{c}}{AIl{e}}{AIn{g}}}}}O`{AJ`{AJb{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Bh}}{f{Ad}}Fb}Dl}{{{f{Bh}}dFb}Fd}{{{f{Bh}}{f{Bh}}Fb}Mb}{{{f{Bh}}{f{{Dd{Db}}}}Fb}Ed}{{{f{Bh}}{f{{Dd{Db}}}}Fb}AHh}{{{f{Bh}}cFb}{{ABl{c}}}Hb}{{FbAAl}{{AGf{}{{AIj{c}}{AIl{e}}{AIn{g}}}}}O`{AJ`{AJb{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Bh}}Fb}Dl}{{{f{Bh}}Fb}Fd}{{{f{Bh}}Fb}Mb}{{{f{Bh}}Fb}Ed}{{{f{Bh}}Fb}AHh}{{{f{Bh}}Fb}{{ABl{c}}}Hb}{{{f{Bh}}Fb{f{Dh}}}Dl}{{{f{{AGf{}{{AIj{c}}{AIl{e}}{AIn{g}}}}}}Fb}{{B`{c}}}O`{AJ`{AJb{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Hl}}Fb}{{Af{Gl}}}}{{{f{AJh}}Fb}{{Af{Gl}}}}0{{{f{Dl}}Fb}{{Af{Gl}}}}{{{f{Fd}}Fb}{{Af{Gl}}}}{{{f{Mb}}Fb}{{Af{Gl}}}}{{{f{Ed}}Fb}{{Af{Gl}}}}{{{f{AHh}}Fb}{{Af{Gl}}}}{{{f{{ABl{c}}}}Fb}{{Af{Gl}}}Hb}{{{f{Hl}}Fb}Gl}{{{f{AJh}}Fb}Gl}0{{{f{Dl}}Fb}Gl}{{{f{Fd}}Fb}Gl}{{{f{Mb}}Fb}Gl}{{{f{Ed}}Fb}Gl}{{{f{AHh}}Fb}Gl}{{{f{{ABl{c}}}}Fb}GlHb}{{{f{Dl}}Fb}{{B`{Ad}}}}{{}Dh}00000000000000000000000{{{f{Dl}}}Ad}{{{f{{ABl{c}}}}Fb}{{B`{{f{H`}}}}}Hb}0{{{f{Gl}}}{{B`{{f{Bh}}}}}}{{{f{ANb}}Fb}Gl}{{{f{{AGf{}{{AIj{c}}{AIl{e}}{AIn{g}}}}}}Fb}{{B`{c}}}O`{AJ`{AJb{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}}Fb}{{{f{Mb}}}Fb}{{{f{AHh}}}Fb}{{{f{Dl}}dd}{{Af{Aj}}}}{{{f{Fd}}dd}{{Af{Aj}}}}{{{f{Mb}}dd}{{Af{Aj}}}}{{{f{Ed}}dd}{{Af{Aj}}}}{{{f{AHh}}dd}{{Af{Aj}}}}{{{f{{ABl{c}}}}dd}{{Af{Aj}}}Hb}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Mb}}{f{Mb}}}Fd}{{{f{Mb}}{f{Bh}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}{{{f{Ed}}{f{{Dd{Db}}}}}Fd}543210{{{f{Gl}}{f{Bjc}}}bAEd}{{{f{AJn}}{f{Bjc}}}bAEd}{{{f{Dh}}{f{Bjc}}}bAEd}{{{f{AK`}}{f{Bjc}}}bAEd}{{{f{AAl}}{f{Bjc}}}bAEd}{{{f{ALh}}{f{Bjc}}}bAEd}{{{f{Gl}}{f{Bjc}}d}bAEd}{{}Fb}000000000000000000000000000000000{{{f{Dl}}}Dh}{{{f{Dh}}}{{B`{{f{Dh}}}}}}{{{f{AAl}}}{{B`{{f{AAl}}}}}}{ce{}{}}000000000000000000000000000000000{{ANd{B`{Fb}}Fb}{{Af{Hl}}}}{{ANd{B`{Fb}}Fb}Hl}{{{f{Dl}}}c{}}{{{f{Fd}}}c{}}{{{f{Mb}}}c{}}{{{f{Ed}}}c{}}{{{f{AHh}}}c{}}{{{f{{ABl{c}}}}}eHb{}}{HlAd}{ANdAd}{Gl{{Af{Gl}}}}{{{f{Dh}}}d}00{{{f{Gl}}}d}111010111110101011110111101{{{f{AAl}}}d}{{{f{{AGf{}{{AIj{c}}{AIl{e}}{AIn{g}}}}}}}{{ABf{cgABd}}}O`{AJ`{AJb{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{{AGf{}{{AIj{c}}{AIl{e}}{AIn{g}}}}}}}{{B`{c}}}O`{AJ`{AJb{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Mb}}{f{Bh}}}Fd}{{{f{Mb}}{f{Mb}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}{{{f{Ed}}{f{{Dd{Db}}}}}Fd}542301{{{f{AJd}}{f{AJd}}}{{Af{{Gf{AJdAJd}}}}}}{{DlDl}{{Af{{Gf{DlDl}}}}}}{{{f{Dh}}{f{Dh}}}{{Af{d}}}}{{{f{Fd}}}{{B`{d}}}}{{{f{Fd}}}Ad}{{{f{Mb}}}Ad}{{{f{Ed}}}Ad}{{{f{Fd}}}{{B`{Jf}}}}{{{f{AI`}}}{{B`{Hf}}}}{{{f{AIb}}}{{B`{Jf}}}}{{{f{AI`}}}Ad}{{{f{AIb}}}Ad}{{{f{Dh}}{f{Dh}}}{{Af{Dh}}}}9876{{{f{Bh}}{f{{Dd{Db}}}}FbFb}Fd}{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHl}}}{}}000000{{{f{Mb}}}{{Af{Fb}}}}{{{f{Ed}}}{{Af{Fb}}}}{{{f{L`}}}{{f{AMn}}}}`{{}c{}}00{{{f{Bh}}c}Mb{{Jh{{Dd{{B`{{AHn{Bh}}}}}}}}}}{{{f{Bh}}c}Mb{{Jh{{Dd{{B`{{f{Bh}}}}}}}}}}{{{f{Bh}}c}Mb{{Jh{{Dd{{AHn{Bh}}}}}}}}{{{f{Bh}}c}Mb{{Jh{{Dd{{f{Bh}}}}}}}}{{{f{Bh}}c}Ed{{Jh{{Dd{{B`{{AHn{{Dd{Db}}}}}}}}}}}}{{{f{Bh}}c}Ed{{Jh{{Dd{{AHn{{Dd{Db}}}}}}}}}}{{{f{Bh}}c}Ed{{Jh{{Dd{{f{{Dd{Db}}}}}}}}}}{{{f{Bh}}c}Ed{{Jh{{Dd{{B`{{f{{Dd{Db}}}}}}}}}}}}{{{f{Bh}}{f{{Dd{c}}}}}{{ABl{c}}}Hb}{{{f{Bh}}e}{{ABl{c}}}Hb{{Jh{{Dd{{B`{c}}}}}}}}{{{f{Bh}}Dh}L`}{{{f{Bh}}}{{ABl{c}}}Hb}{{{f{Dl}}FbFb}Dl}{{{f{Fd}}FbFb}Fd}{{{f{Mb}}FbFb}Mb}{{{f{Ed}}FbFb}Ed}{{{f{AHh}}FbFb}AHh}{{{f{{ABl{c}}}}FbFb}{{ABl{c}}}Hb}{{{f{Bh}}{En{c}}}{{ABl{c}}}Hb}{{{f{Bh}}{En{c}}Gd}{{ABl{c}}}Hb}{{{f{Fd}}}c{}}{Fdc{}}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Mb}}{f{Mb}}}Fd}{{{f{Mb}}{f{Bh}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}{{{f{Ed}}{f{{Dd{Db}}}}}Fd}543201{{{f{Dl}}}{{Af{{ADh{Kh}}}}}}{{{f{Mb}}}{{Af{{ADh{Kh}}}}}}{{{f{Dl}}}{{`{{Kj{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{Mb}}}{{`{{Kj{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{BjDl}}}{{`{{Kl{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{Mb}}}{{`{{Kl{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{Gl}}{f{Gl}}}{{B`{ANf}}}}{{{f{AK`}}{f{AK`}}}{{B`{ANf}}}}{{{f{Hl}}}{{B`{Fb}}}}{{{f{{AJj{AL`Hj}}}}}{{B`{Fb}}}}{{{f{AI`}}JfKn}{{Af{{B`{Hf}}}}}}{{{f{AIb}}JfKn}{{Af{{B`{Jf}}}}}}{{{f{AI`}}JfKn}{{Af{Ad}}}}{{{f{AIb}}JfKn}{{Af{Ad}}}}{{{f{Bh}}FbJf}{{Af{Fd}}}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHl}}}{}}000000{{{f{Dl}}}Dl}{{{f{Fd}}}Fd}{{{f{Mb}}}Mb}{{{f{Ed}}}Ed}{{{f{AHh}}}AHh}{{{f{{ABl{c}}}}}{{ABl{c}}}Hb}`{{{f{Hl}}}Fb}{{{f{{AJj{AL`Hj}}}}}Fb}{{{f{Fd}}c{B`{d}}}{{Af{Fd}}}{{Ff{}{{Bb{Ld}}}}}}{{{f{Mb}}c{B`{{f{Bh}}}}}{{Af{Mb}}}{{Ff{}{{Bb{Ld}}}}}}{{{f{Ed}}c{B`{{f{{Dd{Db}}}}}}}{{Af{Ed}}}{{Ff{}{{Bb{Ld}}}}}}{{{f{Fd}}ce}{{Af{Fd}}}{{Ff{}{{Bb{Ld}}}}}{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}}}{{{f{Mb}}ce}{{Af{Mb}}}{{Ff{}{{Bb{Ld}}}}}{{Cd{{B`{{f{Bh}}}}}{{Cb{{B`{Dj}}}}}}}}{{{f{Ed}}ce}{{Af{Ed}}}{{Ff{}{{Bb{Ld}}}}}{{Cd{{B`{{f{{Dd{Db}}}}}}}{{Cb{{B`{{En{Db}}}}}}}}}}{{{f{Fd}}{f{Fd}}{B`{d}}}{{Af{Fd}}}}{{{f{Mb}}{f{Fd}}{B`{{f{Bh}}}}}{{Af{Mb}}}}{{{f{Ed}}{f{Fd}}{B`{{f{{Dd{Db}}}}}}}{{Af{Ed}}}}{{{f{BjDl}}}b}{{{f{BjDl}}Dh}b}{{{f{BjL`}}AMn}b}{{{f{Dl}}Kh}Dl}{{{f{Fd}}Kh}Fd}{{{f{Mb}}Kh}Mb}{{{f{Ed}}Kh}Ed}{{{f{AHh}}Kh}AHh}{{{f{{ABl{c}}}}Kh}{{ABl{c}}}Hb}{{{f{Dl}}Kh{B`{{f{Ad}}}}}Dl}{{{f{Fd}}Kh{B`{d}}}Fd}{{{f{Mb}}Kh{B`{{f{Bh}}}}}Mb}{{{f{Ed}}Kh{B`{{f{{Dd{Db}}}}}}}Ed}{{{f{AHh}}Kh{B`{{f{{Dd{Db}}}}}}}AHh}{{{f{{ABl{c}}}}Kh{B`{{Gn{c}}}}}{{l{{Gn{c}}}}}Hb}{{{f{Fd}}d}Fd}{{{f{Mb}}d}Mb}{{{f{Ed}}d}{{l{D`}}}}{{{f{AHh}}d}AHh}{{{f{Fd}}Dn}{{l{Al}}}}{{{f{Mb}}Dn}{{l{Df}}}}{{{f{Ed}}Dn}{{l{D`}}}}{{{f{AHh}}Dn}AHh}{{{f{AI`}}Db}Ad}{{{f{AIb}}Db}Ad}{{{f{Gl}}{f{Dh}}}{{B`{Gl}}}}`{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHl}}}{}}000000{{{f{Fd}}}{{B`{Ld}}}}{{{f{Fd}}}Ad}{{{f{Mb}}}Ad}{{{f{Ed}}}Ad}{{{f{Mb}}{f{E`}}}Mb}{{{f{Mb}}{f{c}}}Mb{{Jh{{Dd{Ld}}}}Lf}}{{{f{Ed}}{f{E`}}}Ed}{{{f{Ed}}{f{c}}}Ed{{Jh{{Dd{Ld}}}}Lf}}{{{f{Dh}}d}AAl}{{{f{L`}}d}AMf}{AK`ALh}{{{f{Dh}}{f{Bh}}d}AMf}{AK`{{f{Bh}}}}{{{f{Mb}}Fb}{{Af{Ad}}}}{{{f{BjDl}}Dh}b}{{{f{AAl}}}{{f{AAl}}}}{{{f{Dl}}}{{Af{Ln}}}}{{{f{c}}}e{}{}}0000000000000000000000000000{{{f{Dh}}}Dh}{{{f{AAl}}}ANh}{{{f{c}}}Dj{}}00{{{f{Ed}}}Mb}{{{f{Dl}}c}{{Af{Dl}}}{{Cj{Ch}{{Cb{{Af{Ad}}}}}}}}{{{f{Dl}}e}{{Af{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Af{{B`{c}}}}}}}}Cf}C`}{g{{G`{AIde}}}{}{}{{Ff{}{{Bb{{G`{ce}}}}}}}}0{{AAlg}{{G`{AIfe}}}{}{}{{Ff{}{{Bb{{G`{ce}}}}}}}}0{ALj{{G`{eg}}}{}{{AId{c}}AGf}{}}0{{ALjAAl}{{G`{eg}}}{}{{AIf{c}}AGf}{}}0{{{f{Gl}}}{{Af{c}}}Jd}{c{{G`{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000{{{f{Gl}}{f{Dh}}}{{Af{Gl}}}}{{{f{Dh}}d}{{Af{AAl}}}}{{{f{Dl}}{f{{l{c}}}}e}{{Af{Dl}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Af{{B`{Ad}}}}}}}}}}{{{f{c}}}Mf{}}000000000000000000000000000000000{{{f{AAl}}}AAl}{{{f{Fd}}}{{Af{Fd}}}}{{{f{Mb}}}{{Af{Mb}}}}{{{f{Ed}}}{{Af{Ed}}}}{{{f{{ABl{c}}}}}{{Af{{l{{Gn{c}}}}}}}Hb}{{{f{{AGf{}{{AIj{c}}{AIl{e}}{AIn{g}}}}}}Fb}cO`{AJ`{AJb{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}0{{{f{Dh}}Gl}d}{{{f{{AGf{}{{AIj{c}}{AIl{e}}{AIn{g}}}}}}}gO`{AJ`{AJb{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{AI`}}Db}Ad}{{{f{AIb}}Db}Ad}{{{f{Fd}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANj}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANl}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ALn}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANn}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AO`}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOb}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOd}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOf}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANd}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AI`}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AIb}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{Mb}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{Ed}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AHh}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{{ABl{c}}}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}Hb}{{{f{Fd}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{ANj}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{ANl}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{ALn}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{ANn}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AO`}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOb}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOd}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOf}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{ANd}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AI`}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AIb}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{Mb}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{Ed}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AHh}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{{ABl{c}}}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}Hb}{ce{}{}}000000000000000000000000000000000{Fbc{}}0{Fb{{AOh{ce}}}{}{}}{{{f{{Dd{Mh}}}}e}c{}{{Mj{{f{E`}}}{{Cb{c}}}}}}{{{AGf{}{{AIj{c}}{AIl{e}}{AIn{g}}}}{B`{Gd}}}{{AGf{}{{AIj{c}}{AIl{e}}{AIn{g}}}}}O`{AJ`{AJb{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}{f{{l{c}}}}e}DlC`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{AJd}}}d}{{AJdd}AJd}{{{f{BjAOj}}{B`{{f{Bh}}}}}b}{{{f{BjAJd}}{f{AJd}}}{{Af{b}}}}{{{f{BjAOj}}}b}{{{f{BjAOj}}{f{Bh}}}b}{{{f{AJd}}Dn}E`}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bjc}}}{{f{Bje}}}{}{}}000{{{f{AJd}}{f{AJd}}c}{{Af{AJd}}}AJf}{{{f{AJd}}{f{Dh}}}{{Af{Ad}}}}{{{f{AJd}}}AJd}{{{f{c}}{f{Bje}}}b{}{}}{{}AOl}{Fb{{f{c}}}{}}000{Fb{{f{Bjc}}}{}}000{{AOjc}AJd{{Ff{}{{Bb{{B`{{f{Bh}}}}}}}}}}{Fbb}000{{{f{AJd}}}{{f{Dh}}}}{{{f{AJd}}{f{Mb}}}c{}}{{{f{AJd}}{f{Bh}}}c{}}{{{f{AJd}}{f{AJd}}}c{}}201{{AJf{f{ALn}}{f{ALn}}}{{Af{ALn}}}}{AOjAJd}{AOl{{ABh{AOn}}}}{cc{}}000{{ALn{ABh{AOn}}dB@`}AJd}{{ALnB@`}AJd}{{{f{Mb}}{f{ALl}}B@`}{{Af{AJd}}}}{{{f{Bh}}dFbB@`}AJd}{{{f{AJd}}Fb}{{Af{Gl}}}}{{{f{AJd}}Fb}Gl}{{{f{AJd}}}{{f{{ABh{AOn}}}}}}<;=;<={{}Fb}000{ce{}{}}0000{AJdAd}{{{f{AJd}}}d}0{{{f{AJd}}}B@b}{{{f{AJd}}}Fb}{{{f{AJd}}{f{AJd}}}c{}}{{{f{AJd}}{f{Mb}}}c{}}{{{f{AJd}}{f{Bh}}}c{}}021{{{f{AJd}}{f{AJd}}}{{Af{{Gf{AJdAJd}}}}}}{{DlDl}{{Af{{Gf{DlDl}}}}}}{{{f{AJd}}}Ad}{{{f{BjAOl}}{f{{ABh{AOn}}}}}{{Af{b}}}}1{{{f{AJd}}}{{Af{Fb}}}}{{{f{AJd}}}{{f{Bh}}}}{{{f{Bh}}FbB@`}AOj}{{{ABh{AOn}}}AOl}{{{f{BjB@b}}}{{B`{c}}}{}}:;9:9;<{{{f{AJd}}}{{f{ALn}}}}{{{f{BjAOj}}{f{Bh}}}{{Gf{Jjd}}}}`{{{f{B@b}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{AJd}}d}AJd}{{{f{AJd}}Dn}AJd}`{{{f{AJd}}dd}El}{{{f{AJd}}{f{ALl}}B@d}AJd}{{{f{AJd}}}{{Af{AJd}}}}{{{f{AJd}}}AJd}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0000000{{{f{c}}}Mf{}}0004{{{f{AJd}}}d}{{{f{AJd}}}{{Af{B@f}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{ALlAOn}{{{f{B@`}}}B@`}{{{f{AOn}}}AOn}{{{f{c}}{f{Bje}}}b{}{}}0{{}B@`}{{}AOn}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{{{f{B@`}}{f{B@`}}}d}{{{f{AOn}}{f{Bh}}}{{B`{Jj}}}}{{{f{B@`}}{f{BjFh}}}Fj}{{{f{AOn}}{f{BjFh}}}Fj}{cc{}}0{{{f{AOn}}Jj}{{f{Bh}}}}{{{f{AOn}}}{{f{ALl}}}}{{{f{AOn}}Jj}{{B`{{f{Bh}}}}}}{{}Fb}0{ce{}{}}0{{{f{AOn}}}d}0{{{f{AOn}}}Fb}{{{f{AOn}}{f{AOn}}}d}{{{f{c}}}e{}{}}0{c{{G`{e}}}{}{}}000{{{f{c}}}Mf{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{}B@h}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{{}b}{{{f{BjB@h}}}b}{Fbb}2{cc{}}6{{}Fb}{ce{}{}}<<;{{}d}1```````660````````````````````{{{f{B@j}}}{{f{Bh}}}}<<;;`9{{{f{B@j}}}f}:9966`{{{f{B@l}}{f{BjFh}}}{{G`{bAM`}}}}{{{f{B@j}}{f{BjFh}}}{{G`{bAM`}}}}07{cB@j{{AMb{{AHn{Bh}}}}}}8{{}{{In{{f{Bh}}B@l}{{Cb{b}}}}}}8877{cAHlAGj}````{{{In{{f{Bh}}B@l}{{Cb{b}}}}}b}{cAHlB@n}{{{f{c}}}Dj{}}{c{{G`{e}}}{}{}}000{{{f{c}}}Mf{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BA`}}}BA`}{{{f{c}}{f{Bje}}}b{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BjFh}}BAbFb}Fj}{cc{}}{{}BAd}{{}BA`}{{}{{B`{Fb}}}}{{}Dj}{{}d}{{}Fb}{ce{}{}}{{{B`{BAd}}}b}{BA`b}{{{B`{Fb}}}b}2{{{B`{d}}}b}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mf{}}7```````````{{{f{c}}h}b{}}00{{{f{BjB@f}}{En{Ad}}{f{BAf}}}{{Af{b}}}}{{{f{B@f}}{f{Cd}}}{{En{Ad}}}}0{{{f{B@f}}{f{Fd}}}{{Af{B@f}}}}{{{f{B@f}}{f{{Dd{AMn}}}}}{{Af{B@f}}}}0{{{f{B@f}}KhFb}B@f}{{{f{B@f}}{f{Ad}}}c{}}{{B@f{f{Ad}}}c{}}{{{f{B@f}}{f{B@f}}}c{}}{{{f{BjB@f}}}{{f{BjB@f}}}}{{{f{BjB@f}}{f{Bh}}e}{{Af{{f{BjB@f}}}}}BAh{{Mj{{f{Ad}}}{{Cb{c}}}}}}{{{f{BjB@f}}Fbe}{{Af{{f{BjB@f}}}}}BAh{{Mj{{f{Ad}}}{{Cb{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bjc}}}{{f{Bje}}}{}{}}0000{{{f{B@f}}}B@f}{{{f{BAj}}}BAj}{{{f{BAl}}}BAl}2{{{f{c}}{f{Bje}}}b{}{}}00{{{f{B@f}}{f{Bh}}}{{Af{{f{Ad}}}}}}{{{f{B@f}}e}{{Af{{En{{f{Ad}}}}}}}{{Jh{Bh}}}{{Ff{}{{Bb{c}}}}}}{{}BAl}{{}B@f}{Fb{{f{c}}}{}}0000{Fb{{f{Bjc}}}{}}0000{{{f{B@f}}{f{Ad}}}c{}}{{B@f{f{Ad}}}c{}}{{{f{B@f}}{f{B@f}}}c{}}{Fbb}0000{{{f{B@f}}{f{Bh}}}{{Af{B@f}}}}{{{f{BjB@f}}{f{Bh}}}{{Af{Ad}}}}{{{f{B@f}}{f{{Dd{c}}}}}B@f{{Jh{Bh}}}}{{{f{B@f}}{f{{BAn{{f{Bh}}}}}}}B@f}{{{f{B@f}}{B`{{f{{Dd{c}}}}}}}{{Af{B@f}}}{{Jh{Bh}}}}{{{f{B@f}}}{{En{Dh}}}}<{{{f{BAl}}{f{BAl}}}d}{{{f{B@f}}{f{B@f}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{B@f}}}Fb}`{{{f{B@f}}e}{{Af{B@f}}}{{Jh{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{B@f}}{En{Ad}}}{{Af{B@f}}}}{{{f{BjB@f}}{f{B@f}}}{{Af{b}}}}{{{f{B@f}}}{{En{L`}}}}{{{f{B@f}}ADb}{{Af{B@f}}}}{{{f{B@f}}{f{Fd}}}{{Af{B@f}}}}{{{f{BAj}}{f{BjFh}}}Fj}{{{f{BAl}}{f{BjFh}}}Fj}{{{f{B@f}}{f{BjFh}}}Fj}0{cc{}}000{{{f{BAf}}}B@f}{{{f{BB`}}}B@f}2{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{cB@f{{Ff{}{{Bb{Ad}}}}}}{{{f{{Dd{BBb}}}}}{{Af{B@f}}}}{{{f{{Dd{BBb}}}}{f{BAf}}}{{Af{B@f}}}}{{c{f{BAf}}}{{Af{B@f}}}{{Bf{}{{Bb{{f{BBb}}}}}}}}{{{f{B@f}}Fb}{{B`{{En{Gl}}}}}}{{{f{B@f}}{f{Bh}}}{{B`{Fb}}}}{{{f{B@f}}}{{En{{f{Bh}}}}}}{{{f{B@f}}}{{En{AMn}}}}{{{f{B@f}}}{{f{{Dd{Ad}}}}}}{{{f{BjB@f}}}{{f{Bj{En{Ad}}}}}}{{{f{B@f}}Fb}{{Af{BBb}}}}{{{f{B@f}}Fb{f{BjBBb}}}{{Af{b}}}}{{{f{B@f}}Fb{f{BjBBb}}}b}{{{f{B@f}}}{{B`{{Af{Dh}}}}}}`{{{f{B@f}}e}{{Af{BBd}}}{{Jh{Bh}}}{{Ff{}{{Bb{c}}}}}}0{{{f{B@f}}{En{Ad}}dd}{{Af{BBd}}}}{{{f{BAl}}{f{Bjc}}}bAEd}{{{f{BjB@f}}{B`{Lj}}}{{Af{ANn}}}}{{{f{B@f}}{B`{Fb}}}B@f}{{{f{B@f}}}Fb}{{{f{B@f}}{f{{Dd{Ad}}}}}{{Af{B@f}}}}{{{f{BjB@f}}{f{{Dd{Ad}}}}}{{Af{{f{BjB@f}}}}}}{{{f{BjB@f}}{f{{Dd{Ad}}}}}{{f{BjB@f}}}}{{{f{B@f}}{f{Bh}}}{{f{c}}}{}}{{{f{B@f}}{BBf{Fb}}}{{f{c}}}{}}{{{f{B@f}}BBh}{{f{c}}}{}}{{{f{B@f}}{Jl{Fb}}}{{f{c}}}{}}{{{f{B@f}}{BBj{Fb}}}{{f{c}}}{}}{{{f{B@f}}{BBl{Fb}}}{{f{c}}}{}}{{{f{B@f}}Fb}{{f{c}}}{}}{{{f{B@f}}{BBn{Fb}}}{{f{c}}}{}}{{}Fb}0000{{{f{BjB@f}}Fbc}{{Af{{f{BjB@f}}}}}BAh}{ce{}{}}000000{{{f{B@f}}}{{Af{Fd}}}}{{{f{B@f}}}d}1{{{f{B@f}}}{{Il{Ad}}}}{{{f{B@f}}d}BC`}{{{f{B@f}}}BCb}{{{f{B@f}}}{{Af{{B`{Ad}}}}}}{{{f{B@f}}BAj}{{Af{{B`{Ad}}}}}}{{{f{B@f}}ce}{{Af{B@f}}}{{BCd{AMn}}}{{BCd{AMn}}}}{{{f{B@f}}BCf}{{Af{B@f}}}}3{{{f{B@f}}{f{B@f}}}c{}}{{B@f{f{Ad}}}c{}}{{{f{B@f}}{f{Ad}}}c{}}{{{f{B@f}}}Fb}{{{En{c}}}{{Af{B@f}}}BAh}{{{En{Ad}}}B@f}{{{En{Ad}}}{{Af{B@f}}}}{{{f{BjBC`}}}{{B`{c}}}{}}{{{f{BjBCb}}}{{B`{c}}}{}}{{{f{B@f}}}B@f}{{{f{B@f}}cd}{{Af{{En{B@f}}}}}{{BCd{Dj}}}}0{{B@fe}{{Af{c}}}{}{{Cd{B@f}{{Cb{{Af{c}}}}}}}}{{{f{BjB@f}}e}{{Af{c}}}{}{{Cd{{f{BjB@f}}}{{Cb{{Af{c}}}}}}}}{{B@fgc}{{Af{e}}}{}{}{{Cd{B@fc}{{Cb{{Af{e}}}}}}}}{{{f{BjB@f}}}{{B`{Ad}}}}{{{f{B@f}}{f{B@f}}}d}>?={{{f{BjB@f}}{f{Bh}}{f{Bh}}}{{Af{{f{BjB@f}}}}}}{{{f{BjB@f}}{f{Bh}}c}{{Af{{f{BjB@f}}}}}BAh}{{{f{BjB@f}}Fbc}{{Af{{f{BjB@f}}}}}BAh}19`{{{f{B@f}}{f{Ad}}dd{B`{Hh}}}{{Af{B@f}}}}0{{{f{B@f}}Fbdd{B`{Hh}}}{{Af{B@f}}}}{{{f{B@f}}}BAf}{{{f{B@f}}{f{B@f}}}{{Af{b}}}}{{{f{B@f}}e}{{Af{B@f}}}{{Jh{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{B@f}}Fb}{{B`{{f{Ad}}}}}}{{{f{B@f}}c}{{Af{B@f}}}{{BCh{Fb}}}}2{{{f{B@f}}c}{{Af{{En{Ad}}}}}{{BCd{AMn}}}}{{{f{B@f}}e{f{BCj}}}{{Af{B@f}}}{{Jh{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{B@f}}e{f{BAf}}}{{Af{B@f}}}{{Jh{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{BjB@f}}{f{{Dd{c}}}}}{{Af{b}}}{{Jh{Bh}}}}{{{f{B@f}}}{{Gf{FbFb}}}}{{{f{B@f}}Kh}B@f}{{{f{B@f}}}d}{{{f{BjB@f}}}b}{{{f{BC`}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{BCb}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{B@f}}KhFb}B@f}0{{{f{B@f}}cEb}{{Af{B@f}}}{{BCd{AMn}}}}{{{f{BjB@f}}cEb}{{Af{{f{BjB@f}}}}}{{BCd{AMn}}}}{B@f{{`{{Bf{}{{Bb{B@f}}}}}}}}{{B@fFbd}{{En{B@f}}}}{{{f{B@f}}{f{B@f}}}c{}}{{{f{B@f}}{f{Ad}}}c{}}{{B@f{f{Ad}}}c{}}{{{f{B@f}}BAj}{{Af{{B`{Ad}}}}}}{{{f{B@f}}{B`{Fb}}}B@f}{{{f{B@f}}{f{E`}}}{{Af{B@f}}}}{{{f{B@f}}{f{E`}}}B@f}{{{f{B@f}}{f{E`}}d}B@f}{{{f{B@f}}BCl}{{Af{Ln}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dj{}}{{{f{B@f}}FbcEb}{{Af{B@f}}}{{BCd{AMn}}}}{{{f{BjB@f}}{B`{{f{Bh}}}}{B`{{Md{Dj{En{Dj}}}}}}}{{Af{B@f}}}}{{{f{BjB@f}}{f{Bh}}e}{{Af{{f{BjB@f}}}}}BAh{{Mj{{f{Ad}}}{{Cb{{Af{c}}}}}}}}{{{f{BjB@f}}Fbe}{{Af{{f{BjB@f}}}}}BAh{{Mj{{f{Ad}}}{{Cb{{Af{c}}}}}}}}{c{{G`{e}}}{}{}}000{{{Gf{BCn{f{{Dd{AMf}}}}}}}{{Af{B@f}}}}1{BD`{{Af{B@f}}}}{{c{f{BAf}}}{{Af{B@f}}}{{Bf{}{{Bb{{Af{{f{BBb}}}}}}}}}}{{{f{B@f}}{f{Bh}}}{{Af{Fb}}}}44444{{{f{c}}}Mf{}}0000{{{f{B@f}}{B`{{f{{Dd{Dj}}}}}}BAl{B`{{Gf{KhFb}}}}}{{Af{B@f}}}}{{{f{B@f}}d{B`{{f{{Dd{Dj}}}}}}BAl{B`{{Gf{KhFb}}}}}{{Af{B@f}}}}1{{{f{B@f}}{f{B@f}}}{{Af{B@f}}}}{{{f{BjB@f}}{f{B@f}}}{{Af{{f{BjB@f}}}}}}{ce{}{}}0000{{{f{B@f}}}Fb}{{{f{BjB@f}}c}{{Af{{f{BjB@f}}}}}BAh}{{{f{BjB@f}}c{f{BAf}}}{{Af{{f{BjB@f}}}}}BAh}{{{f{BjB@f}}Ad}{{f{BjB@f}}}}{{{f{B@f}}{f{Bh}}{B`{Ld}}}{{Af{B@f}}}}{{{f{BjB@f}}{f{Bh}}{B`{Ld}}}{{f{BjB@f}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BCf}}}BCf}{{{f{c}}{f{Bje}}}b{}{}}{{}BCf}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BCf}}{f{BCf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCf}}{f{BjFh}}}Fj}{cc{}}{{{f{BCf}}{f{Bjc}}}bAEd}`{{}Fb}{ce{}{}}`{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mf{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BBd}}}{{Af{B@f}}}}`{{{f{BDb}}}{{f{{Dd{BDd}}}}}}{{{f{BBd}}c}{{Af{B@f}}}{{Cj{B@f}{{Cb{{Af{B@f}}}}}}HnI`}}{{{f{Aj}}}Dl}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bjc}}}{{f{Bje}}}{}{}}0000000{{{f{BDb}}}BDb}{{{f{Aj}}}Aj}{{{f{BBd}}}BBd}{{{f{BDf}}}BDf}{{{f{c}}{f{Bje}}}b{}{}}000:{{}BDb}{{}Aj}{Fb{{f{c}}}{}}000{{{f{BDh}}}{{f{c}}}{}}1111{Fb{{f{Bjc}}}{}}0000000`{{BDje}{}{}{{BDl{c}}}}{Fbb}000{{{f{BjBDb}}}b}1111{{{f{BDb}}{f{BDb}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BDn}}}Ld}{{{f{BDb}}}{{f{{Dd{Ld}}}}}}{{{f{BBd}}}{{Af{B@f}}}}{{{f{BjBDb}}}{{f{Bj{En{Ld}}}}}}{{{f{BDb}}{f{BjFh}}}Fj}{{{f{Aj}}{f{BjFh}}}Fj}{{{f{BBd}}{f{BjFh}}}Fj}{{{f{BDf}}{f{BjFh}}}Fj}0{{{f{Bh}}BDf}Dj}{cc{}}000{{{En{{Gf{{En{Ld}}{En{BDd}}}}}}}BDb}1{{{En{{En{BE`}}}}}BDb}{{{En{BE`}}}BDb}3{BDbAj}44{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{cBDb{{Ff{}{{Bb{BE`}}}}}}{cBDb{{Gh{}{{Bb{BE`}}}}}}{{{f{Aj}}Fb}BDn}{{{f{BBd}}}{{f{Aj}}}}{{{f{BjBBd}}}{{f{BjAj}}}}{{{f{Aj}}}E`}{{{f{BEb}}dd}{{Af{Aj}}}}0{{{f{BBd}}}{{Af{B@f}}}}{{{f{BjAj}}}{{f{BjBDb}}}}{{}Fb}0000000{ce{}{}}0000000{AjBDb}1{{{f{BDb}}}c{}}{BDbc{}}310{{{f{BDn}}}d}{{{f{Aj}}}d}{{{f{BDb}}}d}{{{f{BDb}}}{{BEf{{BEd{{Il{Ld}}}}{Il{BDd}}}}}}{{{f{Aj}}}BEh}{{{f{BBd}}}{{En{Ad}}}}{{{f{BBd}}{B`{{Gf{KhFb}}}}}{{En{Ad}}}}={{{f{BDn}}}Fb}{{{f{Aj}}}Fb}?????{{{En{Ld}}{En{BDd}}d}BDb}{{{f{B@f}}{En{Ad}}Aj{B`{{En{Dj}}}}}BBd}{{{f{BjBEh}}}{{B`{c}}}{}}{{{f{BjBEh}}Fb}{{B`{c}}}{}}{{{f{BBd}}c}{{Af{B@f}}}{{Cd{B@f}{{Cb{{Af{B@f}}}}}}HnI`}}{{{f{c}}}{}{}}{{{f{Aj}}}BDj}{{{f{BBd}}JfKn}{{Af{B@f}}}}{{BBde}BBd{{Jh{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{Aj}}KhFb}BDh}{{{f{BjBDb}}}b}{{{f{BjAj}}}b}{{{f{BBd}}Db}{{Af{B@f}}}}{{{f{BBd}}}{{Af{B@f}}}}{Aj{{En{Ld}}}}0{BBdAj}{{{f{BjBBd}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dj{}}{c{{G`{e}}}{}{}}000000000000000{{{f{c}}}Mf{}}0000000{AjAj}{{{f{Aj}}}{{f{BDb}}}}{{{f{Aj}}}{{f{BEj}}}};{ce{}{}}0000000`````{{{f{BDb}}c}Ad{{Cd{{Gf{Ld{f{BDd}}}}}{{Cb{B`}}}}HnI`}}{{{f{BDb}}c}Ad{{Cd{{Gf{Ld{f{BDd}}}}}{{Cb{}}}}HnI`}}{{{f{{Dd{{BEl{Ld}}}}}}c}Ad{{Cd{{BEl{Ld}}}{{Cb{B`}}}}HnI`}}{{{f{{Dd{{BEl{Ld}}}}}}c}Ad{{Cd{{BEl{Ld}}}{{Cb{}}}}HnI`}}{{{f{{Dd{c}}}}eBEn}{{AGn{c}}}{BF`BFb}{{Bf{}{{Bb{{Gf{LdLd}}}}}}Gj}}{{{f{{Dd{c}}}}{f{Gd}}eBEn}{{AGn{c}}}{BF`BFb}{{Bf{}{{Bb{{Gf{LdLd}}}}}}Gj}}{{{f{{l{c}}}}LdLd}{{l{c}}}C`}{{{f{BEj}}{f{{Dd{El}}}}}d}{{{f{BFd}}{f{Aj}}}Ad}{{BFfBFf}BFf}0`{{{f{BFh}}{f{B@f}}{f{Aj}}}{{Af{Ad}}}}{{{f{BFh}}}{{Af{{f{Bh}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BjBFj}}Gl}{{B`{b}}}}{{{f{BjBFl}}{f{Gl}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00{{{f{BFj}}}BFj}{{{f{BFl}}}BFl}{{{f{BBb}}}BBb}{{{f{c}}{f{Bje}}}b{}{}}00{{{f{{Dd{c}}}}}Dh{{AMl{Dh}}}}{{}BBb}{Fb{{f{c}}}{}}00{Fb{{f{Bjc}}}{}}00{Fbb}00{{{f{BBb}}{f{BBb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBb}}{f{BjFh}}}Fj}{cc{}}{{{Gf{{f{Dh}}Fb}}}BFj}{{{Gf{{f{Dh}}Fb}}}BFl}22{{eFb}BAf{{AMb{Dh}}}{{Bf{}{{Bb{{En{{Gf{Djc}}}}}}}}}}{{}Fb}00{ce{}{}}00{BFjAd}{BFlAd}{{{f{Dh}}Fb}BFj}{{{f{Dh}}Fb}BFl}{{{En{Gl}}}BBb}{{{f{BjBFj}}Fb}Ad}{{{f{BjBFl}}Fb}Ad}{{{f{{Dd{BBb}}}}{B`{Fb}}}{{Af{BAf}}}}0{{{f{{Dd{BBb}}}}{B`{Fb}}}{{Af{{En{Dh}}}}}}{{{f{c}}}e{}{}}00{c{{G`{e}}}{}{}}00000{{{f{c}}}Mf{}}00<<<{{{f{{Dd{B@f}}}}}{{Af{B@f}}}}0`````{{HhHh}Hh}{{{f{{Dd{B@f}}}}{B`{Lj}}}{{Af{{Gf{{En{ANn}}Lj}}}}}}{{{f{{BFn{Kh}}}}Lj{f{Bj{En{Hh}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{{}BG`}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{{{f{BG`}}}Hh}{{{f{BGb}}{f{BjFh}}}Fj}{cc{}}0{{{f{BGb}}{f{Bjc}}}bAEd}``{{}Fb}0{ce{}{}}0{{{f{Bj{BGd{BGbce}}}}LdHh{f{B@f}}gi}b{}BGf{{Cd{}{{Cb{c}}}}}{{Cj{{f{Bjc}}}}}}{c{{G`{e}}}{}{}}000{{{f{c}}}Mf{}}0{{{f{BGh}}Lj{f{Bj{En{Hh}}}}}{{Af{b}}}}0{{{f{BGh}}Lj{f{Bj{Dd{Hh}}}}}{{Af{b}}}}055{{{f{BjBG`}}{f{{Dd{Db}}}}}b}{{{f{BjBG`}}Kb}b}{{{f{BjBG`}}Kh}b}{{{f{BjBG`}}Jj}b}{{{f{BjBG`}}Hh}b}`````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{ABh{ce}}}}}{{f{e}}}{}BGj}{{{f{{ABh{c}}}}}BGl{BGnLf}}{{{f{{ABh{ce}}}}}{}LfBGj}{{{f{{ABh{c}}}}}KbBH`}{{{f{{ABh{ce}}}}}{{f{c}}}LfBGj}{{{ABh{{Dd{{BHb{c}}}}e}}}{{ABh{{Dd{c}}e}}}{}BGj}{{{ABh{{BHb{c}}e}}}{{ABh{ce}}}{}BGj}{{{f{c}}}{{f{e}}}{}{}}0030000000000{{{f{Bjc}}}{{f{Bje}}}{}{}}000000000000{{{f{AJd}}{f{AJd}}c}{{Af{AJd}}}AJf}{{{f{{ABh{c}}}}}{{B`{{f{AGj}}}}}{AGjLf}}`{{{f{BHd}}{f{Ad}}}{{Af{Ad}}}}{{{f{BHd}}c}{{Af{Ad}}}Ab}{{{f{Mh}}}Mh}{{{f{BHf}}}BHf}{{{f{{ABh{ce}}}}}{{ABh{ce}}}Lf{BGjO`}}{{{f{Lb}}}Lb}{{{f{BCl}}}BCl}{{{f{AMf}}}AMf}{{{f{BB`}}}BB`}{{{f{Kn}}}Kn}{{{f{BHh}}}BHh}{{{f{BHj}}}BHj}{{{f{BHl}}}BHl}{{{f{c}}{f{Bje}}}b{}{}}0000000000{{{f{{ABh{ce}}}}{f{{ABh{ce}}}}}ANf{BHnLf}BGj}{ALje{}{{AId{c}}AGf}}0{{ALjAAl}e{}{{AIf{c}}AGf}}0{{{f{c}}{f{e}}}ANf{}{}}{{AHlB@j}AHl}{AHlAHl}{{{f{Fl}}{f{AAl}}}{{A@h{Fl}}}}{{{f{AMf}}}{{f{AAl}}}}```{{}b}{cbBGj}{{}{{ABh{c}}}BI`}{{}Lb}{{}BCl}{{}AMf}{{}BB`}{{}Kn}`{Fb{{f{c}}}{}}000{{{f{{ABh{ce}}}}}{{f{c}}}LfBGj}111111111{Fb{{f{Bjc}}}{}}000000000000{{{f{{ABh{c}}}}}{{f{Bh}}}{AGjLf}}`{{{ABh{AAnc}}}{{G`{{ABh{ec}}{ABh{AAnc}}}}}BGj{AAnHnI`}}{{{ABh{AAnc}}}{{ABh{ec}}}BGj{AAnHnI`}}{{{f{{ABh{ce}}}}}{{BIb{ce}}}Lf{O`BGj}}{Fbb}00{{{f{Bj{ABh{ce}}}}}bLfBGj}1111111111{{{f{Mh}}{f{Mh}}}d}{{{f{{ABh{BId}}}}{f{BId}}}d}{{{f{{ABh{Fl}}}}{f{Fl}}}d}{{{f{{ABh{ce}}}}{f{{ABh{ce}}}}}d{BIfLf}BGj}{{{f{Lb}}{f{Lb}}}d}{{{f{BCl}}{f{BCl}}}d}{{{f{AMf}}{f{AMf}}}d}{{{f{BB`}}{f{BB`}}}d}{{{f{Kn}}{f{Kn}}}d}{{{f{BHl}}{f{BHl}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BHf{{Gf{JjJj}}}}`{{BB`c}BB`{{Cd{Fb{f{AMf}}}{{Cb{d}}}}}}{{AJf{f{ALn}}{f{ALn}}}{{Af{ALn}}}}{{{f{Bj{ABh{BIh}}}}}{{G`{bBIj}}}}{{{f{AHl}}{f{BjFh}}}{{G`{bAM`}}}}0{{{f{Mh}}{f{BjFh}}}{{G`{bAM`}}}}{{{f{BHf}}{f{BjFh}}}{{G`{bAM`}}}}{{{f{{ABh{ce}}}}{f{BjFh}}}{{G`{bAM`}}}{B@nLf}BGj}{{{f{{ABh{ce}}}}{f{BjFh}}}{{G`{bAM`}}}LfBGj}{{{f{{ABh{ce}}}}{f{BjFh}}}{{G`{bAM`}}}{AB`Lf}BGj}{{{f{Lb}}{f{BjFh}}}Fj}{{{f{BCl}}{f{BjFh}}}Fj}{{{f{AMf}}{f{BjFh}}}{{G`{bAM`}}}}{{{f{BB`}}{f{BjFh}}}{{G`{bAM`}}}}{{{f{Kn}}{f{BjFh}}}{{G`{bAM`}}}}{{{f{BHh}}{f{BjFh}}}{{G`{bAM`}}}}{{{f{BHj}}{f{BjFh}}}{{G`{bAM`}}}}{{{f{BHl}}{f{BjFh}}}{{G`{bAM`}}}}`{BIlAHl}{BIjAHl}{BInAHl}{BJ`AHl}{cc{}}{JjMh}11{{{ABh{Bh}}}{{ABh{{Dd{Db}}}}}}{BJb{{ABh{BJd}}}}{{{f{BJd}}}{{ABh{BJd}}}}{BJf{{ABh{BJh}}}}{{{f{BJh}}}{{ABh{BJh}}}}6{BJj{{ABh{BJl}}}}{{{A@h{ce}}}{{ABh{ce}}}LfBGj}{Dj{{ABh{Bh}}}}{{{f{BJl}}}{{ABh{BJl}}}}{c{{ABh{c}}}{}}{{{AHn{c}}}{{ABh{c}}}{BJnLf}}{{{En{ce}}}{{ABh{{Dd{c}}e}}}{}{BGjO`}}{{{f{{Dd{c}}}}}{{ABh{{Dd{c}}}}}O`}{{{BEl{c}}}{{ABh{{Dd{c}}}}}{}}{BK`c{}}{{{f{Bh}}}{{ABh{Bh}}}}{cc{}}000{{{En{AMf}}}BB`}11111{{c{B`{Gd}}}BKb{}}{{{BKd{Kh}}{BKd{Db}}{B`{Gd}}}BKf}{{{BKd{Kh}}{BKd{Db}}{B`{Gd}}}BKh}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{e{{ABh{{Dd{c}}}}}{}{{Ff{}{{Bb{c}}}}}}{{gFb}{{BKj{Kh}}}Jh{{Ff{}{{Bb{{B`{c}}}}}}}{{Ff{}{{Bb{{B`{e}}}}}}}}0{e{{BKj{Kh}}}{{Ff{}{{Bb{{B`{d}}}}}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{{gAAl}{{BKj{Kh}}}BFb{{Ff{}{{Bb{{B`{c}}}}}}}{{Ff{}{{Bb{{B`{e}}}}}}}}2{e{{ABh{{Dd{c}}}}}Hn{{Gh{}{{Bb{c}}}}}}{{}{{ABh{c}}}Lf}{c{{ABh{ec}}}BGjLf}{{{f{Bh}}}{{G`{BKl}}}}{{{f{Bh}}c}BKn{}}{{{f{{ABh{ce}}}}{f{{ABh{ce}}}}}d{BL`Lf}BGj}{{{f{Bj{ABh{ce}}}}}{{B`{{f{Bjc}}}}}LfBGj}{{{f{Bj{ABh{ce}}}}}{{f{Bjc}}}LfBGj}{{{f{BB`}}}{{En{{f{Bh}}}}}}{{{f{El}}Fb}Gl}4{{{f{BLb}}}d}{{{f{{ABh{ce}}}}{f{Bjg}}}b{BLdLf}BGjAEd}{{{f{BCl}}{f{Bjc}}}bAEd}{{{f{AMf}}{f{Bjc}}}bAEd}{{{f{Kn}}{f{Bjc}}}bAEd}{{{f{BHl}}{f{Bjc}}}bAEd}{{{f{Mh}}}Jj}{{}b}{cb{O`BGj}}{{{f{BB`}}{f{Bh}}}{{B`{Fb}}}}{{{f{{Dd{Jj}}}}}{{`{{Bf{}{{Bb{Fb}}}}}}}}{{}Fb}000000000000`{{{f{BjBHf}}}{{f{BjHh}}}}`{ce{}{}}000000000000{{{ABh{ce}}}{{B`{c}}}{}BGj}{{{ABh{ce}}}{}LfBGj}{{{ABh{BLf}}}Ad}{{{f{BB`}}}d}{{{f{BHf}}}d}{{{f{Mh}}}d}`{{{f{{ABh{BIh}}}}}d}{{{f{c}}}d{}}1{{{f{{ABh{ce}}}}{f{{ABh{ce}}}}}d{BL`Lf}BGj}{{{f{BB`}}}Fb}`1{{{f{AJd}}{f{AJd}}}{{Af{{Gf{AJdAJd}}}}}}{{DlDl}{{Af{{Gf{DlDl}}}}}}{{{f{Bj{ABh{ce}}}}}{{f{Bjc}}}O`{BGjO`}}{{{f{BLh}}}Ad}0{{{f{BLj}}}Ad}``11``{{{f{{ABh{ce}}}}{f{{ABh{ce}}}}}d{BIfLf}BGj}{{BLlFb}{{B`{Fb}}}}{{{f{Bh}}c}BLn{}}{c{{ABh{c}}}{}}{{cAAld}AMf{{AMb{Dj}}}}{e{{ABh{c}}}{}{{Mj{{f{{BIb{c}}}}}{{Cb{c}}}}}}{{ce}{{ABh{ce}}}{}BGj}{{}{{ABh{{BHb{c}}}}}{}}{c{{ABh{{BHb{e}}c}}}BGj{}}{Fb{{ABh{{Dd{{BHb{c}}}}}}}{}}{{Fbc}{{ABh{{Dd{{BHb{e}}}}c}}}BGj{}}3210`{{}Mh}{{}BHf}{{{f{{ABh{ce}}}}{f{{ABh{ce}}}}}{{B`{ANf}}}{BL`Lf}BGj}{c{{BM`{{ABh{c}}}}}{}}{{ce}{{BM`{{ABh{ce}}}}}{}BGj}`````{{{f{BLh}}}Ad}0{{{f{{ABh{c}}}}{f{BjBMb}}}b{AGjLf}}{{{f{{ABh{ce}}}}{f{{ABh{ce}}}}}dLfBGj}{{{f{BLj}}JfKn}{{Af{Ad}}}}{{{f{Bj{ABh{BIh}}}}{f{Bj{Dd{Db}}}}}{{G`{FbBIj}}}}{{{f{Bj{ABh{BIh}}}}BMd}{{G`{bBIj}}}}{{{f{Bj{ABh{BIh}}}}{f{Bj{En{Db}}}}}{{G`{FbBIj}}}}{{{f{Bj{ABh{BIh}}}}{f{BjDj}}}{{G`{FbBIj}}}}{{{f{Bj{ABh{BIh}}}}{f{Bj{Dd{BMf}}}}}{{G`{FbBIj}}}}`{{{f{Bj{ABh{BIh}}}}BMh}{{G`{HhBIj}}}}`{{{f{AHb}}FbFb}AHb}0{{{f{{ABh{c}}}}}{{B`{{f{AGj}}}}}{AGjLf}}{{{f{BMj}}Db}Ad}{{JjJj}BHf}`{{{f{{ABh{ce}}}}}FbLfBGj}>>{{{f{Mh}}}{{B`{Jj}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dj{}}0{ALj{{G`{eg}}}{}{{AId{c}}AGf}{}}0{{ALjAAl}{{G`{eg}}}{}{{AIf{c}}AGf}{}}0{c{{G`{e}}}{}{}}00{{{ABh{{Dd{c}}e}}}{{G`{{ABh{{BEl{c}}e}}}}}{}BGj}11111111111111111111111{{BLlFb}{{G`{FbAHl}}}}{c{{G`{{ABh{c}}BMl}}}{}}{{ce}{{G`{{ABh{ce}}BMl}}}{}BGj}{{}{{G`{{ABh{{BHb{c}}}}BMl}}}{}}{c{{G`{{ABh{{BHb{e}}c}}BMl}}}BGj{}}10{c{{G`{{BM`{{ABh{c}}}}BMl}}}{}}{{ce}{{G`{{BM`{{ABh{ce}}}}BMl}}}{}BGj}{{{ABh{ce}}}{{G`{c{ABh{ce}}}}}{}BGj}{{{f{c}}}Mf{}}000000000000{{{ABh{ce}}}cO`BGj}`{{{f{BMj}}Db}Ad}{ce{}{}}000000000000{{{f{{ABh{ce}}}}}FbLfBGj}``{{AMf{BMn{DjDj}}}AMf}{{BB`{BMn{DjDj}}}BB`}{{{f{Bj{ABh{BIh}}}}{f{{Dd{Db}}}}}{{G`{FbBIj}}}}{{{f{Bj{ABh{BIh}}}}{f{{Dd{BN`}}}}}{{G`{FbBIj}}}}```````{{c{B`{Gd}}}BKb{}}{{{BKd{Kh}}{BKd{Db}}{B`{Gd}}}BKf}{{{BKd{Kh}}{BKd{Db}}{B`{Gd}}}BKh}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{BNb{B`{{f{AAl}}}}}{{G`{{BKj{Kh}}AHl}}}}{cc{}}{{}Fb}{ce{}{}}{{{f{BNb}}}d}{FbBNb}{{{f{BNb}}}{{f{{Dd{Kh}}}}}}{{{f{BjBNb}}{f{Fl}}}b}{{{f{BjBNb}}}b}{{{f{BjBNb}}{f{{Dd{{A@h{Fl}}}}}}}b}1{{{f{BjBNb}}{B`{{f{Fl}}}}}b}{BNb{{BNd{Kh}}}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mf{}}:`{{{f{c}}h}b{}}{{{f{BNf}}}{{f{AAn}}}}{{{f{BjBNf}}}{{A@h{Fl}}}}{{{f{BjBNf}}}{{f{BjAAn}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BNf}}}BNf}{{{f{c}}{f{Bje}}}b{}{}}{{{f{BNf}}}{{f{AAl}}}}{{}BNf}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BjBNf}}Fb}b}{{{f{BNf}}{f{BjFh}}}{{G`{bAM`}}}}{cc{}}{{}Fb}{ce{}{}}{{{f{BNf}}}Fb}{FbBNf}{{{f{BjBNf}}}b}70{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mf{}}{{{f{BNf}}}{{B`{{f{BNh}}}}}}7```````{{{f{AHb}}FbFb}AHb}0`{{}b}0{{}d}``{{eFbFb}{{BNj{Kh}}}{{Jh{Bh}}}{{Bf{}{{Bb{c}}}}}}{{eFbFb}{{BFn{Kh}}}{{Jh{{Dd{Db}}}}}{{Bf{}{{Bb{c}}}}}}{Hhb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BAf}}}BAf}{{{f{c}}{f{Bje}}}b{}{}}{{{f{BAf}}{f{Bh}}}d}{{}BAf}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BAf}}{f{BAf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BAf}}{f{BjFh}}}Fj}{BB`BAf}{{{f{BNl}}}BAf}{BNlBAf}{{{f{BB`}}}BAf}{{{f{{Dd{Ad}}}}}BAf}{cc{}}{{{f{BBb}}}BAf}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{eBAf{{AMb{L`}}}{{Ff{}{{Bb{c}}}}}}{{{f{BAf}}{f{Bh}}}{{B`{{f{Dh}}}}}}{{{f{BAf}}Fb}{{B`{{Gf{{f{AMn}}{f{Dh}}}}}}}}{{{f{BjBAf}}Fb}{{B`{{Gf{{f{BjAMn}}{f{BjDh}}}}}}}}{{{f{BAf}}{f{Bh}}}{{B`{L`}}}}{{{f{BAf}}{f{Bh}}}{{B`{{Gf{Fb{f{AMn}}{f{Dh}}}}}}}}{{{f{BNn}}}{{En{{f{Bh}}}}}}{{{f{BAf}}}{{En{{f{Bh}}}}}}{{{f{BAf}}{f{Bjc}}}bAEd}{{{f{BNn}}{f{Bh}}}{{B`{Fb}}}}{{{f{BAf}}{f{Bh}}}{{B`{Fb}}}}{{}Fb}{{{f{BjBAf}}FbAMnDh}{{Af{{B`{Dh}}}}}}{ce{}{}}{BAfc{}}{{{f{BAf}}}d}{{{f{BAf}}}{{`{{Bf{}{{Bb{{Gf{{f{AMn}}{f{Dh}}}}}}}}}}}}{{{f{BAf}}}{{`{{Ib{}{{Bb{{f{Dh}}}}}}}}}}{{{f{BjBAf}}}{{`{{Ib{}{{Bb{{f{BjDh}}}}}}}}}}{{{f{BAf}}}{{`{{Ib{}{{Bb{L`}}}}}}}}{{{f{BAf}}}{{`{{Ib{}{{Bb{{f{AMn}}}}}}}}}}{{{f{BAf}}}Fb}{{{f{BjBAf}}BAf}b}{{}BAf}{{{f{BAf}}FbAMnDh}{{Af{BAf}}}}{{{f{BjBAf}}{f{Bh}}}{{B`{Dh}}}}{{{f{BjBAf}}{f{Bh}}AMn}{{B`{AMn}}}}{{{f{BjBAf}}{f{Bh}}Dh}{{B`{Dh}}}}{{{f{BjBAf}}FbDh}{{B`{Dh}}}}3{{{f{BjBAf}}Fb}{{B`{{Gf{AMnDh}}}}}}{{{f{BAf}}d}BB`}{{{f{c}}}e{}{}}{{{f{BjBAf}}{f{BAf}}}{{Af{d}}}}{c{{G`{e}}}{}{}}{{{f{BAf}}{f{Bh}}}{{Af{{f{Dh}}}}}}{{{f{BAf}}Fb}{{Af{{Gf{{f{AMn}}{f{Dh}}}}}}}}{{{f{BAf}}{f{Bh}}}{{Af{L`}}}}{{{f{BAf}}{f{Bh}}}{{Af{{Gf{Fb{f{AMn}}{f{Dh}}}}}}}}{{{f{BjBAf}}{f{Bh}}}{{Af{{f{BjDh}}}}}}{{{f{BNn}}{f{Bh}}}{{Af{Fb}}}}6{{{f{c}}}Mf{}}{ce{}{}}{FbBAf}{{{f{BjBAf}}AMnDh}{{B`{Dh}}}}``````````````{{{f{c}}h}b{}}0{{{f{BLf}}}{{Af{Ad}}}}0{{{f{Bh}}{En{El}}{f{AAl}}}{{Af{Ad}}}}{{{f{Bh}}{En{El}}{f{AAl}}{B`{{f{BO`}}}}}{{Af{Ad}}}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jd}{}}{{Adc}e{A`Jd}{}}{{AdAd}c{}}{{{f{BjAd}}{f{Ad}}}{{Af{{f{BjAd}}}}}}{{{f{BLf}}Dn}E`}0{{{f{BLf}}}{{Af{E`}}}}0`{{{f{Ad}}Fb}{{f{El}}}}{{{f{BLf}}}{{f{AAn}}}}{{{f{BjBLf}}}{{f{BjAAn}}}}0{{{f{Ad}}}Dl}{{{f{BjBLf}}}{{f{Bj{l{c}}}}}C`}{{{f{BLf}}}{{f{{l{c}}}}}C`}{{{f{Ad}}}{{f{BLf}}}}{{{f{BjBLf}}}{{Af{Fb}}}}0{{{f{BjAd}}}{{Af{Fb}}}}{{{f{Ad}}}{{Af{{f{Ed}}}}}}{{{f{Ad}}}{{Af{{f{AHh}}}}}}{{{f{BLf}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fd}}}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00{{{f{BLf}}{f{Dh}}}{{Af{Ad}}}}{{{f{Ad}}{f{Dh}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{{f{AJd}}}}}}66{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BLf}}}Ej}{{{f{BLf}}}{{f{{En{El}}}}}}{{{f{BjBLf}}}{{f{Bj{En{El}}}}}}{{{f{BjAd}}}{{f{Bj{En{El}}}}}}{{{f{Ad}}}Ad}{{{f{Hd}}}Hd}1{{{f{BLf}}}{{ABh{BLf}}}}{{{f{c}}{f{Bje}}}b{}{}}0{{{f{BjAd}}}b}{{{f{Ad}}}{{Af{{f{Hl}}}}}}{{}Ad}{Fb{{f{c}}}{}}0{{{f{Ad}}}{{f{c}}}{}}1{Fb{{f{Bjc}}}{}}00{{AdAd}c{}}{{Adc}e{A`Jd}{}}{{{f{Ad}}c}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Jf}}}}{Fbb}00{{{f{BLf}}}Ad}0{{{f{BLf}}}{{f{Dh}}}}0{{{f{Hd}}{f{Hd}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Bh}}}{{Af{Fd}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}c}{{Af{Fd}}}AMd}1{{{f{Ad}}c}eAMd{}}{{{f{Ad}}{f{Bh}}}c{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}Fb}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BjAd}}{f{Ad}}}{{Af{{f{BjAd}}}}}}{{{f{Ad}}GlFb}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AI`}}}}}}{{{f{Ad}}}{{Af{{f{AIb}}}}}}{{{f{BLf}}}{{AHn{L`}}}}0{{{f{Ad}}ADb}{{Af{Ad}}}}{{{f{BLf}}{f{Fd}}}{{Af{Ad}}}}{{{f{Ad}}{f{Fd}}d}{{Af{Ad}}}}{{{f{Hd}}{f{BjFh}}}Fj}{{{f{Ad}}{f{BjFh}}}Fj}0{{{f{Ad}}}Dj}{cc{}}00{{{l{c}}}AdC`}{{{f{Bh}}{f{{Dd{Gl}}}}d}{{Af{Ad}}}}{{{f{Bh}}{f{{Dd{Gl}}}}{f{Dh}}d}{{Af{Ad}}}}{{{f{Bh}}El}{{Af{Ad}}}}{{{f{Bh}}{En{El}}{f{Dh}}}Ad}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{cAd{{Ff{}{{Bb{Kb}}}}}}{cAd{{Ff{}{{Bb{{f{Jj}}}}}}}}{cAd{{Ff{}{{Bb{Hh}}}}}}{cAd{{Ff{}{{Bb{{B`{Hh}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Jj}}}}}}}}{cAd{{Ff{}{{Bb{{f{Jf}}}}}}}}{cAd{{Ff{}{{Bb{Kh}}}}}}{cAd{{Ff{}{{Bb{{B`{Jf}}}}}}}}{cAd{{Ff{}{{Bb{{B`{d}}}}}}}}{cAd{{Ff{}{{Bb{Dj}}}}}}{cAd{{Ff{}{{Bb{Jj}}}}}}{cAd{{Ff{}{{Bb{{f{Kh}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Hf}}}}}}}}{cAd{{Ff{}{{Bb{{f{Kb}}}}}}}}{cAd{{Ff{}{{Bb{{f{Hf}}}}}}}}{cAd{{Ff{}{{Bb{Hf}}}}}}{cAd{{Ff{}{{Bb{d}}}}}}{cAd{{Ff{}{{Bb{{B`{Kb}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Kh}}}}}}}}{cAd{{Ff{}{{Bb{{f{d}}}}}}}}{cAd{{Ff{}{{Bb{{f{Hh}}}}}}}}{cAd{{Ff{}{{Bb{Jf}}}}}}{cAd{{Ff{}{{Bb{{f{Bh}}}}}}}}{{{f{Bh}}{En{Hf}}}Ad}{{{f{Bh}}{En{Hh}}}Ad}{{{f{Bh}}{En{Jj}}}Ad}{{{f{Bh}}{En{Jf}}}Ad}{{{f{Bh}}{En{Kb}}}Ad}{{{f{Bh}}{En{Kh}}}Ad}{{{f{Bh}}Fb{f{Dh}}}Ad}{{{f{Ad}}FbFb}Ad}{{{f{BLf}}Fb}{{Af{Gl}}}}{{{f{Ad}}}Fb}{{{f{Ad}}}An}{{{f{BLf}}Fb}{{B`{{f{H`}}}}}}0{{{f{BLf}}FbFb}{{B`{{f{H`}}}}}}0{{{f{BLf}}Fb}Gl}0{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}c}{{Af{Fd}}}AMd}{{{f{Ad}}{f{Bh}}}{{Af{Fd}}}}2{{{f{Ad}}{f{Bh}}}c{}}2{{{f{BLf}}}d}{{{f{Hd}}{f{Bjc}}}bAEd}{{{f{Ad}}{B`{Fb}}}Ad}{{{f{Ad}}}{{Af{{f{AOb}}}}}}{{{f{Ad}}}{{Af{{f{AOd}}}}}}{{{f{Ad}}}{{Af{{f{AOf}}}}}}{{{f{Ad}}}{{Af{{f{AO`}}}}}}{{{f{Ad}}}{{Af{{f{E`}}}}}}`{{{f{Ad}}}{{Af{Dl}}}}{{}Fb}00{ce{}{}}00{AdB@f}1{BAhAd}{AdAd}=={{{f{Ad}}}{{Af{Fd}}}}000{{{f{BLf}}}Fd}0{{}d}00{{{f{Ad}}}Hd}{{{f{Ad}}}BOb}{{{f{BLf}}}Fb}{{{f{BLf}}Fb}Ad}0{{{f{Ad}}}{{Af{{f{Dl}}}}}}{{{f{Ad}}{f{Bh}}}c{}}{{{f{Ad}}c}{{Af{Fd}}}AMd}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}012{{{f{Ad}}}{{Af{{B`{c}}}}}Jd}{{{f{BLf}}}{{Af{Ad}}}}0{{{f{BLf}}}{{B`{Jf}}}}0{{{f{Ad}}}Ad}1122322{{{f{Ad}}c}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jd}{}}{{AdAd}c{}}=={{{f{BLf}}}{{Af{Fb}}}}0{{{f{BLf}}}{{f{Bh}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{d}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{Kh}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{Hf}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{Kb}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{En{Db}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{d}}}}}}{{{f{Bh}}{Jl{Jj}}}Ad}{{{f{Bh}}c}Ad{{Jh{{Dd{{f{{Dd{Db}}}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{{f{Bh}}}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{{AHn{{Dd{Db}}}}}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{Kh}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{Jf}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{AHn{{Dd{Db}}}}}}}}}}{{{f{Bh}}{Jl{Hh}}}Ad}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{Jj}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{Ad}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{Kb}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{Hf}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{{En{Db}}}}}}}}}}{{{f{Bh}}{Jl{Kh}}}Ad}{{{f{Bh}}c}Ad{{Jh{{Dd{Gl}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{Jj}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{AHn{Bh}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{{AHn{Bh}}}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{Jf}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{f{Bh}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{{f{{Dd{Db}}}}}}}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{Dj}}}}}}}}{{{f{Bh}}{f{Ad}}}Ad}{{{f{Bh}}c}Ad{{Jh{{Dd{Ad}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{Dj}}}}}}{{{f{Bh}}c}Ad{{Jh{{Dd{{B`{Hh}}}}}}}}{{{f{Bh}}c}AdBAh}{{{f{Bh}}c}Ad{{Jh{{Dd{Hh}}}}}}{{{f{Bh}}{Jl{Kb}}}Ad}{{{f{Bh}}{f{Dh}}}Ad}{{{f{BLf}}FbFb}Ad}{{{f{Bh}}Fb}Ad}{{{f{BjBOb}}}{{B`{c}}}{}}{{{f{Ad}}c}{{Af{Fd}}}AMd}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}{f{Bh}}}{{Af{Fd}}}}{{{f{Ad}}c}eAMd{}}2{{{f{Ad}}{f{Bh}}}c{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BLf}}}Fb}`{{{f{Ad}}}BOd}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BLf}}JfKn}{{Af{Ad}}}}0{{{f{BLf}}}Ad}{{{f{Ad}}c}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jd}{}}{{{f{BjBLf}}{f{Bh}}}b}{{{f{BjAd}}{f{Bh}}}{{f{BjAd}}}}{{{f{Ad}}{f{{Dd{Kh}}}}}{{Af{Ad}}}}6{HdHd}{{{f{BLf}}{f{Cd}}Lb}{{Af{Ad}}}}0{{{f{Ad}}Jfdd{B`{Hh}}}{{Af{Ad}}}}{{{f{Ad}}Fbdd{B`{Hh}}}{{Af{Ad}}}}{{{f{BjAd}}Hd}b}{{{f{BLf}}Kh}Ad}{{{f{BjBLf}}}b}0{{{f{BjAd}}}b}{{{f{Ad}}{B`{Hh}}}Ad}{{{f{BOb}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{BLf}}KhFb}Ad}{{{f{Ad}}Dn}{{Af{Ad}}}}{{{f{BLf}}Dn}{{Af{Ad}}}}0{{{f{BLf}}Db}{{B`{Jf}}}}0{{{f{BLf}}Db}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{{f{Mb}}}}}}{{{f{Ad}}Fb}{{Af{{AHn{Bh}}}}}}{{{f{Ad}}{f{Dh}}}{{Af{Ad}}}}{{Adc}e{A`Jd}{}}{{{f{Ad}}c}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{{f{Ad}}}{{Af{c}}}Jd}{{{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}{B`{Fb}}}Ad}{{{f{BLf}}{f{E`}}}{{Af{Ad}}}}{{{f{BLf}}{f{{Dd{Ld}}}}}{{Af{Ad}}}}{{{f{BLf}}{f{{Dd{Ld}}}}}Ad}{{{f{Ad}}{f{{Dd{Ld}}}}d}Ad}{{{f{Ad}}{f{E`}}d}{{Af{Ad}}}}{{{f{BLf}}{f{E`}}}Ad}{{{f{Ad}}{f{{Dd{Ld}}}}}Ad}{{{f{Ad}}{f{E`}}d}Ad}{{{f{Ad}}Fbd}El}:{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AHn{Ad}}}}{{{f{c}}}Dj{}}{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{c{{G`{e}}}{}{}}0{{{Gf{{f{AMf}}{En{El}}}}}{{Af{Ad}}}}{{{Gf{{f{AMf}}El}}}{{Af{Ad}}}}{{{Gf{{f{Bh}}El}}}{{Af{Ad}}}}{{{Gf{{f{Bh}}{En{El}}}}}{{Af{Ad}}}}4444{{{f{c}}}Mf{}}00{{{f{Ad}}}{{Af{{f{ANl}}}}}}{{{f{Ad}}}{{Af{{f{ALn}}}}}}{{{f{Ad}}}{{Af{{f{ANn}}}}}}{{{f{Ad}}}{{Af{{f{ANj}}}}}}{{{f{BLf}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BLf}}}{{Af{{f{{l{c}}}}}}}C`}`{{{f{BLf}}Db}{{B`{Jf}}}}0{{{f{BLf}}Db}{{Af{Ad}}}}0{ce{}{}}00{{Ad{f{Bh}}}Ad}{{{f{Ad}}c}Ad{A`Jd}}{{{f{Ad}}{f{Fd}}{f{Ad}}}{{Af{Ad}}}}````{{{BOf{}{{Cb{c}}}}{f{Ad}}}c{}}{{{f{BOh}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BHd}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Eh}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BHd}}c}{{Af{Ad}}}Ab}{{{f{{l{Eh}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BOj}}}BOj}{{{f{c}}{f{Bje}}}b{}{}}{{}BOj}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BOj}}{f{BOj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BOj}}{f{BjFh}}}Fj}{cc{}}{{{f{BOj}}{f{Bjc}}}bAEd}{{}Fb}{ce{}{}}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mf{}}3``{{{f{c}}h}b{}}{{{f{BjCh}}}{{f{BjAd}}}}{{{f{Ch}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{Ch}}}Ch}{{{f{c}}{f{Bje}}}b{}{}}{{{f{Ch}}}Ad}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{cc{}}{{}Fb}{ce{}{}}{{{f{BjAd}}}Ch}{{{f{BjCh}}{f{BjEl}}}b}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mf{}}5{{{f{BjCh}}{f{BjEl}}e}c{}{{Cd{{f{Ch}}}{{Cb{c}}}}}}````````{{{f{c}}h}b{}}8{{{En{B@f}}}{{Af{B@f}}}}{c{{Af{B@f}}}{{Ff{}{{Bb{B@f}}}}}}{cB@f{{Ff{}{{Bb{B@f}}}}}}{c{{B`{B@f}}}{{Ff{}{{Bb{B@f}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gf{{AHn{{l{c}}}}{AHn{{l{e}}}}}}}C`C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gf{{AHn{{l{c}}}}{AHn{{l{e}}}}{AHn{{l{g}}}}}}}C`C`C`}{{{f{BjBOl}}}d}{c{{Af{Dh}}}{{Ff{}{{Bb{{f{Gl}}}}}}}}{c{{Af{{Gf{DhFb}}}}}{{Ff{}{{Bb{{f{Gl}}}}}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00{{{f{{BOn{ec}}}}}{{BOn{ec}}}O`{O`{Bf{}{{Bb{c}}}}}}{{{f{c}}{f{Bje}}}b{}{}}{{{f{{l{c}}}}{f{{l{c}}}}}{{Gf{{AHn{{l{c}}}}{AHn{{l{c}}}}}}}C`}{{{f{Ad}}{f{Ad}}}{{Gf{AdAd}}}}{BOle{}{{C@`{c}}}}{BOle{}{{C@b{c}}}}{c{{Af{B@f}}}{{Ff{}{{Bb{{f{B@f}}}}}}}}{cB@f{{Ff{}{{Bb{{f{B@f}}}}}}}}{{{f{BjBOl}}{f{c}}}dBIf}{Fb{{f{c}}}{}}{{{f{{C@d{c}}}}}{{f{e}}}{}{}}1{{{f{{AHd{c}}}}}{{f{e}}}{}{}}2{Fb{{f{Bjc}}}{}}0{{{f{Bj{AHd{c}}}}}{{f{Bje}}}{}{}}1{Fbb}00{cBAf{{Ff{}{{Bb{Dh}}}}}}{c{{Af{Dh}}}{{Ff{}{{Bb{{f{Dh}}}}}}}}{{{f{Ad}}{f{Bh}}}{{Af{b}}}}{{{f{{C@d{Ad}}}}{f{{C@d{Ad}}}}}d}{{{f{c}}{f{e}}}d{}{}}00`{{{f{BjBOl}}cg}{{B`{c}}}{}{}{{Cj{ce}{{Cb{c}}}}}}{cc{}}00{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{c{{AHd{Fd}}}{{Ff{}{{Bb{d}}}}}}{c{{AHd{{l{e}}}}}{{Ff{}{{Bb{}}}}}n}{eC@b{}{{Ff{}{{Bb{c}}}}}}12{c{{AHd{{l{e}}}}}{{Gh{}{{Bb{}}}}}n}{c{{AHd{{l{e}}}}}{{Gj{}{{Bb{}}}}}n}{c{{AHd{Fd}}}{{Gj{}{{Bb{d}}}}}}{{{f{Dh}}{f{Dh}}}{{B`{Dh}}}}{{{f{AK`}}{f{AK`}}}AK`}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{C@d{Ad}}}}{f{Bjc}}}bAEd}{{}Fb}00{ce{}{}}00{{{AHd{c}}}c{}}1{BCd{{En{c}}}{}}{c{{En{{C@h{C@f}}}}}{}}{c{{En{Dj}}}{}}{BAbGl}{c{{AHd{c}}}{}}{{eFb}{{BOn{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{BOn{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{BOn{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}F`}}`{{{f{{BOn{ec}}}}}{{Gf{Fb{B`{Fb}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{{Dd{c}}}}KhFb}{{f{{Dd{c}}}}}{}}{{{f{{l{c}}}}Fb}{{Af{{En{{l{c}}}}}}}C`}{{{f{B@f}}Fbd}{{En{B@f}}}}{{{f{c}}}e{}{}}{{BOlFb}{{BOn{BOlc}}}{}}{c{{G`{e}}}{}{}}00{{{f{Dh}}{f{Dh}}}{{Af{Dh}}}}111{{{f{c}}}Mf{}}00{ce{}{}}00{{{f{Dh}}e}c{}{{Cd{{f{BjCh}}}{{Cb{c}}}}}}{{{f{{Dd{{En{c}}}}}}}{{Gf{Fb{En{Fb}}}}}{}}{{{f{B@f}}}{{`{{Bf{}{{Bb{B@f}}}}}}}}{{{f{{Dd{c}}}}}{{AGn{Ld}}}{{Jh{{Dd{Mh}}}}HnI`}}{{{f{{Dd{e}}}}}{{En{c}}}{HnI`Cf}{{Jh{{Dd{c}}}}}}{{{f{Ad}}}{{En{Ad}}}}","D":"IGd","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",4904],[5,"ListType",1230],[5,"ChunkedArray",39],[10,"PolarsNumericType",1230],[10,"Num",4905],[10,"ToPrimitive",4906],[5,"Series",4326],[8,"PolarsResult",3619,4907],[10,"NumOpsDispatchInner",4707,4908],[6,"GroupsProxy",3221,4909],[5,"BooleanType",1230],[5,"Settings",39],[6,"Option",4910],[17,"Item"],[8,"ArrayBox",4766],[10,"Iterator",4911],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1230],[10,"PolarsDataType",1230],[17,"Output"],[10,"Fn",4912],[10,"Copy",4913],[5,"UnstableSeries",4766],[10,"FnMut",4912],[5,"Float64Type",1230],[5,"Float32Type",1230],[5,"BinaryType",1230],[1,"u8"],[1,"slice"],[5,"StringType",1230],[6,"DataType",1230,4914],[5,"String",4915],[8,"ListChunked",1230],[5,"SortOptions",1148],[8,"IdxCa",1230,4916],[5,"SortMultipleOptions",1148],[8,"BinaryChunked",1230],[10,"PolarsIntegerType",1230],[10,"NumOpsDispatchCheckedInner",4732,4917],[8,"ChunkIdIter",39],[8,"ArrayRef",3619,4918],[5,"Vec",4919],[10,"DoubleEndedIterator",4920],[1,"usize"],[8,"BooleanChunked",1230],[10,"IntoIterator",4921],[5,"Formatter",4922],[8,"Result",4922],[10,"Array",4918],[17,"Array"],[6,"Result",4923],[10,"FallibleIterator",4924],[5,"Bitmap",4925],[1,"tuple"],[10,"IntoParallelIterator",4926],[10,"TrustedLen",4927],[6,"AnyValue",1230,4928],[5,"ObjectType",1230],[10,"PolarsObjectSafe",821],[10,"PolarsObject",821],[6,"IsSorted",4326,4929],[1,"f32"],[1,"u64"],[5,"Int128Type",1230],[8,"DecimalChunked",1230,4930],[10,"Send",4913],[10,"Sync",4913],[10,"ExactSizeIterator",4931],[10,"PolarsFloatType",1230],[10,"PolarsIterator",782],[5,"Iter",4932],[5,"IterNames",4932],[5,"Iter",4933],[1,"fn"],[5,"Map",4934],[6,"ChunkedArrayLayout",39],[10,"NumCast",4906],[1,"f64"],[10,"AsRef",4935],[1,"u32"],[5,"Range",4936],[5,"UInt32Type",1230],[5,"Int32Type",1230],[1,"i32"],[5,"UInt64Type",1230],[5,"Int64Type",1230],[1,"i64"],[10,"ParallelIterator",4926],[10,"IndexedParallelIterator",4926],[6,"QuantileInterpolOptions",3619,4937],[5,"Field",1230,4938],[5,"RollingOptionsFixedWindow",3619,4939],[8,"IdxSize",3619,4940],[10,"Sized",4913],[17,"HasViews"],[5,"RandomState",4941],[5,"BytesHash",4942],[8,"Array2",4943],[8,"ArrayView1",4943],[8,"StringChunked",1230],[6,"Either",4944],[5,"TypeId",4945],[5,"NullableIdxSize",3619,4940],[10,"FnOnce",4912],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",476,4946],[10,"ChunkedBuilder",504],[5,"BinViewChunkedBuilder",504,4947],[10,"ViewType",4948],[5,"BooleanChunkedBuilder",504,4949],[5,"NullChunkedBuilder",504,4950],[5,"PrimitiveChunkedBuilder",504,4951],[10,"Clone",4952],[8,"StringChunkedBuilder",504,4947],[8,"BinaryChunkedBuilder",504,4947],[10,"NewChunkedArray",504],[5,"AnonymousListBuilder",608,4953],[5,"AnonymousOwnedListBuilder",608,4953],[5,"ListBooleanChunkedBuilder",608,4954],[5,"ListPrimitiveChunkedBuilder",608,4955],[10,"ListBuilderTrait",608],[5,"ListStringChunkedBuilder",608,4956],[5,"ListBinaryChunkedBuilder",608,4956],[5,"ListNullChunkedBuilder",608,4957],[5,"Box",4958],[10,"ChunkedCollectInferIterExt",762],[10,"ChunkedCollectIterExt",762],[10,"Canonical",776],[10,"ChunkedCollectParIterExt",778],[10,"FromParIterWithDtype",778],[5,"BooleanArray",4959],[5,"BoolIterNoNull",782],[5,"SomeIterator",782],[5,"ObjectArray",821],[6,"ArrowDataType",1230,4960],[10,"Any",4945],[10,"Debug",4922],[8,"ObjectValueIter",821],[5,"BitmapIter",4961],[6,"ZipValidity",4962],[5,"Arc",3619,4963],[5,"ObjectChunkedBuilder",892],[8,"ObjectChunked",1230],[10,"AnonymousObjectBuilder",915],[5,"ObjectRegistry",915],[8,"ObjectConverter",915],[8,"BuilderConstructor",915],[17,"FuncRet"],[10,"ChunkApply",943],[10,"ChunkApplyKernel",943],[10,"ChunkSort",943],[10,"ChunkUnique",943],[10,"ChunkCast",943],[6,"FillNullStrategy",943],[10,"ChunkCompare",943],[10,"ChunkExplode",943],[5,"OffsetsBuffer",4964],[10,"ChunkFillNullValue",943],[10,"ChunkFilter",943],[10,"ChunkFull",943],[10,"ChunkFullNull",943],[10,"ChunkAnyValue",943],[10,"Hasher",4965],[10,"IsFirstDistinct",943],[10,"IsLastDistinct",943],[10,"ChunkAgg",943],[10,"ChunkQuantile",943],[10,"ChunkExpandAtIndex",943],[10,"ChunkReverse",943],[10,"ChunkRollApply",943],[10,"ChunkSet",943],[10,"ChunkShift",943],[10,"ChunkShiftFill",943],[10,"ChunkVar",943],[10,"ChunkTake",943],[10,"ChunkTakeUnchecked",943],[10,"ChunkBytes",943],[10,"ChunkZip",943],[10,"BinaryFnMut",1064],[10,"StaticArray",1230,4966],[10,"TernaryFnMut",1064],[10,"Error",4967],[10,"UnaryFnMut",1064],[5,"PrimitiveArray",4968],[6,"SearchSortedSide",1104],[10,"SlicedArray",3619,4969],[5,"NoNull",4790],[5,"RowsEncoded",4970],[8,"BinaryOffsetChunked",1230],[5,"NaiveDateTime",4971],[6,"PolarsError",3619,4907],[6,"Cow",4972],[8,"Float32Chunked",1230],[8,"Float64Chunked",1230],[10,"ArrayFromIter",1230,4973],[10,"ArrayFromIterDtype",1230,4973],[10,"AsRefDataType",1230,4914],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",4974],[10,"From",4935],[5,"CategoricalChunked",2603,4975],[10,"CategoricalMergeOperation",2603,4976],[10,"LogicalType",1230,4977],[5,"Logical",1230,4977],[5,"OwnedObject",1230,4928],[6,"UnknownKind",1230,4914],[6,"TimeUnit",1230,4978],[5,"UInt8Type",1230],[5,"UInt16Type",1230],[5,"Int8Type",1230],[5,"Int16Type",1230],[5,"DateType",1230],[5,"TimeType",1230],[5,"BinaryOffsetType",1230],[5,"DecimalType",1230],[5,"DatetimeType",1230],[5,"DurationType",1230],[5,"CategoricalType",1230],[6,"ArrowTimeUnit",1230],[10,"ArrayCollectIterExt",3619,4973],[8,"Utf8ViewArray",4948],[8,"UInt32Chunked",1230],[5,"Error",4922],[10,"Into",4935],[10,"NumericNative",1230],[5,"ArrowField",3619],[6,"IntegerType",4979],[6,"PrimitiveType",4980],[10,"Borrow",4981],[8,"String",4982],[10,"NoOption",4983],[10,"GetAnyValue",1230,4928],[8,"Int128Chunked",1230],[6,"Ordering",4984],[6,"PhysicalType",4979],[8,"UInt8Chunked",1230],[8,"UInt16Chunked",1230],[8,"UInt64Chunked",1230],[8,"Int8Chunked",1230],[8,"Int16Chunked",1230],[8,"Int32Chunked",1230],[8,"Int64Chunked",1230],[8,"PlIdHashMap",1230,4916],[5,"CategoricalChunkedBuilder",2603,4985],[5,"GlobalRevMapMerger",2603,4976],[6,"RevMapping",2743,4986],[6,"CategoricalOrdering",2743,4986],[5,"CatIter",2603,4975],[1,"u128"],[5,"DataFrame",2930],[5,"StringCacheHolder",2795,4987],[5,"ErrString",2824,4907],[6,"PolarsWarning",2824,4988],[10,"Display",4922],[6,"FloatFmt",2900],[1,"i128"],[1,"char"],[5,"Schema",4254],[10,"IntoSeries",4326,4989],[6,"NullStrategy",2930],[6,"UniqueKeepStrategy",2930],[8,"PlHashSet",1230,4990],[5,"ArrowSchema",3619,4991],[5,"Row",3475],[5,"GroupBy",3221],[5,"RangeTo",4936],[5,"RangeFull",4936],[5,"RangeFrom",4936],[5,"RangeInclusive",4936],[5,"RangeToInclusive",4936],[5,"RecordBatchIter",2930],[5,"PhysRecordBatchIter",2930],[10,"IntoVec",4790],[5,"MeltArgs",3192],[10,"RangeBounds",4936],[8,"SchemaRef",4254],[6,"IndexOrder",3619,4992],[8,"RecordBatch",4993],[5,"StructArray",4994],[5,"GroupsIdx",3221,4909],[8,"IdxVec",4995],[6,"GroupByMethod",3221],[5,"SlicedGroups",3221,4909],[5,"GroupsProxyParIter",3221,4909],[10,"UnindexedConsumer",4996],[6,"GroupsIndicator",3221,4909],[8,"IdxItem",3221,4909],[10,"IntoGroupsProxy",3221,4997],[5,"Copied",4998],[5,"Zip",4999],[5,"GroupsProxyIter",3221,4909],[8,"GroupsSlice",3221,4909],[1,"array"],[8,"DynArgs",3619,5000],[10,"IsFloat",5001],[10,"NativeType",5002],[10,"AggList",3459,5003],[10,"TakeExtremum",3459],[10,"PhysicalAggExpr",3472],[6,"AnyValueBuffer",3475,5004],[6,"AnyValueBufferTrusted",3475,5004],[5,"BinaryArray",5005],[5,"IdHasher",3571,5006],[5,"IdxHash",3571,5006],[5,"HashMap",5007],[10,"BuildHasher",4965],[10,"VecHash",3571,5008],[10,"Allocator",5009],[5,"BorrowedFd",5010],[10,"AsFd",5010],[10,"AsRawFd",5011],[20,"MaybeUninit",5012],[10,"NumOpsDispatchChecked",3619,4917],[5,"ChunkId",3619,4940],[5,"RollingVarParams",3619,5000],[5,"RollingQuantileParams",3619,5000],[6,"NonExistent",3619,5013],[10,"Ord",4984],[10,"Default",5014],[5,"Weak",4963],[10,"Scalar",5015],[10,"PartialEq",4984],[5,"File",5016],[5,"Error",5017],[6,"Error",5018],[5,"Utf8Error",5019],[5,"TryReserveError",5020],[5,"OsString",5021],[5,"OsStr",5021],[5,"PathBuf",5022],[5,"Path",5022],[5,"CString",5023],[5,"CStr",5024],[10,"ToOwned",4972],[1,"never"],[10,"FromData",4177,5025],[5,"Buffer",5026],[10,"FromDataUtf8",4177,5025],[10,"FromDataBinary",4177,5025],[5,"ListArray",5027],[6,"Ambiguous",3619,5013],[10,"NamedFromOwned",3619,5028],[10,"PartialOrd",4984],[10,"PolarsArray",3619,5029],[10,"Hash",4965],[10,"SeriesTrait",4326,4929],[10,"ChunkAggSeries",3619,5030],[10,"QuantileAggSeries",3619,5031],[10,"IndexToUsize",3619,5032],[10,"NamedFrom",3619,5028],[5,"Pin",5033],[5,"Request",4967],[5,"BorrowedCursor",5034],[5,"IoSliceMut",5035],[6,"SeekFrom",5035],[10,"VarAggSeries",3619,5036],[5,"AllocError",5009],[5,"BTreeMap",5037],[5,"IoSlice",5035],[5,"AnonymousBuilder",4183,5038],[5,"Offsets",4964],[5,"MutableNullArray",4206,5039],[5,"MutableBitmap",5040],[5,"Utf8Array",5041],[8,"ArrowSchemaRef",4991],[10,"IndexOfSchema",4254],[8,"Metadata",4960],[5,"SeriesIter",4326,5042],[8,"SeriesPhysIter",4326,5042],[10,"LhsNumOps",4707,4908],[10,"NumOpsDispatch",4707,4908],[6,"NullBehavior",4740],[10,"CustomIterTools",4790,5043],[5,"TrustMyLength",4790,4927],[10,"FromIteratorReversed",5044],[10,"FromTrustedLenIterator",4790,5043],[5,"Wrap",4790],[5,"LazyCompact",5045],[5,"SmartString",5046],[10,"InitHashMaps",1230],[10,"InitHashMaps2",1230],[5,"TrueT",1230],[15,"IO",2885],[15,"Context",2885],[15,"Count",3456],[15,"Slice",3457],[10,"ListFromIter",3619],[10,"Utf8FromIter",4249],[10,"BinaryFromIter",4249]],"r":[[0,5006],[4,4987],[13,4987],[16,4987],[31,4987],[476,4946],[504,4947],[505,4947],[506,4949],[509,4950],[510,4951],[511,4947],[608,4953],[609,4953],[610,4956],[611,4954],[613,4957],[614,4955],[615,4956],[1133,4969],[1148,4969],[1231,4928],[1233,4973],[1234,4973],[1235,4973],[1236,4960],[1238,4914],[1254,4975],[1257,4975],[1258,4985],[1259,4976],[1260,4986],[1262,4914],[1263,4914],[1264,4914],[1275,4930],[1285,4938],[1286,4938],[1301,4928],[1303,4976],[1307,4916],[1308,5032],[1309,4916],[1310,4916],[1311,4990],[1312,4916],[1348,4977],[1349,4977],[1367,4928],[1370,4990],[1371,4990],[1372,4916],[1373,4990],[1374,4990],[1380,4986],[1382,4966],[1394,4978],[1395,4914],[1422,4914],[1617,4976],[1631,4977],[1705,4914],[2210,4976],[2211,4976],[2222,4914],[2305,4975],[2343,4975],[2603,4975],[2604,4975],[2605,4985],[2606,4976],[2607,4986],[2609,4976],[2613,4986],[2630,4976],[2695,4976],[2696,4976],[2714,4975],[2718,4975],[2743,4986],[2748,4986],[2795,4987],[2801,4987],[2804,4987],[2812,4987],[2814,4986],[2819,4986],[2820,4987],[2821,4987],[2822,4987],[2823,4987],[2829,4907],[2835,4907],[2836,4907],[2837,4988],[2849,4907],[2857,4907],[2864,4988],[2869,4907],[2870,4907],[2871,4907],[2872,4907],[2873,4907],[2874,4988],[2875,4907],[2889,5047],[2890,5047],[2891,5047],[2892,3571],[3221,4909],[3227,4909],[3228,4909],[3229,4909],[3230,4909],[3231,4909],[3232,4909],[3235,4909],[3237,4997],[3249,4909],[3459,5003],[3477,5004],[3478,5004],[3571,5006],[3572,5006],[3573,5006],[3574,5008],[3577,5008],[3578,5008],[3619,5013],[3620,4963],[3621,4946],[3622,4973],[3623,4918],[3625,4991],[3626,4947],[3627,4949],[3629,4975],[3630,4975],[3631,4985],[3632,4976],[3633,4986],[3634,5030],[3635,4940],[3636,39],[3637,504],[3638,762],[3639,762],[3643,2930],[3645,5000],[3648,5025],[3649,5025],[3650,5025],[3652,4976],[3655,5032],[3656,4940],[3657,4992],[3658,5032],[3659,4989],[3660,4790],[3662,5048],[3663,5048],[3664,5048],[3667,4908],[3669,4956],[3670,4954],[3671,608],[3672,5029],[3673,4955],[3674,4956],[3677,3192],[3679,5028],[3680,5028],[3682,504],[3684,5013],[3687,4940],[3688,4940],[3689,4908],[3690,4917],[3693,5029],[3694,4907],[3695,782],[3696,821],[3697,4907],[3698,4951],[3699,5031],[3700,4937],[3703,4986],[3704,4939],[3705,5000],[3706,5000],[3709,4326],[3710,4929],[3712,4969],[3713,4987],[3715,4947],[3717,2930],[3718,5036],[3719,5008],[3765,4976],[3800,5029],[3803,0],[3813,5029],[3842,0],[3978,5032],[4020,5029],[4022,4976],[4023,4976],[4049,5029],[4055,4907],[4056,4907],[4057,4907],[4058,4907],[4070,4975],[4072,5029],[4078,4975],[4151,5029],[4177,5025],[4178,5025],[4179,5025],[4183,5038],[4206,5039],[4236,4986],[4241,4986],[4242,4969],[4245,4987],[4246,4987],[4247,4987],[4248,4987],[4249,5049],[4250,5049],[4328,943],[4331,4989],[4332,4929],[4333,4929],[4337,5042],[4338,5042],[4339,4929],[4707,4908],[4708,4908],[4709,4908],[4715,4908],[4732,4917],[4733,4917],[4791,5043],[4792,5043],[4793,5043],[4796,4927],[4807,5050],[4808,5050],[4837,5051],[4838,5052],[4839,5053],[4858,5052],[4860,5053],[4873,5052],[4888,5052],[4898,5053]],"b":[[53,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[54,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[55,"impl-Add-for-ChunkedArray%3CT%3E"],[56,"impl-Add-for-%26ChunkedArray%3CT%3E"],[70,"impl-ChunkedArray%3CFloat64Type%3E"],[71,"impl-ChunkedArray%3CFloat32Type%3E"],[76,"impl-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkedArray%3CT%3E"],[99,"impl-Flags-for-Settings"],[100,"impl-Settings"],[140,"impl-Div-for-%26ChunkedArray%3CT%3E"],[141,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[142,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[143,"impl-Div-for-ChunkedArray%3CT%3E"],[152,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[153,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[162,"impl-Debug-for-ChunkedArray%3CT%3E"],[163,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[164,"impl-Octal-for-Settings"],[165,"impl-LowerHex-for-Settings"],[166,"impl-UpperHex-for-Settings"],[167,"impl-Debug-for-Settings"],[168,"impl-Binary-for-Settings"],[176,"impl-Flags-for-Settings"],[177,"impl-Settings"],[185,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[186,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[190,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[191,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[217,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[259,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[260,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[261,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[262,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[263,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[264,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[270,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[271,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[272,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[273,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[274,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[275,"impl-ChunkedArray%3CBooleanType%3E"],[277,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[278,"impl-ChunkedArray%3CBooleanType%3E"],[281,"impl-ChunkedArray%3CBooleanType%3E"],[282,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[285,"impl-ChunkedArray%3CBooleanType%3E"],[286,"impl-ChunkedArray%3CT%3E"],[287,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[288,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[289,"impl-Mul-for-ChunkedArray%3CT%3E"],[290,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[294,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[295,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[296,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[297,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[298,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[299,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[300,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[301,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[302,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[303,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[304,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[305,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[306,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[307,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[308,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[309,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[310,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[311,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[312,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[313,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[314,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[315,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[323,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[324,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[325,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[326,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[330,"impl-ChunkedArray%3CListType%3E"],[331,"impl-ChunkedArray%3CStringType%3E"],[332,"impl-ChunkedArray%3CListType%3E"],[333,"impl-ChunkedArray%3CStringType%3E"],[344,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[345,"impl-Rem-for-ChunkedArray%3CT%3E"],[346,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[347,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[373,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[374,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[375,"impl-Sub-for-ChunkedArray%3CT%3E"],[376,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[380,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[381,"impl-ChunkedArray%3CBooleanType%3E"],[385,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[386,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[387,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[388,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[394,"impl-ChunkedArray%3CListType%3E"],[395,"impl-ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[448,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[449,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[450,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[451,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[452,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[453,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[454,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[455,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[456,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[463,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[464,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[465,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[466,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[467,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[468,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[469,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[470,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[471,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[472,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[473,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[556,"impl-BinViewChunkedBuilder%3Cstr%3E"],[557,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[826,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[827,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[859,"impl-ObjectArray%3CT%3E"],[860,"impl-StaticArray-for-ObjectArray%3CT%3E"],[872,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[873,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[883,"impl-StaticArray-for-ObjectArray%3CT%3E"],[884,"impl-ObjectArray%3CT%3E"],[886,"impl-StaticArray-for-ObjectArray%3CT%3E"],[887,"impl-ObjectArray%3CT%3E"],[889,"impl-ObjectArray%3CT%3E"],[890,"impl-Array-for-ObjectArray%3CT%3E"],[893,"impl-ObjectChunkedBuilder%3CT%3E"],[894,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[896,"impl-ObjectChunkedBuilder%3CT%3E"],[897,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1460,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1461,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1462,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1463,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1464,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1465,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1466,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1467,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1542,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1543,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1544,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1545,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1546,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1547,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1829,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[1830,"impl-PartialEq-for-DataType"],[1838,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1839,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1840,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1841,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1844,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1845,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1846,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1847,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1886,"impl-Display-for-AnyValue%3C\'_%3E"],[1887,"impl-Debug-for-AnyValue%3C\'a%3E"],[1889,"impl-Display-for-DataType"],[1890,"impl-Debug-for-DataType"],[1892,"impl-Debug-for-TimeUnit"],[1893,"impl-Display-for-TimeUnit"],[1904,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[1905,"impl-From%3CK%3E-for-AnyValue%3C\'_%3E"],[1908,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[1909,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[1911,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[1913,"impl-From%3C%26Field%3E-for-Field"],[1914,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[1937,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[1939,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[1942,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1943,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1944,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[1946,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1947,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1948,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1949,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1955,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1956,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1958,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1959,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1960,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1961,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1962,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1963,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1971,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[1972,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[1973,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1974,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1975,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1976,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2065,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2066,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2067,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2068,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2071,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2072,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2073,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2074,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2200,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2201,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2202,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2203,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2206,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2207,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2208,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2209,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2243,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2244,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2245,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2246,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2247,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2248,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2249,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2250,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2251,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2252,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2263,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2264,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2267,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2268,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2269,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2270,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2273,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2274,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2275,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2276,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2356,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2357,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2358,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2359,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2649,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2650,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2651,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2652,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2653,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2654,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2669,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2670,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2671,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2672,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2673,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2674,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2689,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2690,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2691,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2692,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2693,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2694,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2705,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2706,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2707,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2708,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2709,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2710,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2859,"impl-Display-for-ErrString"],[2860,"impl-Debug-for-ErrString"],[2951,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[2952,"impl-Add%3C%26Series%3E-for-DataFrame"],[2953,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[2990,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[2991,"impl-Div%3C%26Series%3E-for-DataFrame"],[2992,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3022,"impl-Debug-for-DataFrame"],[3023,"impl-Display-for-DataFrame"],[3028,"impl-From%3C%26Schema%3E-for-DataFrame"],[3029,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3057,"impl-Index%3C%26str%3E-for-DataFrame"],[3058,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3059,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3060,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3061,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3062,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3063,"impl-Index%3Cusize%3E-for-DataFrame"],[3064,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3089,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3090,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3091,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3106,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3107,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3108,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3140,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3141,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3142,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3161,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3163,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3333,"impl-Display-for-GroupByMethod"],[3334,"impl-Debug-for-GroupByMethod"],[3340,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3342,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3343,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3377,"impl-IntoIterator-for-%26GroupsIdx"],[3378,"impl-IntoIterator-for-GroupsIdx"],[3380,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3381,"impl-IntoParallelIterator-for-GroupsIdx"],[3736,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[3737,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[3861,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[3862,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[3863,"impl-PartialEq-for-Arc%3CT,+A%3E"],[3896,"impl-Debug-for-PolarsError"],[3897,"impl-Display-for-PolarsError"],[3900,"impl-Display-for-Arc%3CT,+A%3E"],[3901,"impl-Pointer-for-Arc%3CT,+A%3E"],[3902,"impl-Debug-for-Arc%3CT,+A%3E"],[3912,"impl-From%3CError%3E-for-PolarsError"],[3913,"impl-From%3CError%3E-for-PolarsError"],[3914,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3915,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3920,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[3921,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[3922,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[3923,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[3924,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[3926,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[3927,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[3928,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[3929,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[3930,"impl-From%3CT%3E-for-Arc%3CT%3E"],[3931,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[3932,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[3933,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[3934,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[3936,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4272,"impl-From%3CArrowSchema%3E-for-Schema"],[4273,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4274,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4275,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4276,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4278,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4346,"impl-Add-for-%26Series"],[4347,"impl-Add%3CT%3E-for-%26Series"],[4348,"impl-Add%3CT%3E-for-Series"],[4349,"impl-Add-for-Series"],[4410,"impl-Div-for-Series"],[4411,"impl-Div%3CT%3E-for-Series"],[4412,"impl-Div%3CT%3E-for-%26Series"],[4413,"impl-Div-for-%26Series"],[4424,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4425,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4426,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4427,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4428,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4429,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4447,"impl-Debug-for-Series"],[4448,"impl-Display-for-Series"],[4459,"impl-FromIterator%3Ci32%3E-for-Series"],[4460,"impl-FromIterator%3C%26u32%3E-for-Series"],[4461,"impl-FromIterator%3Cu64%3E-for-Series"],[4462,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4463,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4464,"impl-FromIterator%3C%26f64%3E-for-Series"],[4465,"impl-FromIterator%3Ci64%3E-for-Series"],[4466,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4467,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4468,"impl-FromIterator%3CString%3E-for-Series"],[4469,"impl-FromIterator%3Cu32%3E-for-Series"],[4470,"impl-FromIterator%3C%26i64%3E-for-Series"],[4471,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4472,"impl-FromIterator%3C%26i32%3E-for-Series"],[4473,"impl-FromIterator%3C%26f32%3E-for-Series"],[4474,"impl-FromIterator%3Cf32%3E-for-Series"],[4475,"impl-FromIterator%3Cbool%3E-for-Series"],[4476,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4477,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4478,"impl-FromIterator%3C%26bool%3E-for-Series"],[4479,"impl-FromIterator%3C%26u64%3E-for-Series"],[4480,"impl-FromIterator%3Cf64%3E-for-Series"],[4481,"impl-FromIterator%3C%26str%3E-for-Series"],[4482,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4483,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4484,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4485,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4486,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4487,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4499,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4500,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4501,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4502,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4503,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4504,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4542,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4543,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4544,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4545,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4546,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4547,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4561,"impl-Mul%3CT%3E-for-%26Series"],[4562,"impl-Mul-for-%26Series"],[4563,"impl-Mul%3CT%3E-for-Series"],[4564,"impl-Mul-for-Series"],[4570,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4571,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4572,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4573,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4574,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4575,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4576,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4577,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4578,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4579,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4580,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4581,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4582,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4583,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4584,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4585,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4586,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4587,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4588,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4589,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4590,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4591,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4592,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4593,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4594,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4595,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4596,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4597,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4598,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4599,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4600,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4601,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4602,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4603,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4604,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4609,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4610,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4611,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4612,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4613,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4614,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4623,"impl-Rem%3CT%3E-for-%26Series"],[4624,"impl-Rem-for-%26Series"],[4625,"impl-Rem%3CT%3E-for-Series"],[4653,"impl-Sub%3CT%3E-for-Series"],[4654,"impl-Sub%3CT%3E-for-%26Series"],[4655,"impl-Sub-for-%26Series"],[4656,"impl-Sub-for-Series"],[4677,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4678,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4679,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4680,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4850,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4851,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4853,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4854,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4856,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4857,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAALoMAQ0+DUENQg1DDUQNRQ1KDU0NUg1TDXgN","e":"OzAAAAEAAG4O4QEAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoAEQBEAAAARwACAEsABABTAAMAWAAAAFoABABhAAAAZAAAAGYAAABpAAYAcQAAAHMAAgB5AAQAfwAAAIQABwCNAAgAmAAEAJ8AAQCiAAoAsQAAALQAAQC4AAQAvgACAMQAAwDKAAMAzwADANYAAADYAAUA4AADAOsABQD0AAMA+wABAAABAQADAQYADwEOACABBQAnARkARAEDAEkBAABLAQQAUQEBAFcBAABZAQQAYAEAAGUBAgBpAQEAbQECAHIBBwB8AQMAhwEBAI0BAQCTAQgAnQEKAKkBAACrAQAArQEFALUBAAC3ASMA3AEpAAoCAgAQAiMAOgIFAEQCAABGAiYAbwJMAMMCDADXAjcAEgMJAB4DAQAiAwEAJQMSADoDEwBPAwcAWAMAAFoDAABdAwIAYgMOAHIDAAB0AwAAdwMCAHsDAgB/AwEAggMIAIwDAACOAwUAlgMBAJkDAACbAwEAngMDAKMDAwCoAwIArAMDALIDAAC1AwAAvQMAAMIDAADFAwEAygMBAM0DAADQAwAA2AMAAOEDAgDmAwUA7gMCAPQDAAD2AwAA+AMBAP4DAQABBAEACAQBAA4EAAARBAAAFAQAABYEAAAYBAAAGgQAAB8EBAAmBAEAKQQHADIEAgA4BAAAOgQDAD8EAQBCBAUATgQVAGUEAQBpBAQAbwQDAHYEBgCABA8AkgQLAJ8EAAChBAQAsgQJAMcEDQDXBAIA2wQFAOMEAADlBAwA9QQAAPcEAAD8BAEA/wQAAAEFAgAFBQAABwUAAAoFAAANBQAADwUBABIFAAAUBQIAGAUMACYFAAAoBQEAKwUAAC0FAQAwBQAAMgUBADUFAAA3BQEAOgUAAD4FAABCBQEARgUAAEkFAABLBQAATQUDAFIFAABVBQcAXgUBAGEFBABnBQEAawUAAG0FAAByBQIAdgUBAHkFAAB7BQEAfgUAAIAFAQCDBQAAhQUBAIgFAACKBQEAjQUAAI8FAACSBToA0wUEANoFCQDmBQQA7AUIAPYFAAD4BakAowYHAKwGcwAhBwAAIwdGAHEHAQB1BwEAeAcAAHoHAgCSBwAAlAcAAJYHFwCyByQA2QcGAOIHHgAHCD0ARwgAAGoICQB2CAAAeAgBAHsIAQB+CAAAgwgFAIoIAACNCAIAkgghALUICQDACA0AzwgcAO0IBgD1CBoAEQkVACgJDQA7CQAAPQkAAEIJHABhCQIAZQlOALUJKQDgCUoALAoEADIKAQA1CgIAOQoEAD8KIwBqCgIAbgoJAHwKAwCBChcAmwoBAJ4KBACkCg0AswoFALoKAAC8ChUA0woBANkKAgDeCgEA4goJAO0KBADzCgEA+AoAAPoKAgD+CgEAAQsAAAMLAQAJCxgAIwsKAC8LAAAxCwIANgsEADwLJABiCwUAaQsJAHYLAAB5CwoAhQsFAJALEACjCxMAvgsBAMILAgDGCwAAyAsAAM0LAwDVCwEA2AsAAOcLAADqCwEA8gsMAAUMAQASDAIAGQwBACMMAgArDAAALgwAADQMAAA9DAEAQAwAAEMMBABODAQAVgwGAF8MCQBqDAAAbgwEAHoMDQCJDAIAjgwKAJoMAQCdDAMAogwDAKcMCQCyDAcAuwwBAL4MGADYDCgAAg0GAA0NAAAPDQEAEg0AABUNAwAbDQAAIA0HADANDQA/DQEARg0DAEsNAQBPDQIAVA0AAFYNHwB5DQwAiA0FAI8NBwCYDRYAsQ0LAL4NDgDODQEA0g0DANkNBgDjDQ4A9A0BAPcNEQALDgQAEw4FABsOCQAmDgIAKw4HADQODwBFDhYAXQ4jAIMOEACVDgAAlw4BAJsOHAC6DgIAvg4SANIOBgDcDgEA4Q4iAAcPAgALDwwAGQ8bADcPFQBODwAAYA8AAGYPAABsDwAAbw8AAHYPAAB5DwAAfg8BAIEPBgCKDxEAqw8DALAPAgC0DwEAtw8BANIPAgDYDwQA3w8AAOIPBwDsDwAA7g8BAPMPLQAqEAwAOBAAADoQDABMEAkAWBAGAGAQAABiEBwAgBAAAIIQCwCPEAAAkRABAJoQBAChEAUAqBANALcQAgDAEAEAwxABAMcQAQDZEAAA2xAAAN0QAADhEAMA5xAEAO0QAwDyEAQA+xADAAQRAAAKEQIAEhEFABkRBgAjEQMAKxECAC8RAQAzEQ8ARxECAEsRAABNEQEAURECAF8RAwBmEQAAaREAAGsRHgCNEQAAlREBAJgRAQCbEQAAoREBAKQRAgCqEQMAthEDAL8RAQDDEQEAyhEAANIRAwDbERMA8BENAAASAgAEEgEABxIAAAoSAQAQEgIAFRIAABcSAAAbEgEAIRIBACUSAQAsEgAALhIDAD8SAQBCEg4AWBIBAF4SAgBiEgAAZBIaAIISAgCHEg4AlxIBAJoSBQChEgoArRIAAK8SAACxEgQAtxIEAL0SBADEEgAAxxIAAMoSCADUEgIA2RIMAOgSBgDyEggA/BIFAAUTDQAUEwAAFhMCABoTCAAkEwQA"}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNMMMNNNNNNNNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOHONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNHNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_create_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","take_validity","to_boxed","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_and_compress","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_writer","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","maintain_order","new","row_group_size","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[80,"polars_io::avro"],[146,"polars_io::cloud"],[216,"polars_io::cloud::options"],[395,"polars_io::csv"],[397,"polars_io::csv::read"],[649,"polars_io::csv::write"],[789,"polars_io::ipc"],[1042,"polars_io::json"],[1138,"polars_io::mmap"],[1160,"polars_io::ndjson"],[1162,"polars_io::ndjson::core"],[1242,"polars_io::parquet"],[1245,"polars_io::parquet::metadata"],[1297,"polars_io::parquet::read"],[1433,"polars_io::parquet::write"],[1615,"polars_io::partition"],[1631,"polars_io::pl_async"],[1652,"polars_io::predicates"],[1706,"polars_io::prelude"],[1716,"polars_io::utils"],[1728,"dyn_clone::sealed"],[1729,"polars_io::options"],[1730,"polars_io::shared"],[1731,"alloc::boxed"],[1732,"std::io"],[1733,"core::result"],[1734,"serde::de"],[1735,"std::path"],[1736,"polars_core::frame"],[1737,"polars_error"],[1738,"core::fmt"],[1739,"core::hash"],[1740,"polars_arrow::record_batch"],[1741,"core::option"],[1742,"serde::ser"],[1743,"core::any"],[1744,"polars_io::avro::read"],[1745,"polars_arrow::datatypes::schema"],[1746,"polars_io::avro::write"],[1747,"polars_core::schema"],[1748,"alloc::string"],[1749,"alloc::vec"],[1750,"polars_io::cloud::glob"],[1751,"object_store"],[1752,"alloc::sync"],[1753,"polars_io::cloud::polars_object_store"],[1754,"polars_io::cloud::adaptors"],[1755,"std::io::error"],[1756,"crossterm::command"],[1757,"url"],[1758,"object_store::path"],[1759,"bytes::bytes"],[1760,"core::ops::range"],[1761,"core::ops::function"],[1762,"parquet_format_safe::thrift::varint::decode"],[1763,"object_store::aws::builder"],[1764,"object_store::azure::builder"],[1765,"object_store::gcp::builder"],[1766,"core::convert"],[1767,"core::iter::traits::collect"],[1768,"polars_io::csv::read::reader"],[1769,"polars_io::csv::read::read_impl::batched"],[1770,"polars_io::csv::read::options"],[1771,"std::fs"],[1772,"polars_core::datatypes::dtype"],[1773,"polars_io::csv::write::writer"],[1774,"polars_io::csv::write::options"],[1775,"core::num::nonzero"],[1776,"polars_io::ipc::ipc_stream"],[1777,"polars_io::ipc::write"],[1778,"futures_io::if_std"],[1779,"core::marker"],[1780,"polars_io::ipc::ipc_file"],[1781,"polars_io::ipc::ipc_reader_async"],[1782,"polars_arrow::io::ipc::read::file"],[1783,"polars_arrow::array::struct_"],[1784,"polars_arrow::array"],[1785,"polars_arrow::datatypes"],[1786,"polars_arrow::datatypes::field"],[1787,"polars_arrow::array::struct_::mutable"],[1788,"polars_arrow::array::growable::structure"],[1789,"polars_arrow::bitmap::immutable"],[1790,"polars_arrow::scalar"],[1791,"polars_arrow::array::struct_::iterator"],[1792,"polars_arrow::bitmap::utils::iterator"],[1793,"polars_arrow::bitmap::utils::zip_validity"],[1794,"polars_parquet::parquet::metadata::file_metadata"],[1795,"polars_parquet::parquet::metadata::column_order"],[1796,"polars_parquet::parquet::metadata::row_metadata"],[1797,"polars_parquet::arrow::read::statistics"],[1798,"parquet_format_safe::parquet_format"],[1799,"polars_parquet::parquet::metadata::schema_descriptor"],[1800,"polars_parquet::parquet::error"],[1801,"polars_io::parquet::read::reader"],[1802,"polars_io::parquet::read::read_impl"],[1803,"polars_io::parquet::read::options"],[1804,"polars_core::series"],[1805,"polars_io::parquet::write::writer"],[1806,"polars_io::parquet::write::batched_writer"],[1807,"polars_io::parquet::write::options"],[1808,"polars_parquet::parquet::write"],[1809,"core::iter::traits::iterator"],[1810,"polars_parquet::arrow::write::file"],[1811,"std::sync::mutex"],[1812,"core::future::future"],[1813,"tokio::runtime::task::join"],[1814,"polars_core::datatypes::field"],[1815,"avro_schema::file"],[1816,"polars_io::cloud::object_store_setup"],[1817,"polars_io::csv::read::parser"],[1818,"polars_io::csv::read::utils"],[1819,"polars_io::parquet::read::utils"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,0,7,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,7,16,8,5,6,5,6,5,6,5,6,5,6,0,0,0,5,0,16,8,23,5,0,0,0,0,0,6,5,6,5,6,5,6,5,6,5,6,0,5,6,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,44,39,43,44,39,43,39,0,43,43,39,44,39,43,44,39,43,44,44,39,43,39,44,39,44,39,43,44,39,43,39,43,43,43,0,43,44,39,43,44,39,43,44,39,43,44,0,39,44,39,44,43,44,39,43,44,39,43,44,39,43,44,39,43,44,44,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,38,58,59,60,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,38,58,59,60,38,58,59,60,38,38,61,58,59,60,38,61,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,58,58,58,59,59,59,60,60,60,38,58,59,60,38,61,58,59,60,61,58,59,60,38,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,0,0,76,76,0,0,0,0,0,0,74,75,76,0,0,75,74,72,73,74,75,76,66,66,66,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,72,73,74,75,76,72,73,74,75,76,72,73,0,73,72,73,74,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,73,72,73,74,75,76,72,72,72,73,73,73,74,74,74,75,75,75,76,76,76,66,72,73,74,75,76,71,70,66,72,73,74,75,75,76,72,72,72,73,74,75,76,72,0,72,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,0,72,72,73,72,72,66,75,75,75,71,70,73,72,72,72,73,72,72,72,72,72,72,73,72,73,74,75,76,72,72,72,73,74,75,76,73,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,72,73,73,72,73,73,72,72,72,72,73,72,72,73,72,72,72,73,72,72,72,72,72,72,73,72,72,73,73,85,0,0,0,85,85,85,0,0,83,84,85,83,81,81,82,83,84,85,81,82,83,84,85,83,84,85,83,84,85,84,84,83,84,85,81,82,83,84,85,81,82,83,84,85,83,84,85,81,82,83,84,85,83,84,85,83,83,83,84,84,84,85,85,85,81,82,84,83,84,85,81,82,83,84,85,83,84,85,81,83,81,83,81,82,83,84,85,81,82,83,84,85,84,83,81,81,84,84,84,84,83,84,85,83,84,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,81,81,81,81,81,81,81,81,81,82,0,0,0,0,0,0,0,0,0,0,0,0,96,96,93,94,95,96,87,88,88,102,97,87,103,100,88,89,101,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,93,94,95,96,93,94,95,96,95,97,100,101,97,100,101,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,93,95,96,102,97,87,103,100,88,89,101,93,94,95,96,93,95,96,95,95,95,96,96,96,100,101,102,87,103,88,89,102,93,95,96,102,97,87,103,100,88,89,101,93,94,95,96,97,93,95,96,102,97,87,103,100,88,89,101,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,95,93,102,97,102,87,103,100,88,101,88,102,87,93,95,96,102,87,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,102,87,103,100,88,101,100,101,102,87,103,88,94,102,87,94,102,87,94,94,89,0,109,0,109,0,0,0,105,109,106,108,107,105,109,106,108,107,105,105,105,105,109,106,108,107,105,109,106,108,107,105,105,109,106,108,107,105,105,105,105,105,106,107,105,109,106,108,107,105,105,107,109,106,108,107,105,109,106,108,107,105,105,106,108,107,105,107,105,109,106,108,107,105,109,106,108,107,105,109,106,108,107,105,109,106,108,107,105,107,107,106,107,107,107,107,108,77,77,0,77,0,77,77,77,77,77,77,77,77,77,77,68,68,0,77,77,77,77,0,0,0,0,112,112,112,112,117,112,117,112,112,112,112,112,117,112,117,112,117,112,112,112,112,117,112,117,112,112,112,117,112,117,117,112,117,112,112,112,112,112,117,117,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,117,112,117,112,112,117,112,112,112,112,112,117,112,117,117,117,117,117,117,117,117,112,112,0,0,0,0,0,0,126,129,126,129,126,126,126,126,126,126,129,126,129,126,0,129,129,126,129,129,126,129,129,126,129,126,129,126,126,126,126,129,129,129,126,126,126,126,126,129,126,126,129,126,129,126,126,129,126,139,0,139,139,0,0,0,0,139,138,139,135,137,136,135,137,138,139,136,135,137,138,139,138,139,138,139,139,136,135,137,138,139,136,135,137,138,139,138,139,136,135,137,138,139,138,139,138,138,138,139,139,139,135,137,136,138,139,136,135,137,138,139,137,135,137,138,139,136,135,137,138,139,136,135,137,138,139,136,136,136,138,0,136,135,136,135,137,138,135,137,136,135,137,138,139,135,135,137,138,139,136,135,137,138,139,136,135,137,138,139,136,135,137,138,139,135,137,138,136,135,137,138,139,135,135,137,135,137,135,137,135,137,135,137,135,0,145,0,145,0,145,145,0,0,0,0,145,145,145,0,144,145,146,147,148,142,143,142,144,145,146,147,148,143,142,144,145,146,147,148,144,145,146,147,148,144,145,146,147,148,144,144,144,145,143,142,144,145,146,147,148,143,142,144,145,146,147,148,144,145,146,147,148,143,142,144,145,146,147,148,143,144,145,146,147,148,144,144,144,145,145,145,146,146,146,147,147,147,148,148,148,143,142,144,145,146,147,148,143,142,144,145,146,147,148,143,144,145,146,147,148,143,142,144,145,146,147,148,143,142,144,145,146,147,148,144,142,144,144,145,146,147,148,142,144,144,145,146,147,148,143,142,144,145,146,147,148,143,142,144,145,146,147,148,146,147,148,143,142,144,145,146,147,148,143,142,144,145,146,147,148,142,142,142,142,143,143,0,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,0,0,158,158,158,158,158,158,158,158,0,158,158,160,158,158,158,0,158,158,0,0,0,0,0,0,67,164,163,164,163,163,164,163,164,163,164,163,164,163,164,67,164,163,164,163,164,164,164,164,164,163,164,163,164,163,164,163,164,163,163,164,163,162,164,164,164,164,163,164,163,164,163,164,163,0,0,0,16,8,16,8,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0`{{{b{n}}c}{{Ab{A`}}}Ad}`{{}l}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{j}}}Aj}{c{{Ah{l}}}Aj}{Aff}0`{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{n}}}An}{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{{{b{j}}{b{hBf}}}Bh}{{{b{l}}{b{hBf}}}Bh}{cc{}}0{{{b{j}}{b{hc}}}fBj}{{{b{l}}{b{hc}}}fBj}{{}Af}0{ce{}{}}0`````{cB`Bl}{cA`Ad}{{{b{hBn}}}{{Bd{{Cb{C`}}}}}}```````{{{b{j}}c}AhCd}{{{b{l}}c}AhCd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0`88````````{{{b{c}}d}f{}}{{{b{h{Ch{c}}}}}{{Bd{Cj}}}{BlCl}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cn}}}Cn}{{{b{c}}{b{he}}}f{}{}}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}00{{{b{Cn}}{b{Cn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{Ch{c}}}{{Bd{Bb}}}{BlCl}}{{{b{h{D`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{Cn}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}00{{{b{Cn}}{b{hc}}}fBj}{{}Af}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}Ad}{{{b{h{Ch{c}}}}}{{Bd{Dd}}}{BlCl}}{{{Ch{c}}Al}{{Ch{c}}}{BlCl}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00777{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}Ad}{{{Ch{c}}{Cb{Af}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}Ad}{{{Ch{c}}{Cb{{Dh{Af}}}}}{{Ch{c}}}{BlCl}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Ed{Dn{Eb{E`}}}}}}}}{{{b{Ef}}}Ef}{{{b{c}}{b{he}}}f{}{}}{{}Dn}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}{{{b{hEh}}}f}11{{{b{Dn}}{b{Dn}}}Al}{{{b{hc}}e}{{Ah{{b{hg}}Ej}}}{}El{}}`{{{b{hEh}}}{{En{f}}}}{{{b{Dn}}{b{hBf}}}Bh}{{{b{Ef}}{b{hBf}}}Bh}{cc{}}00{{{b{F`}}}{{Bd{Dn}}}}{{{b{Ef}}{b{Fb}}}{{Bd{Fd}}}}{{{b{Ef}}{b{Fb}}{Ff{Af}}}{{Bd{Fd}}}}{{{b{Ef}}{b{Fb}}{b{{Fh{{Ff{Af}}}}}}}{{Bd{{Dh{Fd}}}}}}{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Dh{Df}}}}}}{{{b{Ef}}{b{Fb}}}{{Bd{Fj}}}}{{}Af}00{ce{}{}}00{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Eh}}}}{{{b{Dj}}}{{Bd{Dn}}}}{{{Eb{E`}}}Ef}{{{Eb{E`}}Fb}{{Bd{Eh}}}}``{{{b{hc}}e}{{Ah{{b{hg}}Ej}}}{}El{}}`{{{b{hc}}i}{{Ah{gEj}}}{}{}{}{{Fn{{b{he}}}{{Fl{g}}}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00999{{{b{hEh}}{b{{Fh{G`}}}}}{{En{Af}}}}{{{b{hc}}e}{{Ah{AfEj}}}{}Gb}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gd}}}{{b{Dj}}}}{{{b{Gf}}}{{b{Dj}}}}{{{b{Gh}}}{{b{Dj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dl}}{b{Dj}}}{{Bd{{`{E`}}}}}}00{{{b{Dl}}}Dl}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{c}}{b{he}}}f{}{}}000{{}Dl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Dl}}}Aj}{c{{Ah{Gd}}}Aj}{c{{Ah{Gf}}}Aj}{c{{Ah{Gh}}}Aj}{Aff}0000{{{b{Dl}}{b{Dl}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gd}}{b{Gd}}}Al}{{{b{Gf}}{b{Gf}}}Al}{{{b{Gh}}{b{Gh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000{{{b{Dl}}{b{hBf}}}Bh}{{{b{Gd}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gf}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gh}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000{{{b{Dj}}}{{Ah{Gjc}}}{}}{{{b{Dj}}}{{Ah{Gd}}}}{{{b{Dj}}}{{Ah{Gf}}}}{{{b{Dj}}}{{Ah{Gh}}}}{{{b{Dj}}g}{{Bd{Dl}}}{{Gl{Dj}}}{{Gn{Df}}}{{Hb{}{{H`{{Ed{ce}}}}}}}}{{{b{Dl}}{b{hc}}}fBj}{{{b{Gd}}{b{hc}}}fBj}{{{b{Gf}}{b{hc}}}fBj}{{{b{Gh}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000`{{{b{Dl}}c}AhCd}{{{b{Gd}}c}AhCd}{{{b{Gf}}c}AhCd}{{{b{Gh}}c}AhCd}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000077777{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Gdc}}}}}}}}{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Gfc}}}}}}}}{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Ghc}}}}}}}}`````````````````{{{b{c}}d}f{}}0000{{{Hd{c}}{Cb{{Eb{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Ab{Hh}}}}{Cb{Hj}}}{{Bd{Hl}}}}{{{b{h{Hd{c}}}}}{{Bd{Hn}}}Hh}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000`{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{c}}{b{he}}}f{}{}}0000``{{{b{An}}G`{Cb{G`}}{Cb{{b{If}}}}G`Al}{{Bd{Af}}}}`{{}I`}{{}Ib}{{}Id}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{I`}}}Aj}{c{{Ah{Ib}}}Aj}{c{{Ah{Id}}}Aj}{c{{Ah{If}}}Aj}{c{{Ah{Ih}}}Aj}{Aff}0000000```{{{b{I`}}{b{I`}}}Al}{{{b{Ib}}{b{Ib}}}Al}{{{b{Id}}{b{Id}}}Al}{{{b{If}}{b{If}}}Al}{{{b{Ih}}{b{Ih}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{Hd{c}}}{{Bd{Bb}}}Hh}{{{b{I`}}{b{hBf}}}Bh}{{{b{Ib}}{b{hBf}}}Bh}{{{b{Id}}{b{hBf}}}Bh}{{{b{If}}{b{hBf}}}Bh}{{{b{Ih}}{b{hBf}}}Bh}{cc{}}000000{{{b{Dj}}}If}1{{{b{I`}}}{{Eb{Ib}}}}`{{{b{I`}}{b{hc}}}fBj}{{{b{Ib}}{b{hc}}}fBj}{{{b{Id}}{b{hc}}}fBj}{{{b{If}}{b{hc}}}fBj}{{{b{Ih}}{b{hc}}}fBj}`{{{b{Ij}}G`{Cb{Af}}Al{Cb{{b{Dd}}}}{b{hAf}}Af{Cb{{b{If}}}}{Cb{G`}}G`{Cb{{b{Ih}}}}AlAl{b{h{Cb{Af}}}}Al}{{Bd{{Ed{DdAfAf}}}}}}`{{}Af}0000000{ce{}{}}0000000{{I`c}{{Hd{c}}}Hh}{{{b{{Fh{G`}}}}}Al}`{{I`c}I`{{Il{Ib}{{Fl{Ib}}}}}}```{c{{Hd{c}}}Hh}={DfIf}{G`If}{{{b{hHn}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{hHl}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}````````````{{{b{I`}}c}AhCd}{{{b{Ib}}c}AhCd}{{{b{Id}}c}AhCd}{{{b{If}}c}AhCd}{{{b{Ih}}c}AhCd}``{{{b{c}}}e{}{}}0000`{c{{Ah{e}}}{}{}}000000000000000{{I`{Cb{An}}}{{Bd{{Hd{In}}}}}}`{{{b{c}}}Cf{}}0000000{ce{}{}}0000000{{I`Af}I`}{{I`{Cb{{Eb{{Dh{Df}}}}}}}I`}{{Ib{Cb{c}}}Ib{{Gn{If}}}}{{IbAl}Ib}{{I`{Cb{{Eb{{Dh{J`}}}}}}}I`}{{IbId}Ib}{{IbG`}Ib}{{I`Al}I`}0{{I`{Cb{Af}}}I`}1500{{Ib{Cb{Ih}}}Ib}{{I`Ib}I`}{{I`{Cb{c}}}I`{{Gn{An}}}}{{I`{Cb{{Eb{{Dh{Af}}}}}}}I`}{{Ib{Cb{G`}}}Ib}66{{I`{Cb{j}}}I`}>{{I`{Cb{Hj}}}I`}09??<<`````````{{{b{c}}d}f{}}00`{{{Jb{c}}{b{Dd}}}{{Bd{{Jd{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Jf}}}Jf}{{{b{Jh}}}Jh}{{{b{Jj}}}Jj}{{{b{c}}{b{he}}}f{}{}}00``{{}Jf}{{}Jh}{{}Jj}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Jf}}}Aj}{c{{Ah{Jh}}}Aj}{c{{Ah{Jj}}}Aj}{Aff}0000{{{b{Jf}}{b{Jf}}}Al}{{{b{Jh}}{b{Jh}}}Al}{{{b{Jj}}{b{Jj}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000{{{b{h{Jb{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Jd{c}}}}}{{Bd{f}}}Ad}`{{{b{Jf}}{b{hBf}}}Bh}{{{b{Jh}}{b{hBf}}}Bh}{{{b{Jj}}{b{hBf}}}Bh}{cc{}}0000{{{b{Jf}}{b{hc}}}fBj}{{{b{Jh}}{b{hc}}}fBj}{{{b{Jj}}{b{hc}}}fBj}{{{Jb{c}}Al}{{Jb{c}}}Ad}`0`{{}Af}0000{ce{}{}}0000``{{{Jb{c}}Af}{{Jb{c}}}Ad}{c{{Jb{c}}}Ad}````{{{b{Jf}}c}AhCd}{{{b{Jh}}c}AhCd}{{{b{Jj}}c}AhCd}``{{{b{c}}}e{}{}}00{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Jb{c}}Jl}{{Jb{c}}}Ad}{{{Jb{c}}{Cb{Df}}}{{Jb{c}}}Ad}0{{{Jb{c}}{Cb{Af}}}{{Jb{c}}}Ad}{{{Jb{c}}Df}{{Jb{c}}}Ad}0{{{Jb{c}}G`}{{Jb{c}}}Ad}{{{Jb{c}}Jj}{{Jb{c}}}Ad}14{{{b{h{Jd{c}}}}{b{Bb}}}{{Bd{f}}}Ad}``````````````{{{b{c}}d}f{}}000{{{b{h{Jn{c}}}}}{{Bd{Cj}}}Bl}{{{K`{c}}{b{Dd}}}{{Bd{{Kb{c}}}}}Ad}{{{K`{c}}{b{Dd}}}{{Bd{{`{c}}}}}{KdKfKh}}{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{hc}}}{{b{he}}}{}{}}00000000000{{{b{Kj}}}Kj}{{{b{Kl}}}Kl}{{{b{Kn}}}Kn}{{{b{L`}}}L`}{{{b{c}}{b{he}}}f{}{}}000`{{{b{Lb}}{Cb{{b{Ld}}}}}{{Bd{Lf}}}}{{{b{Lh}}c}{{Ab{A`}}}Ad}{{{b{Lj}}c}{{Ab{A`}}}Ad}{{{b{Lb}}{Cb{{b{Ld}}}}KlAl}{{Bd{Bb}}}}{{}Lh}{{}Lj}{{}Kl}{{}Kn}{{}L`}{Af{{b{c}}}{}}00000000000{Af{{b{hc}}}{}}00000000000{c{{Ah{Kj}}}Aj}{c{{Ah{Kn}}}Aj}{c{{Ah{L`}}}Aj}{Aff}00000000000{{{b{Kj}}{b{Kj}}}Al}{{{b{Kn}}{b{Kn}}}Al}{{{b{L`}}{b{L`}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{Lh}}}An}{{{b{Lj}}}An}{{{Ll{c}}}{{Bd{Bb}}}Hh}{{{Jn{c}}}{{Bd{Bb}}}Bl}{{{b{h{Ln{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{K`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kb{c}}}}}{{Bd{f}}}Ad}{{{Ll{c}}{Cb{{Eb{Hf}}}}Al}{{Bd{Bb}}}Hh}{{{b{Kj}}{b{hBf}}}Bh}{{{b{Kn}}{b{hBf}}}Bh}{{{b{L`}}{b{hBf}}}Bh}{cc{}}00000000000{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Lb}}}}{{{b{Kj}}{b{hc}}}fBj}{{{b{Kn}}{b{hc}}}fBj}{{{b{L`}}{b{hc}}}fBj}{{}Af}00000000000{ce{}{}}00000000000``{{{Ll{c}}{Cb{An}}}{{Ll{c}}}Hh}{{{b{Lb}}}{{Bd{Ld}}}}{c{{Ll{c}}}Hh}{c{{Jn{c}}}Bl}{c{{Ln{c}}}Ad}{{}Lh}{c{{K`{c}}}Ad}{{}Lj}{c{{K`{c}}}{KdKfKh}}{{{b{h{Ll{c}}}}}{{Bd{M`}}}Hh}{{{b{h{Jn{c}}}}}{{Bd{Dd}}}Bl}{{{b{Kj}}c}AhCd}{{{b{Kn}}c}AhCd}{{{b{L`}}c}AhCd}{{{Ll{c}}Al}{{Ll{c}}}Hh}{{{Jn{c}}Al}{{Jn{c}}}Bl}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{{{b{c}}}Cf{}}00000000000{ce{}{}}00000000000{{{Ll{c}}{Cb{{Dh{Df}}}}}{{Ll{c}}}Hh}{{{Jn{c}}{Cb{{Dh{Df}}}}}{{Jn{c}}}Bl}{{{Ln{c}}{Cb{L`}}}{{Ln{c}}}{}}{{Lh{Cb{L`}}}Lh}{{{K`{c}}{Cb{L`}}}{{K`{c}}}Ad}{{Lj{Cb{L`}}}Lj}{{LhAn}Lh}{{LjAn}Lj}{{{Ll{c}}{Cb{Af}}}{{Ll{c}}}Hh}{{{Jn{c}}{Cb{Af}}}{{Jn{c}}}Bl}{{{Ln{c}}Al}{{Ln{c}}}{}}{{{K`{c}}Al}{{K`{c}}}Ad}{{Klc}Kl{{Gn{{Cb{{Eb{Hf}}}}}}}}{{{Ll{c}}{Cb{{Dh{Af}}}}}{{Ll{c}}}Hh}{{{Jn{c}}{Cb{{Dh{Af}}}}}{{Jn{c}}}Bl}{{Klc}Kl{{Gn{{Cb{{Dh{Df}}}}}}}}{{{Ll{c}}{Cb{j}}}{{Ll{c}}}Hh}{{{Jn{c}}{Cb{j}}}{{Jn{c}}}Bl}{{Klc}Kl{{Gn{{Cb{j}}}}}}{{Klc}Kl{{Gn{{Cb{Af}}}}}}{{{b{h{Kb{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Mb}}}Mb}{{{b{c}}{b{he}}}f{}{}}{{}Mb}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Mb}}}Aj}{Aff}0000{{{b{Mb}}{b{Mb}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{b{h{Md{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{Mf{c}}}{{Bd{Bb}}}Hh}{{{b{Mb}}{b{hBf}}}Bh}{cc{}}0000{{{b{Mb}}{b{hc}}}fBj}{{{Mf{c}}{Cb{Af}}}{{Mf{c}}}Hh}{{}Af}0000{ce{}{}}0000`{c{{Md{c}}}Ad}{c{{Mh{c}}}Ad}{c{{Mf{c}}}Hh}{{{b{Mb}}c}AhCd}{{{Mf{c}}Al}{{Mf{c}}}Hh}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Mf{c}}Jl}{{Mf{c}}}Hh}4{{{Md{c}}Mj}{{Md{c}}}Ad}{{{Mf{c}}Mj}{{Mf{c}}}Hh}{{{Mf{c}}{Cb{{Dh{Df}}}}}{{Mf{c}}}Hh}{{{Mf{c}}Hj}{{Mf{c}}}Hh}{{{Mf{c}}{b{Dd}}}{{Mf{c}}}Hh}{{{b{h{Mh{c}}}}{b{Bb}}}{{Bd{f}}}Ad}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Ij}}}{{b{{Fh{G`}}}}}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{c}}}IjHh}{cc{}}{{}Af}{ce{}{}}{{{b{Hh}}}{{Cb{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Cb{{b{In}}}}}}{{{b{Ml}}}{{Bd{In}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}5`{{{b{hc}}{Cb{Af}}}{{Bd{Dd}}}Mn}``{{{b{c}}d}f{}}{N`{{Eb{Nb}}}}{{{b{N`}}}{{b{Nd}}}}{{{b{hN`}}}{{b{hNd}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{N`{{Ab{Nb}}}}{{{b{N`}}}N`}{{{b{c}}{b{he}}}f{}{}}{{{b{N`}}}{{b{Nf}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{Aff}0{{{b{N`}}{b{N`}}}Al}{{{b{N`}}{b{{b{Nb}}}}}Al}{{{b{N`}}}{{b{{Fh{Nh}}}}}}{{{Nj{c}}}{{Bd{Bb}}}Hh}{{{b{N`}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{NlN`}1{NnN`}{c{{Bd{{Nj{In}}}}}{{Gn{An}}}}{{{b{Nf}}}{{b{{Fh{Nh}}}}}}{{{Nj{c}}{Cb{Af}}}{{Nj{c}}}Hh}{{}Af}0{ce{}{}}0{N`{{Ed{{Dh{Nh}}{Dh{{Ab{Nb}}}}{Cb{O`}}}}}}{{{b{N`}}}}{{{b{N`}}}{{Oh{{Dh{{Ab{Ob}}}}OdOf}}}}{{{b{N`}}}Af}{{{Nj{c}}Al}{{Nj{c}}}Hh}{c{{Nj{c}}}Hh}{{Nf{Dh{{Ab{Nb}}}}{Cb{O`}}}N`}{NfN`}{{NfAf}N`}{{{b{hN`}}{Cb{O`}}}f}{{{b{hN`}}AfAf}f}0{{{b{c}}AfAf}e{}{}}011{{N`AfAf}N`}0{{{b{hN`}}}{{Cb{O`}}}}{{{b{N`}}}{{Ab{Nb}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000{{Nf{Dh{{Ab{Nb}}}}{Cb{O`}}}{{Ah{N`Oj}}}}{{{b{c}}}Cf{}}0{{{b{N`}}}{{Cb{{b{O`}}}}}}0{{{b{N`}}}{{b{{Fh{{Ab{Nb}}}}}}}}{{{b{N`}}}Od}{ce{}{}}0{{{Nj{c}}{Cb{Jl}}}{{Nj{c}}}Hh}{{{Nj{c}}Al}{{Nj{c}}}Hh}{{{Nj{c}}{Cb{Af}}}{{Nj{c}}}Hh}0{{{Nj{c}}{Cb{e}}}{{Nj{c}}}Hh{{Gn{An}}}}2{{{Nj{c}}Hj}{{Nj{c}}}Hh}{{{Nj{c}}{b{Dd}}}{{Nj{c}}}Hh}{{{b{N`}}{Cb{O`}}}{{Ab{Nb}}}}{{N`{Cb{O`}}}N`}``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{Ol}}}Ol}{{{b{c}}{b{he}}}f{}{}}{{{b{Ol}}Af}On}``{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{{{b{Nh}}{b{A@`}}}{{Ah{A@bOj}}}}`{Aff}0{{{b{A@b}}{b{A@b}}}Al}{{{b{A@b}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Ol}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{A@dA@b}1{{}Af}0{ce{}{}}0{OlA@f}{{{b{Ol}}}{{b{{Cb{{Dh{A@h}}}}}}}}``````{{{b{Ol}}}{{b{A@j}}}}`{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{A@f{{Ah{OlA@l}}}}11{{{b{c}}}Cf{}}0`77`````````{{{b{c}}d}f{}}0{{{A@n{c}}Af}{{Bd{AA`}}}Hh}{{AAbAf}{{Bd{AA`}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{AAd}}}AAd}{{{b{AAf}}}AAf}{{{b{c}}{b{he}}}f{}{}}0{{}AAf}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{AAd}}}Aj}{c{{Ah{AAf}}}Aj}{Aff}0000{{{b{AAd}}{b{AAd}}}Al}{{{b{AAf}}{b{AAf}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{A@n{c}}}{{Bd{Bb}}}Hh}{AAb{{Bd{Bb}}}}{{{b{AA`}}Af}Al}{{{b{AAd}}{b{hBf}}}Bh}{{{b{AAf}}{b{hBf}}}Bh}{cc{}}0000{{{b{Dj}}{Cb{{b{Dl}}}}{Cb{M`}}{Cb{AAh}}}{{Bd{AAb}}}}{{{b{h{A@n{c}}}}}{{Bd{{b{AAh}}}}}Hh}{{{b{hAAb}}}{{Bd{{b{AAh}}}}}}{{{b{AAd}}{b{hc}}}fBj}{{{b{AAf}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000{{{b{AA`}}}Al}`0`{{{Cb{{b{{Fh{Af}}}}}}{b{Cj}}{Cb{{b{{Fh{AAj}}}}}}{Cb{{b{j}}}}}Bb}`{c{{A@n{c}}}Hh}{{{b{hAA`}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{h{A@n{c}}}}}{{Bd{Af}}}Hh}{{{b{hAAb}}}{{Bd{Af}}}}`{{{A@n{c}}AAf}{{A@n{c}}}Hh}{{AAbAAf}AAb}{{{b{AA`}}}{{b{M`}}}}{{{b{h{A@n{c}}}}}{{Bd{M`}}}Hh}{{{b{hAAb}}}{{Bd{M`}}}}{{{b{AAd}}c}AhCd}{{{b{AAf}}c}AhCd}{{{A@n{c}}Al}{{A@n{c}}}Hh}0{{AAbAl}AAb}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000043`{ce{}{}}0000{{{A@n{c}}{Cb{{Dh{Df}}}}}{{A@n{c}}}Hh}{{{A@n{c}}{Cb{{Dh{AAj}}}}}{{A@n{c}}}Hh}{{AAb{Cb{{Dh{AAj}}}}}AAb}{{{A@n{c}}{Cb{Af}}}{{A@n{c}}}Hh}{{AAb{Cb{Af}}}AAb}{{{A@n{c}}{Cb{{Eb{Hf}}}}}{{A@n{c}}}Hh}{{AAb{Cb{{Eb{Hf}}}}}AAb}{{{A@n{c}}{Cb{{Dh{Af}}}}}{{A@n{c}}}Hh}{{AAb{Cb{{Dh{Af}}}}}AAb}{{{A@n{c}}{Cb{j}}}{{A@n{c}}}Hh}{{AAb{Cb{j}}}AAb}{{{A@n{c}}{Cb{M`}}}{{A@n{c}}}Hh}```````````````{{{b{c}}d}f{}}0000{{{AAl{c}}{b{Dd}}}{{Bd{{AAn{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}000000{{{b{hc}}}{{b{he}}}{}{}}000000{{{b{AB`}}}AB`}{{{b{ABb}}}ABb}{{{b{ABd}}}ABd}{{{b{ABf}}}ABf}{{{b{ABh}}}ABh}{{{b{c}}{b{he}}}f{}{}}0000``{{}AB`}{{}ABb}{Af{{b{c}}}{}}000000{Af{{b{hc}}}{}}000000{c{{Ah{AB`}}}Aj}{c{{Ah{ABb}}}Aj}{c{{Ah{ABd}}}Aj}{c{{Ah{ABf}}}Aj}{c{{Ah{ABh}}}Aj}{Aff}000000{{{b{{AAn{c}}}}{b{Bb}}}{{`{{ABl{}{{H`{{Bd{{ABj{Oj}}}}}}}}}}}Ad}{{{b{AB`}}{b{AB`}}}Al}{{{b{ABb}}{b{ABb}}}Al}{{{b{ABd}}{b{ABd}}}Al}{{{b{ABf}}{b{ABf}}}Al}{{{b{ABh}}{b{ABh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{b{{AAn{c}}}}}{{Bd{ABn}}}Ad}{{{AAl{c}}{b{hBb}}}{{Bd{ABn}}}Ad}{{{b{AB`}}{b{hBf}}}Bh}{{{b{ABb}}{b{hBf}}}Bh}{{{b{ABd}}{b{hBf}}}Bh}{{{b{ABf}}{b{hBf}}}Bh}{{{b{ABh}}{b{hBf}}}Bh}{cc{}}000000{{{b{{AAn{c}}}}}{{b{{ACb{{AC`{c}}}}}}}Ad}{{{b{AB`}}{b{hc}}}fBj}{{{b{ABb}}{b{hc}}}fBj}{{{b{ABd}}{b{hc}}}fBj}{{{b{ABf}}{b{hc}}}fBj}{{{b{ABh}}{b{hc}}}fBj}{{}Af}000000{ce{}{}}000000`{c{{AAl{c}}}{AdAd}}`{{{b{AB`}}c}AhCd}{{{b{ABb}}c}AhCd}{{{b{ABd}}c}AhCd}{{{b{ABf}}c}AhCd}{{{b{ABh}}c}AhCd}{{{AAl{c}}Al}{{AAl{c}}}Ad}`{{{b{c}}}e{}{}}0000{c{{Ah{e}}}{}{}}0000000000000{G`{{Bd{ABd}}}}{ACd{{Bd{ABf}}}}{ACf{{Bd{ABh}}}}{{{b{c}}}Cf{}}000000======={{{AAl{c}}ABb}{{AAl{c}}}Ad}{{{AAl{c}}{Cb{Af}}}{{AAl{c}}}Ad}08{{{b{h{AAn{c}}}}{b{Bb}}}{{Bd{f}}}Ad}{{{b{{AAn{c}}}}{Dh{{ABj{Oj}}}}}{{Bd{f}}}Ad}`{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{ACh{c}}{b{Bb}}}{{Bd{f}}}{nKhACj}}{cc{}}{{}Af}{ce{}{}}{{cei}{{ACh{c}}}{nKhACj}{{Gn{An}}}{{Gl{Dj}}}{{Hb{}{{H`{g}}}}}}{c{{Ah{e}}}{}{}}0?2{{{ACh{c}}Al}{{ACh{c}}}{nKhACj}}``{{{b{ACl}}c}{}ACn}{{{b{ACl}}c}{}{ACnKh}}=<;:97{{}{{b{ACl}}}}76{{{b{AD`}}}ABn}{{{b{ACl}}c}ADb{ACnKh}}66{{ACde}{}ACn{{Fn{}{{Fl{c}}}}}}{{{b{c}}}Cf{}}:1````{{{b{hBb}}{Cb{{b{Hf}}}}Al}{{Bd{f}}}}{{{b{Hf}}}{{Cb{{b{ADd}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{ADf}}}{{b{{Fh{ADh}}}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{ADh}}}Aj}{c{{Ah{ADf}}}Aj}{Aff}0{{{b{ADh}}}{{b{J`}}}}{{{b{Hf}}{b{Bb}}}{{Bd{AAj}}}}{{{b{ADh}}{b{hBf}}}Bh}{{{b{ADf}}{b{hBf}}}Bh}{cc{}}0{AAjADh}{ADjADh}{{{b{ADh}}}{{Cb{{b{AAj}}}}}}00{{{b{ADf}}{b{Dj}}}{{Bd{{b{ADh}}}}}}{{}Af}0{ce{}{}}0{{ADj{Cb{AAj}}{Cb{AAj}}{Cb{AAj}}}ADh}{{Hj{Dh{ADh}}{Cb{Af}}}ADf}{{{b{ADh}}}{{Cb{Af}}}}{{{b{ADf}}}{{Cb{Af}}}}{{{b{ADf}}}{{b{Hj}}}}{{{b{ADh}}c}AhCd}{{{b{ADf}}c}AhCd}{{{b{ADd}}{b{ADf}}}{{Bd{Al}}}};;{{{b{ADh}}}{{Cb{AAj}}}}{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0;;```{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{cB`Bl}{cA`Ad}{{B`Al}B`}00````{{{b{Cj}}{b{Cj}}{Cb{{b{{Fh{Df}}}}}}{b{Dj}}}{{Bd{f}}}}{{{b{Dd}}{b{Dd}}{Cb{{b{{Fh{Df}}}}}}{b{Dj}}}{{Bd{f}}}}0{{{b{hc}}}{{Bd{Ij}}}{BlHhADl}}{{cAf}{{Dh{{Ed{AfAf}}}}}{{ABl{}{{H`{Af}}}}}}{cAl{{Gl{Ml}}}}{{{Cb{{b{{Fh{Df}}}}}}{b{Dd}}{Cb{{b{{Fh{AAj}}}}}}Al}{{Cb{{Dh{Af}}}}}}{{{b{Ml}}}An}","D":"CJh","p":[[1,"reference"],[5,"Private",1728],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1729],[5,"HiveOptions",0,1729],[10,"WriterFactory",0,1730],[10,"SerWriter",1706,1730],[5,"Box",1731],[10,"Write",1732],[1,"usize"],[6,"Result",1733],[10,"Deserializer",1734],[1,"bool"],[5,"PathBuf",1735],[10,"SerReader",1706,1730],[5,"DataFrame",1736],[8,"PolarsResult",1737],[5,"Formatter",1738],[8,"Result",1738],[10,"Hasher",1739],[10,"Read",1732],[10,"ArrowReader",0,1730],[8,"RecordBatch",1740],[6,"Option",1741],[10,"Serializer",1742],[5,"TypeId",1743],[5,"AvroReader",80,1744],[5,"ArrowSchema",1745],[10,"Seek",1732],[6,"AvroCompression",80],[5,"AvroWriter",80,1746],[5,"Error",1738],[5,"Schema",1747],[5,"String",1748],[5,"Vec",1749],[1,"str"],[5,"CloudOptions",216],[5,"CloudLocation",146,1750],[10,"ObjectStore",1751],[5,"Arc",1752],[1,"tuple"],[5,"PolarsObjectStore",146,1753],[5,"CloudWriter",146,1754],[5,"Error",1755],[10,"Command",1756],[8,"Result",1755],[5,"Url",1757],[5,"Path",1758],[5,"Bytes",1759],[5,"Range",1760],[1,"slice"],[5,"ObjectMeta",1751],[17,"Output"],[10,"FnOnce",1761],[1,"u8"],[10,"VarInt",1762],[6,"AmazonS3ConfigKey",216,1763],[6,"AzureConfigKey",216,1764],[6,"GoogleConfigKey",216,1765],[6,"CloudType",216],[10,"AsRef",1766],[10,"Into",1766],[17,"Item"],[10,"IntoIterator",1767],[5,"CsvReader",397,1768],[10,"PhysicalIoExpr",1652],[10,"MmapBytesReader",1138],[8,"SchemaRef",1747],[5,"OwnedBatchedCsvReader",397,1769],[5,"BatchedCsvReader",397,1769],[5,"CsvReadOptions",397,1770],[5,"CsvParseOptions",397,1770],[6,"CsvEncoding",397,1770],[6,"CommentPrefix",397,1770],[6,"NullValues",397,1770],[6,"ReaderBytes",1138],[10,"Fn",1761],[5,"File",1771],[6,"DataType",1772],[5,"CsvWriter",649,1773],[5,"BatchedWriter",649,1773],[5,"CsvWriterOptions",649,1774],[5,"SerializeOptions",649,1774],[6,"QuoteStyle",649,1774],[8,"NonZeroUsize",1775],[5,"IpcStreamReader",789,1776],[5,"IpcWriter",789,1777],[5,"BatchedWriter",789,1777],[10,"AsyncWrite",1778],[10,"Unpin",1779],[10,"Send",1779],[5,"IpcScanOptions",789,1780],[5,"IpcReadOptions",789,1781],[5,"IpcWriterOptions",789,1777],[6,"IpcCompression",789,1777],[5,"IpcReaderAsync",789,1781],[5,"FileMetadata",1782],[1,"i64"],[5,"IpcStreamWriterOption",789,1776],[5,"IpcWriterOption",789,1777],[5,"IpcReader",789,1780],[5,"IpcStreamWriter",789,1776],[8,"ArrowSchemaRef",1745],[5,"JsonWriterOptions",1042],[5,"JsonWriter",1042],[5,"JsonReader",1042],[5,"BatchedWriter",1042],[6,"JsonFormat",1042],[5,"Path",1735],[10,"BufRead",1732],[5,"StructArray",1162,1783],[10,"Array",1784],[10,"Any",1743],[6,"ArrowDataType",1785],[5,"Field",1786],[5,"JsonLineReader",1162],[5,"MutableStructArray",1787],[5,"GrowableStruct",1788],[5,"Bitmap",1789],[10,"Scalar",1790],[5,"StructValueIter",1791],[5,"BitmapIter",1792],[6,"ZipValidity",1793],[6,"PolarsError",1737],[5,"FileMetaData",1245,1794],[6,"ColumnOrder",1795],[5,"RowGroupMetaData",1796],[5,"ParquetStatistics",1245],[5,"MutableStatistics",1797],[5,"FileMetaData",1798],[5,"KeyValue",1798],[5,"SchemaDescriptor",1799],[6,"Error",1800],[5,"ParquetReader",1297,1801],[5,"BatchedParquetReader",1297,1802],[5,"ParquetAsyncReader",1297,1801],[5,"ParquetOptions",1297,1803],[6,"ParallelStrategy",1297,1803],[8,"FileMetaDataRef",1245],[5,"Series",1804],[5,"ParquetWriter",1433,1805],[5,"BatchedWriter",1433,1806],[5,"ParquetWriteOptions",1433,1807],[6,"ParquetCompression",1433,1807],[5,"GzipLevel",1433,1807],[5,"BrotliLevel",1433,1807],[5,"ZstdLevel",1433,1807],[8,"RowGroupIterColumns",1433,1808],[10,"Iterator",1809],[1,"u64"],[5,"FileWriter",1810],[5,"Mutex",1811],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1615],[10,"Sync",1779],[5,"RuntimeManager",1631],[10,"Future",1812],[10,"GetSize",1631],[5,"JoinHandle",1813],[10,"StatsEvaluator",1652],[5,"BatchStats",1652],[5,"ColumnStats",1652],[5,"Field",1814],[10,"Sized",1779]],"r":[[0,1730],[1,1729],[2,1729],[3,1730],[4,1730],[5,1730],[81,1744],[82,1746],[83,1815],[146,1750],[147,1754],[148,1753],[157,1816],[184,1750],[219,1763],[224,1764],[248,1765],[399,1769],[400,1770],[401,1770],[402,1770],[403,1770],[404,1768],[408,1770],[409,1769],[449,1817],[529,1818],[548,1818],[650,1773],[651,1773],[652,1774],[656,1774],[657,1774],[789,1777],[790,1777],[791,1781],[792,1780],[793,1781],[794,1780],[795,1776],[796,1776],[797,1776],[798,1777],[799,1777],[800,1777],[1163,1783],[1245,1794],[1262,1797],[1298,1802],[1301,1803],[1302,1801],[1303,1803],[1304,1801],[1379,1819],[1433,1806],[1435,1807],[1437,1807],[1440,1807],[1441,1807],[1442,1805],[1443,1808],[1447,1807],[1706,1730],[1707,1730],[1708,0]],"b":[[1182,"impl-PartialEq-for-StructArray"],[1183,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1188,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1190,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1208,"impl-StructArray"],[1209,"impl-Array-for-StructArray"],[1212,"impl-Array-for-StructArray"],[1213,"impl-StructArray"],[1226,"impl-StructArray"],[1227,"impl-Array-for-StructArray"],[1240,"impl-Array-for-StructArray"],[1241,"impl-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOwEnQAAAAEAAwAPABQAAAAWABIAKgACAC8AAwA1AAAANwACADsAAgBAABAAWQAAAFsAFwB2AAMAfQABAIAADQCRAAAAlgAGAJ8ADQCvAAIAtQADALsAAgDDAAAAxQAAAMoADgDfAAEA6wAAAPcAAQD6AAAADwEQACMBMABZAQMAXgEIAGwBHACQAQQAmQEBAJ0BJADDATcA/AEEAAgCAAAKAgcAEwIIACYCAAAoAgIALwIqAFsCEAB8AgAAiwIAAJMCFACqAiEAzgICANYCAgDaAgAA3AIFAOgCAgDvAgMA9AIWABYDAAAYAwAAGwMAAB4DAAAgAwEAJAMDACkDIQBMAz4AjAMDAJwDDwC5AwAAuwMHAMUDOAAIBAIADQQAABAEAQATBAAAGQQjAD4EAABEBAAARgQEAFIEGABtBAEAcwQBAHYECACABAAAggQBAIUEBgCNBAAAjwQFAJYECgCiBAEApQQAAKcEAACqBAIAsAQAALIEAAC6BAMAwgQFAMkEAQDMBAAAzwQBANMEBgDfBAAA4QQGAOsEAwDxBAQA9wQAAPkEAQAHBQIACwUDABAFAQATBQAAFgUAABgFAAAbBTAAUQUJAGAFAABiBQMAZwUAAGkFAQBsBQEAbwUCAHMFEgCIBQUAjwUBAJIFAgCWBQAAmAUAAJoFAQCdBQAAnwUBAKIFAACkBQMAqQUdAMkFMAD8BQQACAYMAB8GBAAmBiMATwYAAFEGBQBYBgAAWgYEAGAGAgBkBgQAagYBAG0GAABvBgUAdwYCAHsGAwCABgcAigYBAJQGAQCdBgIAowYKAK8GAACxBgAAtQYDALsGAQC/BgEA"}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPFPPPPPKPGPPPGFPPFFPPPPPPPPPPPPPPFPPPPPPFPPPPPPPPGPPPGKFPFIPPPPPPPPGKPPPPPIPPPPPPPPKPPPPPPPPPPPPPFPPPPPFKPPPPPPPPPPPPPFPPPPPPPPPPPPPPGPPPPPPPGPPPPPPPPPKPPPPPFPPPPPPKKPPPPPPPPPFPPPFPFPPPPPFPPPPPKPPPFPPFPPGGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPGPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNNMNNNNNNNNNNNNNNNNNNNNNONNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNONNMNNOOOONNNNNNNNNOMNNMNNCOONOONMNNOONNNNOOMNNOOONNNNNNNNONNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHCCCFKNNNNNMNNNNNNNNFKKFNNNNNNNNNNNNNNMNMMOMNNNNONNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPGFPFPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNOOOONONNNONNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","ConcatExpr","Correlation","Count","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","DatetimeArgs","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","DurationArgs","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Hist","Implode","IndexColumn","Interpolate","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","Join","JoinOptions","KeepName","Kurtosis","Last","Len","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Min","MinHorizontal","Minus","Mode","Modulus","Multiply","NUnique","Name","Negate","Not","NotEq","NotEqValidity","Nth","NullCount","Operator","Or","Over","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","QCut","Quantile","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Reshape","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","RoundSF","SearchSorted","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Sort","SortBy","SpecialEq","Sqrt","Std","StringExpr","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","TemporalExpr","Ternary","Then","ToPhysical","TopK","TopKBy","Trigonometry","TrueDivide","UdfSchema","Unique","UniqueCounts","UpperBound","UserDefinedFunction","ValueCounts","Var","When","Wildcard","Window","WindowMapping","WindowType","Xor","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","allow_duplicates","base","base","bin_count","breaks","check_sorted","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","BinaryExpr","Boolean","BooleanFunction","Business","Categorical","CategoricalFunction","Cbrt","Ceil","Clip","Coalesce","ConcatExpr","Correlation","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","Diff","DropNans","DropNulls","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","FillNull","FillNullWithStrategy","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Hist","Interpolate","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","Kurtosis","ListExpr","Log","Log1p","LowerBound","MaxHorizontal","MeanHorizontal","MinHorizontal","Mode","Negate","Not","NullCount","PctChange","PeakMax","PeakMin","Pow","PowFunction","QCut","RLE","RLEID","Random","Range","Rank","Reinterpret","RepeatBy","Replace","Reshape","Reverse","RollingExpr","RollingExprBy","Round","RoundSF","SearchSorted","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Sqrt","StringExpr","StructExpr","SumHorizontal","TemporalExpr","ToPhysical","TopK","TopKBy","Trigonometry","Unique","UniqueCounts","UpperBound","ValueCounts","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","check_sorted","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","concat","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","explode","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","null_count","on","optimize","outer_join","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","select","select_seq","semi_join","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","expressions","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","AggregationContext","PartitionedAggregation","PhysicalExpr","PhysicalIoHelper","as_expression","as_partitioned_aggregator","as_stats_evaluator","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","evaluate","evaluate_io","evaluate_on_groups","evaluate_partitioned","expr","finalize","fmt","fmt","from","from","has_window_function","init","init","into","into","is_literal","to_field","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","GroupBy","HConcat","HStack","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","Outer","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_sorted","check_sorted","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_zero","join_nulls","label","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","aggs","apply","args","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1297,"polars_lazy::dsl::AggExpr"],[1304,"polars_lazy::dsl::BooleanFunction"],[1307,"polars_lazy::dsl::Expr"],[1341,"polars_lazy::dsl::FunctionExpr"],[1385,"polars_lazy::dsl::binary"],[1405,"polars_lazy::dsl::cat"],[1406,"polars_lazy::dsl::dt"],[1462,"polars_lazy::dsl::function_expr"],[1584,"polars_lazy::dsl::function_expr::BooleanFunction"],[1587,"polars_lazy::dsl::function_expr::FunctionExpr"],[1631,"polars_lazy::dsl::function_expr::cat"],[1633,"polars_lazy::dsl::function_expr::pow"],[1637,"polars_lazy::dsl::function_expr::rolling"],[1669,"polars_lazy::dsl::function_expr::rolling_by"],[1700,"polars_lazy::dsl::function_expr::trigonometry"],[1742,"polars_lazy::dsl::functions"],[1817,"polars_lazy::dsl::python_udf"],[1862,"polars_lazy::dsl::string"],[1924,"polars_lazy::dsl::udf"],[1930,"polars_lazy::frame"],[2363,"polars_lazy::frame::pivot"],[2365,"polars_lazy::physical_plan"],[2368,"polars_lazy::physical_plan::executors"],[2384,"polars_lazy::physical_plan::expressions"],[2427,"polars_lazy::physical_plan::planner"],[2428,"polars_lazy::prelude"],[3016,"polars_lazy::prelude::DslPlan"],[3068,"polars_lazy::prelude::LiteralValue"],[3071,"dyn_clone::sealed"],[3072,"polars_plan::dsl::meta"],[3073,"polars_plan::dsl::expr"],[3074,"polars_error"],[3075,"core::result"],[3076,"polars_plan::dsl::array"],[3077,"polars_plan::dsl::list"],[3078,"core::convert"],[3079,"polars_plan::dsl::expr_dyn_fn"],[3080,"alloc::sync"],[3081,"polars_core::series"],[3082,"core::option"],[3083,"core::ops::function"],[3084,"core::marker"],[3085,"polars_plan::logical_plan::visitor"],[3086,"polars_plan::dsl::function_expr"],[3087,"polars_core::datatypes::dtype"],[3088,"polars_core::chunked_array::ops::sort::options"],[3089,"core::any"],[3090,"alloc::vec"],[3091,"polars_plan::dsl::binary"],[3092,"core::clone"],[3093,"alloc::string"],[3094,"polars_plan::dsl::udf"],[3095,"polars_plan::dsl::cat"],[3096,"polars_plan::dsl::arity"],[3097,"polars_plan::dsl::function_expr::boolean"],[3098,"polars_plan::dsl::function_expr::cat"],[3099,"polars_plan::dsl::function_expr::pow"],[3100,"polars_plan::dsl::functions::temporal"],[3101,"polars_plan::dsl::options"],[3102,"polars_core::utils"],[3103,"polars_lazy::dsl::eval"],[3104,"polars_time::windows::duration"],[3105,"polars_time::windows::group_by"],[3106,"polars_core::datatypes::time_unit"],[3107,"serde::de"],[3108,"polars_plan::logical_plan"],[3109,"polars_core::series::ops"],[3110,"polars_plan::dsl::dt"],[3111,"polars_lazy::dsl::list"],[3112,"polars_arrow::legacy::kernels::ewm"],[3113,"polars_plan::dsl::struct_"],[3114,"polars_core::chunked_array::ops"],[3115,"core::fmt"],[3116,"polars_plan::logical_plan::apply"],[3117,"polars_plan::dsl::function_expr::struct_"],[3118,"polars_plan::dsl::function_expr::range"],[3119,"polars_plan::dsl::function_expr::list"],[3120,"polars_plan::dsl::function_expr::binary"],[3121,"polars_plan::dsl::function_expr::array"],[3122,"polars_plan::dsl::function_expr::strings"],[3123,"polars_plan::dsl::function_expr::business"],[3124,"polars_plan::dsl::function_expr::datetime"],[3125,"polars_plan::logical_plan::options"],[3126,"polars_core::schema"],[3127,"polars_core::datatypes::field"],[3128,"polars_plan::dsl::function_expr::schema"],[3129,"core::hash"],[3130,"polars_ops::chunked_array::interpolate"],[3131,"polars_ops::series::ops::is_between"],[3132,"polars_plan::dsl::name"],[3133,"polars_plan::logical_plan::lit"],[3134,"polars_plan::dsl::python_udf"],[3135,"polars_utils::idx_vec"],[3136,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3137,"polars_ops::series::ops::rank"],[3138,"polars_time::group_by::dynamic"],[3139,"polars_core::chunked_array::ops::rolling_window"],[3140,"polars_core::datatypes"],[3141,"polars_core::chunked_array"],[3142,"polars_time::chunkedarray::rolling_window"],[3143,"polars_core::chunked_array::ops::search_sorted"],[3144,"serde::ser"],[3145,"polars_core::series::series_trait"],[3146,"polars_plan::dsl::string"],[3147,"polars_ops::chunked_array::list::to_struct"],[3148,"polars_ops::series::ops::business"],[3149,"polars_arrow::legacy::kernels::time"],[3150,"polars_plan::dsl::function_expr::rolling"],[3151,"polars_plan::dsl::function_expr::rolling_by"],[3152,"polars_plan::dsl::function_expr::trigonometry"],[3153,"polars_core::frame"],[3154,"rayon::iter"],[3155,"pyo3::types::any"],[3156,"pyo3::instance"],[3157,"polars_utils::arena"],[3158,"polars_plan::logical_plan::alp"],[3159,"polars_plan::logical_plan::aexpr"],[3160,"polars_lazy::scan::ndjson"],[3161,"polars_plan::logical_plan::anonymous_scan"],[3162,"polars_lazy::scan::anonymous_scan"],[3163,"polars_utils::index"],[3164,"polars_lazy::frame::exitable"],[3165,"polars_utils::aliases"],[3166,"polars_lazy::scan::csv"],[3167,"polars_lazy::scan::ipc"],[3168,"polars_lazy::scan::parquet"],[3169,"polars_plan::frame::opt_state"],[3170,"polars_lazy::scan::file_list_reader"],[3171,"polars_io::cloud::options"],[3172,"polars_ops::frame::join::args"],[3173,"core::iter::traits::collect"],[3174,"polars_core::frame::explode"],[3175,"std::path"],[3176,"polars_io::options"],[3177,"polars_io::csv::write::options"],[3178,"polars_io::ipc::write"],[3179,"polars_io::json"],[3180,"polars_io::parquet::write::options"],[3181,"smartstring::alias"],[3182,"core::num::nonzero"],[3183,"polars_io::csv::read::options"],[3184,"polars_lazy::physical_plan::executors::executor"],[3185,"polars_io::predicates"],[3186,"polars_core::frame::group_by::proxy"],[3187,"alloc::boxed"],[3188,"chrono_tz::timezones"],[3189,"core::cmp"],[3190,"polars_core::datatypes::any_value"],[3191,"chrono::naive::datetime"],[3192,"polars_plan::dsl::functions::selectors"],[3193,"polars_plan::dsl::functions::horizontal"],[3194,"polars_plan::dsl::functions::arity"],[3195,"polars_plan::dsl"],[3196,"polars_plan::dsl::functions::range"],[3197,"polars_plan::dsl::functions::index"],[3198,"polars_plan::dsl::functions::coerce"],[3199,"polars_plan::dsl::functions::syntactic_sugar"],[3200,"polars_plan::dsl::functions::business"],[3201,"polars_plan::dsl::functions::concat"],[3202,"polars_plan::dsl::functions::correlation"],[3203,"polars_plan::dsl::functions::repeat"],[3204,"polars_lazy::physical_plan::planner::lp"]],"i":[0,0,0,0,0,0,27,5,0,34,5,52,52,38,5,52,52,27,27,27,27,0,27,27,27,5,27,0,27,0,27,5,27,0,0,54,27,0,0,27,27,5,5,27,27,34,27,27,27,27,27,27,27,0,27,38,27,27,51,5,0,27,38,38,27,27,27,27,5,0,27,5,61,0,0,0,27,0,0,27,27,5,34,27,38,27,5,0,0,27,5,27,54,53,0,61,38,38,27,27,34,5,27,0,52,52,52,52,52,52,52,52,52,52,52,52,61,0,5,27,34,5,27,0,0,5,27,27,38,38,27,38,38,34,27,34,27,34,0,34,27,38,27,38,38,34,51,27,52,38,38,5,27,0,38,60,27,27,27,38,27,0,27,34,27,27,27,27,27,27,5,0,27,27,27,27,60,0,27,27,27,27,27,5,0,0,27,27,27,27,27,27,5,5,5,0,54,34,27,0,27,0,5,34,27,27,5,0,27,27,27,27,38,0,27,27,27,0,27,34,0,5,5,0,0,38,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,4,4,4,4,5,5,5,5,0,9,10,5,0,59,55,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,59,5,32,34,0,0,5,0,5,0,46,9,100,10,4,106,78,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,46,9,100,10,4,106,78,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,5,5,0,58,42,44,32,45,44,0,5,0,5,5,5,5,5,5,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,64,64,5,0,0,0,0,55,56,57,5,17,17,17,55,56,58,59,60,61,5,46,9,100,10,4,106,78,47,48,49,50,34,5,51,38,17,17,52,53,54,27,55,56,57,58,59,60,61,44,46,9,100,10,4,106,78,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,34,5,51,38,17,17,17,52,53,54,27,57,58,59,60,61,10,5,5,5,46,9,100,10,4,106,78,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,5,10,5,0,5,0,0,0,5,34,5,5,51,38,17,17,52,53,54,27,57,58,59,60,61,5,5,5,5,51,51,51,38,38,38,52,52,52,53,53,53,54,54,54,57,57,57,58,58,58,59,59,59,60,60,60,61,61,61,76,76,5,5,5,5,58,5,5,5,5,5,78,78,5,5,5,5,0,10,5,5,17,5,5,32,45,42,82,5,5,51,38,38,17,52,52,53,53,54,54,27,27,55,56,57,58,59,60,61,44,0,59,58,0,5,46,9,100,10,4,106,78,47,48,49,50,34,5,5,5,5,5,5,5,5,5,5,5,5,5,5,51,38,17,17,17,17,17,17,17,17,17,17,17,17,52,53,54,27,27,27,27,27,55,56,57,58,59,60,60,61,44,17,44,0,5,0,10,5,10,5,9,10,5,46,70,15,100,32,82,5,5,4,34,5,5,51,38,52,53,54,27,57,58,59,60,61,10,5,5,55,56,5,0,46,9,100,10,4,106,78,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,44,0,0,5,46,9,100,10,4,106,78,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,5,103,10,4,5,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,78,106,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,106,5,0,5,100,100,17,17,5,17,106,17,5,0,5,5,0,100,5,100,100,100,100,0,9,10,5,0,0,10,5,0,0,9,10,5,5,55,56,56,0,9,10,5,0,57,55,56,5,55,5,9,10,5,5,44,5,5,56,5,5,5,100,100,17,55,56,44,5,5,0,5,0,5,44,5,48,50,4,5,5,5,5,5,0,5,4,5,106,106,5,0,5,5,0,5,5,5,0,5,5,78,0,5,5,100,5,44,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,59,59,17,5,10,10,5,5,55,56,34,5,51,38,17,17,17,52,53,54,27,57,58,59,60,61,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,58,5,0,5,5,106,106,0,9,10,5,0,17,10,5,5,5,0,47,49,0,55,56,55,10,5,9,106,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,5,100,5,38,52,53,54,27,9,10,106,5,5,46,9,100,10,4,106,78,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,46,9,100,10,4,106,78,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,100,100,5,100,32,46,9,100,10,4,106,78,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,46,9,100,10,4,106,78,47,48,49,50,34,5,51,38,17,52,53,54,27,55,56,57,58,59,60,61,44,56,0,48,50,57,55,55,56,100,56,55,56,55,56,55,56,56,55,56,55,56,100,100,55,56,55,55,56,55,5,55,204,205,206,204,205,206,204,207,208,209,210,211,212,212,213,214,210,215,216,217,218,219,215,214,217,211,220,219,221,220,220,221,213,217,218,219,219,218,216,214,221,210,212,216,222,223,224,225,226,227,228,229,230,227,231,231,225,226,222,225,226,222,226,222,232,233,228,234,235,223,235,236,237,238,239,240,222,241,242,243,244,245,246,236,234,240,247,248,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,27,52,52,52,52,27,27,27,27,27,27,27,27,27,0,27,27,0,54,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,54,53,27,27,27,52,52,52,52,52,52,52,52,52,52,52,52,27,27,27,27,27,27,27,27,27,27,52,27,27,27,27,27,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,54,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,207,208,209,222,223,224,225,226,227,228,229,230,227,231,231,225,226,222,225,226,222,226,222,232,233,228,234,235,223,235,236,237,238,239,240,222,241,242,243,244,245,246,236,234,240,247,248,0,53,54,54,0,54,127,127,127,127,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,128,128,128,128,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,0,0,0,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,56,0,0,0,0,0,55,56,0,0,0,0,0,0,0,0,0,55,56,56,0,55,56,55,56,0,0,0,0,0,0,0,55,56,0,0,0,0,55,56,55,56,55,0,0,0,0,136,109,136,109,136,109,136,136,136,109,136,109,136,136,109,136,136,136,136,136,136,109,136,136,109,109,136,109,136,109,136,136,109,136,109,136,109,109,136,109,136,0,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,133,144,148,153,154,146,155,156,133,133,144,145,146,133,133,144,146,145,151,133,144,148,153,154,146,155,156,145,151,133,144,148,153,154,146,155,156,133,133,154,155,151,133,133,151,133,144,148,153,154,146,155,156,151,133,144,148,153,154,146,155,156,157,157,154,155,145,133,133,166,156,166,156,157,157,153,133,133,133,148,154,155,156,145,151,133,144,148,153,154,146,155,156,145,151,133,144,148,153,154,146,155,156,133,133,133,133,145,151,151,133,133,144,148,153,154,146,155,156,133,166,156,133,133,166,156,151,133,151,166,156,133,133,133,145,157,157,153,157,153,146,133,156,145,145,151,133,133,133,144,148,153,154,146,155,156,133,157,157,153,155,133,133,133,144,155,145,148,145,151,133,144,148,153,154,146,155,156,133,145,151,133,144,148,153,154,146,155,156,157,157,133,133,145,133,165,133,133,145,133,133,144,146,155,133,133,133,133,133,133,154,133,133,157,153,146,148,154,155,148,145,153,146,153,146,133,145,133,133,155,157,153,146,157,153,146,0,166,156,133,166,156,133,157,153,146,154,155,133,133,145,133,166,156,157,153,146,148,154,155,146,133,133,133,133,133,133,146,148,133,133,133,133,133,166,156,133,133,133,133,133,133,148,133,166,156,133,133,133,166,156,145,133,133,144,133,133,133,151,133,144,148,153,154,146,155,156,133,145,151,133,144,148,153,154,146,155,156,145,151,133,144,148,153,154,146,155,156,166,156,145,151,133,144,148,153,154,146,155,156,133,133,133,155,145,133,145,151,133,144,148,153,154,146,155,156,145,146,153,133,133,133,133,133,153,133,153,153,153,153,153,153,153,146,153,146,153,153,157,153,153,146,146,153,133,157,153,146,157,153,146,133,133,153,153,157,153,146,133,157,133,153,153,146,146,153,146,153,153,133,153,153,133,133,153,153,133,133,0,0,0,0,0,0,0,186,186,186,186,186,185,186,186,186,186,186,186,186,186,0,0,0,0,187,187,187,190,190,192,190,192,190,192,190,192,190,192,187,190,187,188,190,188,187,192,190,192,190,190,192,190,192,187,187,190,192,190,192,190,192,190,192,0,0,0,0,162,162,196,197,197,72,162,0,72,197,197,196,72,0,0,197,0,72,72,197,197,197,72,72,72,162,197,197,197,197,197,0,72,0,0,0,0,162,0,0,181,181,72,196,196,0,0,197,181,181,196,162,0,0,72,197,0,0,0,72,72,162,197,72,72,72,197,197,197,197,197,197,197,72,0,161,113,67,174,175,176,164,162,181,177,196,112,197,198,135,72,67,67,67,147,147,147,147,174,161,113,67,172,174,175,176,164,162,181,201,177,196,112,197,198,135,72,161,113,67,172,174,175,176,164,162,181,201,177,196,112,197,198,135,72,161,113,161,113,67,174,175,176,164,162,181,177,196,112,197,198,135,72,161,113,67,174,175,176,164,162,181,177,196,112,197,198,135,72,161,113,67,164,67,175,177,72,177,67,67,161,113,174,175,176,164,181,177,112,198,135,72,161,113,67,172,174,175,176,164,162,181,201,177,196,112,197,198,135,72,161,113,67,172,174,175,176,164,162,181,201,177,196,112,197,198,135,72,112,72,72,161,113,67,174,175,176,164,162,181,177,196,112,197,198,135,72,135,72,161,113,67,172,174,175,176,164,162,181,201,177,196,112,197,198,135,72,161,113,67,174,175,176,164,162,181,177,196,112,197,198,135,161,161,161,113,113,113,67,67,67,174,174,174,175,175,175,176,176,176,164,164,164,162,162,162,181,181,181,177,177,177,198,198,198,135,135,135,161,161,113,67,67,174,147,175,176,164,162,162,181,181,177,196,112,197,198,135,198,161,113,67,172,174,175,176,164,164,162,181,201,177,196,112,197,198,135,72,135,197,200,161,113,67,174,175,176,164,162,181,177,196,112,197,198,135,164,174,161,174,161,113,161,113,67,172,174,175,176,164,162,181,201,177,196,112,197,198,135,72,161,113,67,172,174,175,176,164,162,181,201,177,196,112,197,198,135,72,162,67,67,67,164,161,107,201,197,174,175,176,177,197,112,67,67,67,172,67,181,67,67,164,161,113,172,135,67,67,67,161,113,172,135,200,177,147,147,172,161,113,67,174,175,176,164,162,181,177,196,112,197,198,135,72,174,198,164,161,177,164,164,72,197,161,113,67,174,175,176,164,162,181,177,196,112,197,198,135,72,67,162,181,135,67,67,67,67,161,113,67,172,174,175,176,164,162,181,201,177,196,112,197,197,198,135,72,161,113,67,172,174,175,176,164,162,181,201,177,196,112,197,198,135,72,161,113,67,172,174,175,176,164,162,181,201,177,196,112,197,198,135,72,164,161,113,67,172,174,175,176,164,162,181,201,177,196,112,197,198,135,72,67,67,164,172,249,249,250,251,252,253,254,255,256,257,257,258,252,259,252,255,249,256,260,251,261,258,253,262,263,263,250,264,249,263,261,249,261,265,255,249,263,256,260,264,254,257,262,259,257,254,263,257,254,254,251,251,266,266,266],"f":"``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}00000000000000000000{hj}{{hj}{{n{jl}}}}00{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}`{jAb}{{{b{D`}}}{{b{Db}}}}{{{b{Dd}}}{{b{j}}}}{{{Df{j}}}j}{{{b{A`}}}j}{{j{Bh{Dh}}}j}`{jDj}{{jDlj}j}{{{b{c}}}{{b{e}}}{}{}}000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000000000000000000000{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Dn}{{Aj{{Ah{e}}}}}}{{jj{E`{Af}}{Df{Eb}}}j}`{{{b{Ed}}{b{A`}}}{{n{Efl}}}}{{Eh{Df{j}}}{{n{jl}}}}{{{b{D`}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{Ej}}BdBd}{{n{Bdl}}}}{{Eh{Df{j}}}j}{{jCj}j}0`{jEl}{jj}0{{jjj}j}{{jj}j}0{{{b{En}}}En}{{{b{F`}}}F`}{{{b{Fb}}}Fb}{{{b{Fd}}}Fd}{{{b{Dd}}}Dd}{{{b{j}}}j}{{{b{Ff}}}Ff}{{{b{Dl}}}Dl}{{{b{{Bb{c}}}}}{{Bb{c}}}Dn}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Cf}}}Cf}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Eh}}}Eh}{{{b{c}}{b{C`e}}}f{}{}}00000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Gl{Ef}}}}{{eAf}{{n{jl}}}{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjGn}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}2{{H`jHbAf}j}0{{j{Df{Hd}}{Bh{{Df{Ef}}}}AfAf}j}{{jjHfHh{Bh{Hj}}{Bh{Ef}}}j}{Fnj}11```{{}j}{{}{{Bb{{B`{Hl}}}}}}{{}{{Bb{{B`{An}}}}}}{{}{{Bb{{B`{Ej}}}}}}{{}Fn}{{}G`}{{}Gd}{{}Gf}{{}Gh}{{}Gj}{jj}{Hb{{b{c}}}{}}000000000000000{{{b{{Bb{c}}}}}b{}}111111111111{Hb{{b{C`c}}}{}}000000000000000000000000000{c{{n{Dd}}}Hn}{c{{n{j}}}Hn}{c{{n{Ff}}}Hn}{c{{n{Dl}}}Hn}{c{{n{{Bb{Bd}}}}}Hn}{c{{n{{Bb{{B`{I`}}}}}}}Hn}{c{{n{{Bb{{B`{D`}}}}}}}Hn}{c{{n{Fh}}}Hn}{c{{n{Fj}}}Hn}{c{{n{Fl}}}Hn}{c{{n{Cf}}}Hn}{c{{n{Gb}}}Hn}{c{{n{Gd}}}Hn}{c{{n{Gf}}}Hn}{c{{n{Gh}}}Hn}{c{{n{Gj}}}Hn}{{AdChIb}j}{{jChIb}j}{{jj}}{{jc}j{{Al{j}}}}{Hbf}000000000000000000000000000{jj}{Adj}1`{jId}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{G`j}{{jHdAf}j}{{{b{Dd}}{b{Dd}}}Af}9{{{b{j}}{b{j}}}Af}{{{b{Ff}}{b{Ff}}}Af}{{{b{Dl}}{b{Dl}}}Af}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfIf}{{{b{Fh}}{b{Fh}}}Af}{{{b{Fj}}{b{Fj}}}Af}{{{b{Fl}}{b{Fl}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Gd}}{b{Gd}}}Af}{{{b{Gf}}{b{Gf}}}Af}{{{b{Gh}}{b{Gh}}}Af}{{{b{Gj}}{b{Gj}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000{{IhjAf}j}0{{jIj}j}{{jjHfAf}j}11`{{jc}j{{Gl{Ef}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{IlCh}j}{{Il{b{A`}}}j}::{{jIn}j};{{}j}{Adj}66{{}{{Bb{{B`{An}}}}}}7{{jj}j}{{{b{D`}}{b{C`J`}}}{{n{fJb}}}}{{{b{Ej}}{b{C`J`}}}{{n{fJb}}}}{{{b{Ed}}{b{C`J`}}}{{n{fJb}}}}{{{b{Jd}}{b{C`J`}}}{{n{fJb}}}}{{{b{j}}{b{C`J`}}}{{n{fJb}}}}0{{{b{Ff}}{b{C`J`}}}{{n{fJb}}}}{{{b{Dl}}{b{C`J`}}}{{n{fJb}}}}0{{{b{{Bb{c}}}}{b{C`J`}}}{{n{fJb}}}{}}{{{b{Fh}}{b{C`J`}}}{{n{fJb}}}}0{{{b{Fj}}{b{C`J`}}}{{n{fJb}}}}0{{{b{Fl}}{b{C`J`}}}{{n{fJb}}}}0{{{b{Cf}}{b{C`J`}}}{{n{fJb}}}}0{{{b{Fn}}{b{C`J`}}}{{n{fJb}}}}{{{b{G`}}{b{C`J`}}}{{n{fJb}}}}{{{b{Gb}}{b{C`J`}}}{{n{fJb}}}}{{{b{Gd}}{b{C`J`}}}{{n{fJb}}}}{{{b{Gf}}{b{C`J`}}}{{n{fJb}}}}{{{b{Gh}}{b{C`J`}}}{{n{fJb}}}}{{{b{Gj}}{b{C`J`}}}{{n{fJb}}}}{{{b{Eh}}{b{C`J`}}}{{n{fJb}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dh}}}j}{cc{}}00000000000{Jfj}1{Jhj}{Jjj}{Hdj}{Jlj}{{{b{A`}}}j}{Dhj}{Jnj}{Ebj}{Gnj}{Ddj}{Afj}{Chj}=={K`{{Bb{{B`{D`}}}}}}>{Cf{{Bb{{B`{D`}}}}}}{Fh{{Bb{{B`{D`}}}}}}{Kb{{Bb{{B`{D`}}}}}}{Fj{{Bb{{B`{D`}}}}}}{Kd{{Bb{{B`{D`}}}}}}{Kf{{Bb{{B`{D`}}}}}}{Kh{{Bb{{B`{D`}}}}}}{Kj{{Bb{{B`{D`}}}}}}{Kl{{Bb{{B`{D`}}}}}}{Kn{{Bb{{B`{D`}}}}}}{cc{}}00{KjCf}{KfCf}{FjCf}3{FhCf}44444{GjGh}555{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}L`}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jHbHb}j}{{AbjAf}j}43{Elj}{{{b{Hl}}{b{Lb}}Ld{b{Lf}}{b{Lf}}}{{Bh{Lf}}}}{{{b{An}}{b{Lb}}Ld{b{{Ah{Lf}}}}}Lf}{{{b{Lh}}}Hb}{{{b{D`}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{Jd}}{b{Lb}}}{{n{{B`{Lb}}l}}}}99{{{b{h}}}Af}{{{b{Dd}}{b{C`c}}}fLj}{{jDhDhDhDh}j}{{{b{j}}{b{C`c}}}fLj}{{{b{Ff}}{b{C`c}}}fLj}{{{b{Dl}}{b{C`c}}}fLj}{{{b{Fh}}{b{C`c}}}fLj}{{{b{Fj}}{b{C`c}}}fLj}{{{b{Fl}}{b{C`c}}}fLj}{{{b{Cf}}{b{C`c}}}fLj}{{{b{Gb}}{b{C`c}}}fLj}{{{b{Gd}}{b{C`c}}}fLj}{{{b{Gf}}{b{C`c}}}fLj}{{{b{Gh}}{b{C`c}}}fLj}{{{b{Gj}}{b{C`c}}}fLj}{{Adj}j}{{j{Bh{Hb}}}j}{{j{Bh{j}}{Bh{Hb}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}Hb}000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jLl}j}{ce{}{}}000000000000000000000000000{{{b{j}}}}{LnAd}{AdAd}{h{{n{{`{M`}}l}}}}{{jccMb}j{{Al{j}}}}{{{b{h}}}Af}<<<{{jc}j{{Al{j}}}}========11={{AbjAf}j}{{AdjAf}j}{Ilj}{Mdj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMf}{{jHd}j}3;;3;;{{Mdc}j{{Bj{{b{A`}}}{{Bf{{n{Efl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{Lh}}{Bh{{b{Ef}}}}}{{n{Lfl}}}}{{{b{Lh}}c}{{n{Lfl}}}{{Mh{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{Cj}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{Cj}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Lf}}}{{Bf{Lf}}}}BlBn}}{{Md{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Lf}}}}}{{Bf{Lf}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{Lh}}}{{n{Lfl}}}}{{jMjAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMd}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Lf}}}}}Lh}{c{{Bb{c}}}{}}{{jjj}Fn}{{}G`}{{{b{A`}}{Df{Lf}}{Bb{{B`{An}}}}c}EhD`}{{{b{j}}{b{C`{Ml{{b{j}}}}}}}f}{{j{b{C`{Ml{j}}}}}f}=={Chj}>`8{{F`c}j{{Al{j}}}}{{Fdc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{{jeGj}j{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjGn}j}{{}j}{h{{Df{j}}}}{{jc}j{{Al{j}}}}{{Md{b{A`}}}j}05`{{j{Df{Hd}}{Bh{{Df{Ef}}}}AfAfAf}j}{{jHb{Bh{{Df{Ef}}}}AfAfAf}j}{{{b{A`}}jMn}j}{{jjMn}j}9{{jN`{Bh{Dh}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Il{Df{Ef}}}j}{{cj}j{{Al{j}}}};{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{{b{Lh}}{Bh{Cj}}}{{n{Lfl}}}}{{j{b{{Ah{Ch}}}}}j}`{Abj}{Adj}{jj}00{{jNb}j}{{jjGb}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nd}j}{{jHbc}j{{Cd{{b{C`{Nh{Nf}}}}}{{Bf{{Bh{Hd}}}}}}BlBnNj}}{{jNd}j}{{jjNl}j}101010{{jMnHdNd}j}{{jjMnHdNl}j}{{jHbAf}j}434343{{{b{h}}}{{Df{{B`{A`}}}}}}{{jJj}j}{{jEb}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dh}}}j}{{AdjAfAf{Bh{Dh}}}j}01{{jcNn}j{{Al{j}}}}``{{{b{Dd}}c}nO`}{{{b{j}}c}nO`}{{{b{Ff}}c}nO`}{{{b{Dl}}c}nO`}{{{b{{Bb{{B`{D`}}}}}}c}nO`}{{{b{{Bb{{B`{I`}}}}}}c}nO`}{{{b{{Bb{Bd}}}}c}nO`}{{{b{Fh}}c}nO`}{{{b{Fj}}c}nO`}{{{b{Fl}}c}nO`}{{{b{Cf}}c}nO`}{{{b{Gb}}c}nO`}{{{b{Gd}}c}nO`}{{{b{Gf}}c}nO`}{{{b{Gh}}c}nO`}{{{b{Gj}}c}nO`}{{Adc}j{{Al{j}}}}0{{jOb}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dh}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{{jjGnAf}j}8{{AbGn}j}{{AdGn}j}{{jGn}j}{jOd}`{{jCj}j}`{jIl}{{jj}}{{Md{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{Hb}}}j}44{{jjj}j}{{Enc}F`{{Al{j}}}}{{Fbc}Fd{{Al{j}}}}{{jjHfHh}j}```{{AdHb}j}{{{b{j}}{b{Lb}}Ld}{{n{Lfl}}}}<{Mdj}{{{b{c}}}e{}{}}00000000000000000000<{{{b{Lh}}}{{n{Lfl}}}}{{{b{c}}}Ef{}}00000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOf{Bh{{B`{Bj}}}}Hb}j}5{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Dn}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}0000000000000000000000000000000000000000000000000000000{{{b{Lh}}c}{{n{Lfl}}}{{Mh{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{Lh}}c}{{n{Lfl}}}{{Mh{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{Lh}}c}{{n{Lfl}}}{{Mh{{b{Lf}}}{{Bf{{n{Lfl}}}}}}}}{{{b{D`}}{b{C`{Df{Gn}}}}}{{n{fl}}}}{{{b{c}}}Oh{}}000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAf}j}{{AbGn}j}{{AdGn}j}{{jGn}j}{ce{}{}}000000000000000000000000000`{cEn{{Al{j}}}}{{F`c}Fb{{Al{j}}}}{{Fdc}Fb{{Al{j}}}}`{{Fnj}Fn}0{{G`j}G`}{{{b{Lh}}Cj}{{n{Lfl}}}}{{G`jjj}G`}{{Fnjjj}Fn}1434334343{{{b{Lh}}{Bh{Cj}}}{{n{Lfl}}}}{{{b{Lh}}}{{n{Lfl}}}}65{{FnHj}Fn}{{Fn{Bh{Ef}}}Fn}78{{jc}j{{Al{j}}}}``````````````````````````````````````````````````````````````````````````````````````````{{DjAf}j}{Djj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Djj}j}{Hb{{b{c}}}{}}{Hb{{b{C`c}}}{}}{Hbf}3{cc{}}87{{}Hb}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}2``{{Idj{E`{Af}}{Df{Eb}}Oj}j}{Idj}<;{{IdHj}j}1{{IdjHj}j}{{IdEf}j}333<;:393873333333333{{Idj}j}44{{Id{Bh{Ef}}jOl}j}{{Idjc}j{{Aj{A`}}}}6{{Id{b{A`}}}j}7607777777{{IdjEf}j};;:<8878````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{On}}}On}{{{b{c}}{b{C`e}}}f{}{}}{Hb{{b{c}}}{}}{Hb{{b{C`c}}}{}}{c{{n{On}}}Hn}{Hbf}{{{b{On}}{b{On}}}Af}{{{b{On}}{b{C`J`}}}{{n{fJb}}}}0{cc{}}{{{b{On}}{b{C`c}}}fLj}{{}Hb}{ce{}{}}{{{b{On}}c}nO`}{{{b{c}}}e{}{}}{{{b{c}}}Ef{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@`}}}A@`}{{{b{c}}{b{C`e}}}f{}{}}{Hb{{b{c}}}{}}{Hb{{b{C`c}}}{}}{c{{n{A@`}}}Hn}{Hbf}{{{b{A@`}}{b{A@`}}}Af}{{{b{A@`}}{b{C`J`}}}{{n{fJb}}}}0{cc{}}{{{b{A@`}}{b{C`c}}}fLj}{{}Hb}{ce{}{}}{{{b{A@`}}c}nO`}{{{b{c}}}e{}{}}{{{b{c}}}Ef{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@b}}}A@b}{{{b{c}}{b{C`e}}}f{}{}}{Hb{{b{c}}}{}}{Hb{{b{C`c}}}{}}{c{{n{A@b}}}Hn}{Hbf}{{{b{A@b}}{b{A@b}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@b}}{b{C`J`}}}{{n{fJb}}}}0{cc{}}{{{b{A@b}}{b{C`c}}}fLj}{{}Hb}{ce{}{}}{{{b{A@b}}c}nO`}{{{b{c}}}e{}{}}{{{b{c}}}Ef{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Df{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@f{{Df{A@d}}}}}{{A@l{}{{A@h{A@j}}}}}}{cj{{Gl{Ef}}}}{{cA@n}{{A@f{A@j}}}{{Aj{{Ah{A@j}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjGn}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}{{jjHfHh{Bh{Hj}}{Bh{Ef}}}j}0{Fnj}11``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{G`j}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2?{{{b{A`}}jMn}j}>{{cj}j{{Al{j}}}}{{jjGb}j}0``{{jjGnAf}j}4{{jjHfHh}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Mj}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AA`}}A@d}{{n{A@dl}}}}{{{b{AA`}}}AA`}{{{b{c}}{b{C`e}}}f{}{}}{Hb{{b{c}}}{}}0{Hb{{b{C`c}}}{}}0{c{{n{AA`}}}Hn}{Hbf}0{{{b{AA`}}{b{AA`}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AA`}}{b{C`J`}}}{{n{fJb}}}}{cc{}}{{{AAd{AAb}}}AA`}1{{{b{Mj}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}Hb}0{ce{}{}}0{{{AAd{AAb}}{Bh{Cj}}Af}Mj}{{{b{AA`}}c}nO`}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Mj}}{b{C`{Df{Gn}}}}}{{n{fl}}}}{{{b{c}}}Oh{}}066`{{OdAf}j}{Odj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Od{b{A`}}Af}j}{{OdjAf}j}{{Odj}j}1{Hb{{b{c}}}{}}{Hb{{b{C`c}}}{}}{Hbf}38{{OdjHb}j}4{{Od{b{A`}}}{{n{jl}}}}65{cc{}}6<;{{}Hb}{ce{}{}}{{Od{Bh{Cj}}{Bh{Hb}}}j}9>>{{OdHbAAf}j}0{{OdjjAf}j}0{{OdjjAfCh}j}{Odj}{{Odjj}j}>::>:>>>>>>{{OdCjGdj}j}?{{OdGd}j}{{Od{Bh{Hj}}{Bh{Ef}}Gdj}j}{{OdHb}j}{{OdjAf}j}6366{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}={{Odj}j}````````````````````{{{b{c}}d}f{}}00000000{{A@jc}{{A@f{A@d}}}{{Bj{AAh{b{C`{AAl{AAj}}}}{b{C`{AAl{AAn}}}}}{{Bf{{A@f{f}}}}}}}}{{A@jAf}A@j}{{AB`c}A@j{{Aj{{Ah{j}}}}}}{{ABbAf}ABb}{{{b{ABd}}}Af}{{{B`{ABf}}ABh}{{A@f{A@j}}}}{{A@jA@jcc}A@j{{Al{j}}}}{{AB`cABj}A@j{{Bj{A@d}{{Bf{{A@f{A@d}}}}}}BlBn}}{{{b{ABd}}}{{b{Db}}}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{A@jABlcCn}A@j{{Aj{{Ah{j}}}}}}{A@jA@j}``{{{b{ABn}}}f}{{A@j{AC`{{b{A`}}Cj}}Af}A@j}{{A@jCjAf}A@j}{{{b{ABn}}}ABn}{{{b{A@j}}}A@j}{{{b{AB`}}}AB`}{{{b{ABh}}}ABh}{{{b{ACb}}}ACb}{{{b{ACd}}}ACd}{{{b{ABd}}}ABd}{{{b{ACf}}}ACf}{{{b{ACh}}}ACh}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{ACj}}}{{Bh{{b{ACl}}}}}}0``{{ABbACn}ABb}{A@j{{A@f{A@d}}}}{A@j{{A@f{ABn}}}}````{{{b{ACj}}{Df{A@j}}}{{A@f{A@j}}}}0{{{b{ACb}}{Df{A@j}}}{{A@f{A@j}}}}{A@jA@j}{{A@jA@j}A@j}{{}A@j}{{}ABh}{{}ACd}{{}ACf}{{}ACh}{Hb{{b{c}}}{}}000000000{Hb{{b{C`c}}}{}}000000000{{{b{A@j}}}{{A@f{Ef}}}}000{Hbf}0{{{b{C`ABn}}}f}{{A@je}A@j{{Aj{A`}}}{{AD`{}{{A@h{c}}}}}}22222222{{A@j{Bh{{Df{j}}}}}A@j}``{{{b{A@j}}Af}{{A@f{Ef}}}}{{A@je}A@j{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}``{{{b{ABn}}}{{Bh{{A@f{A@d}}}}}}{{A@jHb}{{A@f{A@d}}}}{{{b{ABn}}}{{A@f{A@d}}}}``{{A@jc}A@j{{Al{j}}}}0{{A@jj}A@j}{ABbA@j}{ACj{{A@f{A@j}}}}0{ACb{{A@f{A@j}}}}10{ABd{{A@f{A@j}}}}{A@jA@j}{{{b{ACh}}{b{C`J`}}}{{n{fJb}}}}{{ABbAf}ABb}{cc{}}0{AB`A@j}{I`A@j}22222222{{{b{A@j}}}ACh}{{{b{ACj}}}Af}0{{{b{ACb}}}Af}`{{A@je}AB`{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{{A@jjcADb}AB`{{Aj{{Ah{j}}}}}}1{{AB`{Bh{Hb}}}A@j}`{{ABbADd}ABb}`{{}Hb}000000000{{A@jA@jcc}A@j{{Al{j}}}}{ce{}{}}000000000{{{b{ACj}}}{{A@f{{Bh{ADf}}}}}}0{{A@jA@jccADh}A@j{{Aj{{Ah{j}}}}}}{A@jABb}{{ABbAf}ABb}{A@jA@j}{ADjA@j}17{{ABbc}ABb{{Aj{{Ah{j}}}}}}{{A@jABl}A@j}``{{ABdAf}ABd}`{{A@jcADl{Bh{{B`{Jd}}}}{Bh{{b{A`}}}}}A@j{{Bj{A@d}{{Bf{{A@f{A@d}}}}}}BlBn}}{{A@jAA`ADl{Bh{ABj}}Af}A@j}666{{A@jADn}A@j}`{{A@jA@j{b{A`}}}{{A@f{A@j}}}}8{{{b{ACj}}}{{Bh{Hb}}}}{{{b{ACb}}}{{Bh{Hb}}}}{{{b{ABd}}}{{Bh{Hb}}}}````={cACb{{Aj{AE`}}}}{cABd{{Aj{AE`}}}}{{{B`{{Ah{AEb}}}}}ACb}{{{B`{{Ah{AEb}}}}}ABd}?={{A@j{b{C`{AAl{AAj}}}}{b{C`{AAl{AAn}}}}}{{A@f{AAh}}}}{{A@jA@jcc}A@j{{Al{j}}}}`{{{b{ACj}}}{{b{AE`}}}}{{{b{ACb}}}{{b{AE`}}}}{{{b{ABd}}}{{b{AE`}}}}{{{b{ACj}}}{{b{{Ah{AEb}}}}}}{{{b{ACb}}}{{b{{Ah{AEb}}}}}}{{{b{ABd}}}{{b{{Ah{AEb}}}}}}```{A@j{{A@f{{AEd{A@dA@d}}}}}}``{{A@jjMn}A@j}{{{b{ACj}}}Af}{{{b{ACb}}}Af}{{{b{ABd}}}Af}``{{A@jei}A@j{{Aj{A`}}}{{AD`{}{{A@h{c}}}}}{{Aj{A`}}}{{AD`{}{{A@h{g}}}}}}{A@jA@j}{{ABbc}ABb{{Aj{{Ah{j}}}}}}{{A@jjcNb}AB`{{Aj{{Ah{j}}}}}}``{{{b{ACj}}}{{Bh{{b{AEf}}}}}}{{{b{ACb}}}{{Bh{{b{AEf}}}}}}{{{b{ABd}}}{{Bh{{b{AEf}}}}}}```{{{b{ABd}}AEh}{{A@f{A@d}}}}{{LbAEjAf}A@j}{{cACd}{{A@f{A@j}}}{{Aj{AE`}}}}{{{B`{{Ah{AEb}}}}ACd}{{A@f{A@j}}}}{{cACf}{{A@f{A@j}}}{{Aj{AE`}}}}{{{B`{{Ah{AEb}}}}ACf}{{A@f{A@j}}}}{{{b{A@j}}}{{A@f{ABj}}}}{{{b{ABd}}{Bh{Hb}}}{{A@f{ABj}}}}`{{A@jc}A@j{{Aj{{Ah{j}}}}}}0{{A@jA@jcc}A@j{{Al{j}}}}{{A@jc}A@j{{Al{j}}}}{{A@jce}A@j{{Al{j}}}{{Al{j}}}}``{{A@jAEbAEl}{{A@f{f}}}}{{A@jAEbAEn}{{A@f{f}}}}{{A@jEf{Bh{ACl}}AEn}{{A@f{f}}}}{{A@jAEbAF`}{{A@f{f}}}}{{A@jAEbAFb}{{A@f{f}}}}{{A@jEf{Bh{ACl}}AFb}{{A@f{f}}}}`{{A@jChABl}A@j}``{{A@jcCn}A@j{{Gl{AFd}}}}{{A@jcCn}A@j{{Aj{{Ah{j}}}}}}{{A@jGn}A@j}``{{ABbc}ABb{{Aj{A`}}}}{A@jA@j}{{A@jABl}A@j}{{AB`{Bh{Hb}}}A@j}{A@j{{A@f{AFf}}}}0{{{b{A@j}}Af}{{A@f{Ef}}}}{{{b{c}}}e{}{}}00000000{{A@jABlcCn}A@j{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}Oh{}}000000000{{A@j{Bh{{Df{Ef}}}}AFh}A@j}0{{A@je}A@j{{Aj{A`}}}{{AD`{}{{A@h{c}}}}}}`{{ABbAFj}ABb}={ce{}{}}000000000{{ABbA@j}ABb}{{ABd{Bh{AFl}}}ABd}{{ACbAf}ACb}{{A@jj}A@j}{{A@jc}A@j{{Aj{{Ah{j}}}}}}0{{A@jAf}A@j}0{{ACb{Bh{{b{A`}}}}}ACb}{{A@jc}A@j{{Aj{{Ah{A@j}}}}}}5{{ACb{Bh{ABj}}}ACb}{{ACbAFn}ACb}{{ACbGn}ACb}888{{ABdAf}ABd}{{ACb{Bh{Hb}}}ACb}{{ABd{Bh{Hb}}}ABd};;{{ACjc}ACj{{Al{{Bh{Hb}}}}}}2{{ACbc}ACb{{Al{{Bh{Hb}}}}}}{{ABdc}ABd{{Al{{Bh{Hb}}}}}}3{{ACb{Bh{AG`}}}ACb}{{A@jACh}A@j}{{ACjAEb}ACj}{{ACbAEb}ACb}{{ABdAEb}ABd}{{ACj{B`{{Ah{AEb}}}}}ACj}{{ACb{B`{{Ah{AEb}}}}}ACb}{{ABd{B`{{Ah{AEb}}}}}ABd}{{A@jAf}A@j}0{{ACb{Bh{Gn}}}ACb}{{ACbAf}ACb}{{ACjAf}ACj}1{{ABdAf}ABd}4{{ACjc}ACj{{Al{{Bh{AEf}}}}}}{{A@j{b{A`}}{Bh{ABl}}}A@j}{{ACbc}ACb{{Al{{Bh{AEf}}}}}}{{ACb{Bh{AEf}}}ACb}{{ABdc}ABd{{Al{{Bh{AEf}}}}}}{{ABd{Bh{AEf}}}ABd}{{ACb{Bh{ABj}}}ACb}{{ABd{Bh{ABj}}}ABd}{{ACbc}{{A@f{ACb}}}{{Bj{Lb}{{Bf{{A@f{Lb}}}}}}}}{{ACbGn}ACb}>{{ACbHb}ACb}0??==?{A@jA@j}{{{b{A@d}}ei{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@f{A@d}}}{{Aj{A`}}}{{AD`{}{{A@h{c}}}}}{{Aj{A`}}}{{AD`{}{{A@h{g}}}}}{{Aj{A`}}}{{AD`{}{{A@h{k}}}}}}0`````{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{Hb{{b{c}}}{}}{Hb{{b{C`c}}}{}}{Hbf}{{{b{C`AGb}}{b{C``}}}{{A@f{A@d}}}}{{{b{C`AGd}}{b{C``}}}{{A@f{A@d}}}}{cc{}}{{}Hb}{ce{}{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}2````{{{b{AGf}}}{{Bh{{b{j}}}}}}{{{b{AGf}}}{{Bh{{b{AGh}}}}}}{{{b{AGf}}}{{Bh{{b{AGj}}}}}}{{{b{AGl}}}{{Bh{{b{AGj}}}}}}??>>==<<;;{{{b{AGf}}{b{A@d}}{b{`}}}{{A@f{Bd}}}}{{{b{AGl}}{b{A@d}}}{{A@f{Bd}}}}{{{b{AGf}}{b{A@d}}{b{AGn}}{b{`}}}{{A@f{AH`}}}}{{{b{AGh}}{b{A@d}}{b{AGn}}{b{`}}}{{A@f{Bd}}}}`{{{b{AGh}}Bd{b{AGn}}{b{`}}}{{A@f{Bd}}}}{{{b{{b{AGf}}}}{b{C`J`}}}AHb}{{{b{AH`}}{b{C`J`}}}AHb}??`>>=={{{b{AGf}}}Af}{{{b{AGf}}{b{Lb}}}{{A@f{Lf}}}}>>>>==??{{AAh{b{C`{AAl{AAj}}}}{b{C`{AAl{AAn}}}}}{{A@f{{AHd{AGb}}}}}}``````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Hf}}Ch{Bh{{b{AHf}}}}}{{n{Chl}}}}00{{{b{ABf}}}Af}00{{{b{ABf}}}{{b{Db}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000``{{{b{ADb}}}ADb}{{{b{Nb}}}Nb}{{{b{Hf}}}Hf}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{{b{ADh}}}ADh}{{{b{ADd}}}ADd}{{{b{AFj}}}AFj}{{{b{AFb}}}AFb}{{{b{AHh}}}AHh}{{{b{N`}}}N`}{{{b{AHj}}}AHj}{{{b{AHl}}}AHl}{{{b{A@n}}}A@n}{{{b{I`}}}I`}{{{b{c}}{b{C`e}}}f{}{}}000000000000000``{{{b{Hf}}{b{Hf}}}AHn}`{{{b{c}}{b{e}}}AHn{}{}}``{{{b{I`}}}{{n{{B`{Lb}}l}}}}`{{{b{Hf}}}Ch}{{{b{Hf}}}Af}{{}ADb}{{}Nb}{{}AEl}{{}AEn}{{}AF`}{{}ADh}{{}AFj}{{}AFb}{{}N`}{{}AHl}{{}A@n}{{}I`}{Hb{{b{c}}}{}}00000000000000000{Hb{{b{C`c}}}{}}00000000000000000`{{{b{I`}}}{{n{Efl}}}}0{c{{n{ADb}}}Hn}{c{{n{Nb}}}Hn}{c{{n{Hf}}}Hn}{c{{n{AEl}}}Hn}{c{{n{AEn}}}Hn}{c{{n{AF`}}}Hn}{c{{n{ADh}}}Hn}{c{{n{ADd}}}Hn}{c{{n{AFj}}}Hn}{c{{n{AFb}}}Hn}{c{{n{AHh}}}Hn}{c{{n{N`}}}Hn}{c{{n{AHj}}}Hn}{c{{n{AHl}}}Hn}{c{{n{A@n}}}Hn}{c{{n{I`}}}Hn}`{{{b{I`}}}{{n{{`{M`}}l}}}}{Hbf}00000000000000000{{{b{ADb}}{b{ADb}}}Af}{{{b{Nb}}{b{Nb}}}Af}{{{b{Hf}}{b{Hf}}}Af}{{{b{AEl}}{b{AEl}}}Af}{{{b{AEn}}{b{AEn}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{ADh}}{b{ADh}}}Af}{{{b{ADd}}{b{ADd}}}Af}{{{b{AFj}}{b{AFj}}}Af}{{{b{AFb}}{b{AFb}}}Af}{{{b{AHh}}{b{AHh}}}Af}{{{b{N`}}{b{N`}}}Af}{{{b{AHj}}{b{AHj}}}Af}{{{b{AHl}}{b{AHl}}}Af}{{{b{A@n}}{b{A@n}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADb}}{b{C`J`}}}{{n{fJb}}}}{{{b{Nb}}{b{C`J`}}}{{n{fJb}}}}{{{b{Hf}}{b{C`J`}}}{{n{fJb}}}}0{{{b{AEl}}{b{C`J`}}}{{n{fJb}}}}{{{b{ABf}}{b{C`J`}}}{{n{fJb}}}}{{{b{AEn}}{b{C`J`}}}{{n{fJb}}}}{{{b{AF`}}{b{C`J`}}}{{n{fJb}}}}{{{b{ADh}}{b{C`J`}}}{{n{fJb}}}}{{{b{ADd}}{b{C`J`}}}{{n{fJb}}}}0{{{b{AFj}}{b{C`J`}}}{{n{fJb}}}}0{{{b{AFb}}{b{C`J`}}}{{n{fJb}}}}{{{b{AHh}}{b{C`J`}}}{{n{fJb}}}}{{{b{N`}}{b{C`J`}}}{{n{fJb}}}}{{{b{AHj}}{b{C`J`}}}{{n{fJb}}}}{{{b{AHl}}{b{C`J`}}}{{n{fJb}}}}{{{b{A@n}}{b{C`J`}}}{{n{fJb}}}}`{cc{}}0000000{ADdADh}1111111111`{{{b{AHj}}}Cj}{{{b{AI`}}{Df{Bd}}{b{ADb}}}{{n{{AEd{Bd{Df{Bd}}AGn}}l}}}}{{{b{ADb}}{b{C`c}}}fLj}{{{b{Nb}}{b{C`c}}}fLj}{{{b{Hf}}{b{C`c}}}fLj}{{{b{AEl}}{b{C`c}}}fLj}{{{b{AEn}}{b{C`c}}}fLj}{{{b{AF`}}{b{C`c}}}fLj}{{{b{ADh}}{b{C`c}}}fLj}{{{b{ADd}}{b{C`c}}}fLj}{{{b{AFj}}{b{C`c}}}fLj}{{{b{AFb}}{b{C`c}}}fLj}{{{b{AHh}}{b{C`c}}}fLj}{{{b{N`}}{b{C`c}}}fLj}{{{b{AHj}}{b{C`c}}}fLj}{{{b{AHl}}{b{C`c}}}fLj}{{{b{A@n}}{b{C`c}}}fLj}``````{{}Hb}00000000000000000{ce{}{}}00000000000000000{{{b{ADd}}}Af}{{{b{Hf}}{Bh{{b{A`}}}}}Af}{{{b{Hf}}}Af}0``{Mfj}{AIbj}{AHjj}````{AHjAHj}`{{{b{Hf}}}Ch}5{{HfCh}Hf}`1{{{b{AFj}}}Af}7{ChHf}{ADdADh}````{{{b{A`}}}Hf}`{{{b{Hf}}{b{Hf}}}{{Bh{AHn}}}}````{{{b{AI`}}{Df{Bd}}{b{Nb}}}{{n{{AEd{Bd{Df{Bd}}AGn}}l}}}}`{{{b{ABf}}AEh}{{n{A@dl}}}}{{{b{ABf}}{Bh{Hb}}}{{n{{B`{Lb}}l}}}}`{{{b{ADb}}c}nO`}{{{b{Nb}}c}nO`}{{{b{Hf}}c}nO`}{{{b{AEl}}c}nO`}{{{b{AEn}}c}nO`}{{{b{AF`}}c}nO`}{{{b{ADh}}c}nO`}{{{b{ADd}}c}nO`}{{{b{AFj}}c}nO`}{{{b{AFb}}c}nO`}{{{b{AHh}}c}nO`}{{{b{N`}}c}nO`}{{{b{AHj}}c}nO`}{{{b{AHl}}c}nO`}{{{b{A@n}}c}nO`}{{{b{I`}}c}nO`}`````{{{b{ADh}}}{{b{A`}}}}`{I`{{n{AFfl}}}}{{{b{AHj}}}{{Bh{AId}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ef{}}00`{{{b{Hf}}Ch{Bh{{b{AHf}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AIf}}}}}{{Bj{AIf}{{Bf{Ch}}}}}}{{{b{Hf}}Ch{Bh{{b{AHf}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}0000000000000{AId{{n{AHjl}}}}1111111111111111111111{{{b{c}}}Oh{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Hf}}}Ch}{{{b{Hf}}}Af}{{ADhACn}ADh}````````````````````````````````````````````````````````","D":"GEn","p":[[1,"reference"],[5,"Private",3071],[1,"unit"],[5,"MetaNameSpace",6,3072],[6,"Expr",6,3073],[6,"PolarsError",3074],[6,"Result",3075],[1,"str"],[5,"ArrayNameSpace",6,3076],[5,"ListNameSpace",6,3077],[1,"bool"],[1,"slice"],[10,"AsRef",3078],[10,"Into",3078],[10,"FunctionOutputField",6,3079],[5,"Arc",3080],[5,"SpecialEq",6,3079],[5,"Series",3081],[17,"Output"],[6,"Option",3082],[10,"Fn",3083],[10,"Send",3084],[10,"Sync",3084],[0,"mut"],[6,"VisitRecursion",3085],[10,"FnMut",3083],[6,"FunctionExpr",6,3086],[1,"i64"],[6,"DataType",3087],[5,"SortOptions",3088],[5,"SortMultipleOptions",3088],[10,"SeriesUdf",6,3079],[10,"Any",3089],[6,"AggExpr",6,3073],[5,"Vec",3090],[1,"u64"],[5,"BinaryNameSpace",1385,3091],[6,"Operator",6,3073],[10,"Clone",3092],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6,3079],[5,"String",3093],[5,"UserDefinedFunction",6,3094],[10,"SeriesBinaryUdf",6,3079],[5,"CategoricalNameSpace",6,3095],[5,"When",6,3096],[5,"Then",6,3096],[5,"ChainedWhen",6,3096],[5,"ChainedThen",6,3096],[6,"Excluded",6,3073],[6,"BooleanFunction",6,3097],[6,"CategoricalFunction",6,3098],[6,"PowFunction",6,3099],[5,"DatetimeArgs",6,3100],[5,"DurationArgs",6,3100],[5,"RollingCovOptions",6,3101],[5,"StrptimeOptions",6,3101],[5,"JoinOptions",6,3101],[6,"WindowType",6,3101],[6,"WindowMapping",6,3101],[10,"IntoVec",3102],[1,"u8"],[10,"ExprEvalExtension",6,3103],[1,"usize"],[1,"f64"],[5,"Duration",2428,3104],[6,"ClosedWindow",3105],[6,"TimeUnit",3106],[10,"BinaryUdfOutputField",6,3079],[10,"Deserializer",3107],[6,"DslPlan",2428,3108],[6,"NullBehavior",3109],[5,"DateLikeNameSpace",1406,3110],[10,"Sized",3084],[10,"ListNameSpaceExtension",6,3111],[5,"EWMOptions",3112],[5,"StructNameSpace",6,3113],[6,"FillNullStrategy",3114],[5,"Formatter",3115],[5,"Error",3115],[10,"UdfSchema",6,3116],[1,"i16"],[1,"f32"],[1,"u32"],[1,"i8"],[1,"u16"],[6,"StructFunction",3117],[6,"RangeFunction",3118],[6,"ListFunction",3119],[6,"BinaryFunction",3120],[6,"ArrayFunction",3121],[6,"StringFunction",3122],[6,"BusinessFunction",3123],[6,"TemporalFunction",3124],[5,"FunctionOptions",3125],[5,"Schema",3126],[6,"Context",3108],[5,"Field",3127],[5,"FieldsMapper",6,3128],[10,"Hasher",3129],[6,"InterpolationMethod",3130],[10,"IntoListNameSpace",6,3111],[10,"Display",3115],[6,"ClosedInterval",3131],[5,"ExprNameNameSpace",6,3132],[10,"Literal",2428,3133],[10,"FnOnce",3083],[5,"PythonUdfExpression",1817,3134],[5,"UnitVec",3135],[6,"QuantileInterpolOptions",3136],[5,"RankOptions",2428,3137],[5,"RollingGroupOptions",2428,3138],[5,"RollingOptionsFixedWindow",3139],[5,"Float64Type",3140],[5,"ChunkedArray",3141],[10,"Copy",3084],[5,"RollingOptionsDynamicWindow",3142],[6,"SearchSortedSide",3143],[10,"Serializer",3144],[6,"IsSorted",3145],[5,"StringNameSpace",1862,3146],[6,"ListToStructWidthStrategy",3147],[5,"TypeId",3089],[6,"Roll",3148],[6,"NonExistent",3149],[6,"RollingFunction",1637,3150],[6,"RollingFunctionBy",1669,3151],[6,"TrigonometricFunction",1700,3152],[5,"DataFrame",3153],[8,"PolarsResult",3074],[17,"Item"],[5,"LazyFrame",1930],[10,"IntoParallelIterator",3154],[5,"UnionArgs",2428,3125],[5,"PythonFunction",1817,3134],[5,"PyAny",3155],[5,"Py",3156],[1,"char"],[5,"Node",3157],[6,"IR",3158],[5,"Arena",3157],[6,"AExpr",3159],[5,"LazyGroupBy",1930],[5,"JoinBuilder",1930],[5,"LazyJsonLineReader",1930,3160],[10,"AnonymousScan",2428,3161],[5,"ScanArgsAnonymous",1930,3162],[8,"SchemaRef",3126],[8,"IdxSize",3163],[5,"InProcessQuery",1930,3164],[8,"PlHashMap",3165],[5,"LazyCsvReader",1930,3166],[5,"ScanArgsIpc",1930,3167],[5,"ScanArgsParquet",1930,3168],[5,"OptState",1930,3169],[10,"LazyFileListReader",1930,3170],[5,"CloudOptions",3171],[6,"JoinCoalesce",3172],[10,"IntoIterator",3173],[5,"DynamicGroupOptions",2428,3138],[6,"JoinType",2428,3172],[8,"PathIterator",1930,3170],[5,"JoinArgs",2428,3172],[10,"IntoLazy",1930],[8,"AllowedOptimizations",1930,3169],[5,"MeltArgs",3174],[5,"Path",3175],[5,"PathBuf",3175],[1,"tuple"],[5,"RowIndex",3176],[5,"AnonymousScanArgs",2428,3161],[8,"PyObject",3156],[5,"CsvWriterOptions",2428,3177],[5,"IpcWriterOptions",2428,3178],[5,"JsonWriterOptions",2428,3179],[5,"ParquetWriteOptions",2428,3180],[8,"String",3181],[5,"IRPlan",3158],[6,"UniqueKeepStrategy",3153],[6,"JoinValidation",2428,3172],[8,"NonZeroUsize",3182],[6,"CsvEncoding",3183],[6,"NullValues",3183],[10,"Executor",2368,3184],[5,"Dummy",2368,3184],[10,"PhysicalExpr",2384],[10,"PartitionedAggregation",2384],[10,"StatsEvaluator",3185],[5,"PhysicalIoHelper",2384],[6,"GroupsProxy",3186],[5,"AggregationContext",2384],[8,"Result",3115],[5,"Box",3187],[6,"Tz",3188],[6,"RankMethod",2428,3137],[6,"LiteralValue",2428,3133],[5,"AnonymousScanOptions",2428,3125],[6,"Ordering",3189],[10,"PolarsTemporalGroupby",2428,3138],[5,"Null",2428,3133],[6,"AnyValue",3190],[5,"NaiveDateTime",3191],[15,"Quantile",1297],[15,"Min",1297],[15,"Max",1297],[15,"IsBetween",1584],[15,"Any",1584],[15,"All",1584],[15,"SortBy",1307],[15,"Filter",1307],[15,"Cast",1307],[15,"Sort",1307],[15,"Gather",1307],[15,"RenameAlias",1307],[15,"Ternary",1307],[15,"Function",1307],[15,"Window",1307],[15,"AnonymousFunction",1307],[15,"Slice",1307],[15,"BinaryExpr",1307],[15,"QCut",1587],[15,"Entropy",1587],[15,"Log",1587],[15,"Hist",1587],[15,"Cut",1587],[15,"EwmMeanBy",1587],[15,"Correlation",1587],[15,"Round",1587],[15,"RoundSF",1587],[15,"Clip",1587],[15,"BackwardFill",1587],[15,"ForwardFill",1587],[15,"Random",1587],[15,"GatherEvery",1587],[15,"Rank",1587],[15,"EwmMean",1587],[15,"EwmStd",1587],[15,"EwmVar",1587],[15,"ValueCounts",1587],[15,"Replace",1587],[15,"CumCount",1587],[15,"CumSum",1587],[15,"CumProd",1587],[15,"CumMin",1587],[15,"CumMax",1587],[15,"TopK",1587],[15,"TopKBy",1587],[15,"GroupBy",3016],[15,"Union",3016],[15,"Sort",3016],[15,"Cache",3016],[15,"ExtContext",3016],[15,"DataFrameScan",3016],[15,"Select",3016],[15,"HStack",3016],[15,"Scan",3016],[15,"MapFunction",3016],[15,"Filter",3016],[15,"Distinct",3016],[15,"Slice",3016],[15,"Sink",3016],[15,"Join",3016],[15,"HConcat",3016],[15,"PythonScan",3016],[15,"Range",3068]],"r":[[8,3073],[21,3076],[27,3079],[29,3097],[33,3098],[34,3095],[37,3096],[38,3096],[53,3100],[60,3100],[69,3073],[73,3073],[74,3103],[75,3132],[77,3128],[78,3132],[87,3086],[88,3079],[94,3079],[103,3111],[117,3101],[123,3077],[124,3111],[138,3072],[153,3073],[161,3099],[171,3079],[177,3101],[184,3079],[185,3079],[195,3079],[199,3101],[201,3113],[207,3096],[213,3116],[217,3094],[220,3096],[223,3101],[224,3101],[255,3192],[259,3193],[266,3193],[269,3194],[273,3195],[275,3196],[290,3197],[292,3197],[297,3198],[298,3199],[300,3195],[302,3096],[361,3200],[368,3199],[370,3195],[419,3193],[420,3192],[421,3192],[422,3201],[423,3201],[424,3201],[433,3202],[435,3193],[439,3193],[444,3196],[445,3100],[446,3196],[447,3196],[570,3195],[572,3192],[573,3192],[574,3100],[644,3195],[677,3193],[680,3201],[741,3195],[780,3192],[810,3196],[811,3196],[855,3199],[857,3199],[867,3195],[870,3195],[874,3133],[884,3194],[895,3195],[898,3195],[905,3199],[909,3193],[910,3199],[913,3193],[914,3199],[922,3199],[926,3193],[952,3199],[954,3195],[966,3202],[973,3195],[976,3199],[980,3193],[984,3203],[996,3202],[997,3202],[1066,3202],[1074,3195],[1079,3199],[1083,3193],[1089,3096],[1092,3196],[1223,3195],[1267,3096],[1385,3091],[1405,3095],[1406,3110],[1476,3097],[1479,3098],[1507,3086],[1543,3099],[1579,3086],[1580,3086],[1581,3086],[1582,3086],[1583,3086],[1631,3098],[1635,3099],[1641,3150],[1673,3151],[1715,3152],[1742,3100],[1743,3100],[1744,3192],[1745,3193],[1747,3193],[1748,3194],[1749,3196],[1750,3197],[1751,3197],[1752,3198],[1753,3199],[1754,3199],[1755,3193],[1756,3192],[1758,3192],[1760,3201],[1763,3201],[1764,3201],[1765,3202],[1766,3193],[1767,3193],[1768,3196],[1769,3196],[1770,3100],[1771,3196],[1772,3196],[1775,3192],[1776,3192],[1777,3100],[1778,3193],[1779,3201],[1782,3192],[1783,3196],[1784,3196],[1785,3199],[1786,3199],[1787,3194],[1788,3199],[1789,3199],[1790,3199],[1794,3199],[1799,3199],[1800,3202],[1801,3199],[1802,3193],[1803,3203],[1804,3202],[1805,3202],[1808,3202],[1809,3199],[1810,3196],[1811,3196],[1817,3134],[1818,3134],[1819,3134],[1820,3134],[1862,3146],[1924,3094],[1930,3169],[1931,3164],[1934,3166],[1935,3170],[1938,3160],[1939,3169],[1940,3170],[1941,3162],[1942,3167],[1943,3168],[2368,3184],[2369,3184],[2427,3204],[2428,3161],[2429,3161],[2430,3125],[2438,3177],[2444,3108],[2445,3104],[2447,3138],[2462,3178],[2464,3172],[2465,3172],[2466,3172],[2467,3179],[2469,3133],[2470,3133],[2476,3133],[2477,3133],[2483,3180],[2484,3138],[2487,3137],[2488,3137],[2489,3138],[2505,3125]],"b":[[452,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[453,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[454,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[523,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[524,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[525,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[577,"impl-Expr"],[578,"impl-PartialEq-for-Expr"],[581,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[582,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[655,"impl-Debug-for-Expr"],[656,"impl-Display-for-Expr"],[658,"impl-Display-for-Operator"],[659,"impl-Debug-for-Operator"],[661,"impl-Debug-for-BooleanFunction"],[662,"impl-Display-for-BooleanFunction"],[663,"impl-Display-for-CategoricalFunction"],[664,"impl-Debug-for-CategoricalFunction"],[665,"impl-Display-for-PowFunction"],[666,"impl-Debug-for-PowFunction"],[667,"impl-Debug-for-FunctionExpr"],[668,"impl-Display-for-FunctionExpr"],[694,"impl-From%3Ci16%3E-for-Expr"],[696,"impl-From%3Cf32%3E-for-Expr"],[697,"impl-From%3Cu32%3E-for-Expr"],[698,"impl-From%3Cf64%3E-for-Expr"],[699,"impl-From%3Ci8%3E-for-Expr"],[700,"impl-From%3C%26str%3E-for-Expr"],[701,"impl-From%3Cu64%3E-for-Expr"],[702,"impl-From%3Cu16%3E-for-Expr"],[703,"impl-From%3Ci32%3E-for-Expr"],[704,"impl-From%3Cu8%3E-for-Expr"],[705,"impl-From%3CAggExpr%3E-for-Expr"],[706,"impl-From%3Cbool%3E-for-Expr"],[707,"impl-From%3Ci64%3E-for-Expr"],[710,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[712,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[713,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[714,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[715,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[716,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[717,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[718,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[719,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[720,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[721,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[725,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[726,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[727,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[729,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[761,"impl-Expr"],[762,"impl-Hash-for-Expr"],[1034,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1035,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1036,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1656,"impl-Display-for-RollingFunction"],[1657,"impl-Debug-for-RollingFunction"],[1687,"impl-Debug-for-RollingFunctionBy"],[1688,"impl-Display-for-RollingFunctionBy"],[1729,"impl-Display-for-TrigonometricFunction"],[1730,"impl-Debug-for-TrigonometricFunction"],[2091,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2092,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2324,"impl-LazyCsvReader"],[2325,"impl-LazyFileListReader-for-LazyCsvReader"],[2326,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2327,"impl-LazyJsonLineReader"],[2346,"impl-LazyFileListReader-for-LazyCsvReader"],[2347,"impl-LazyCsvReader"],[2348,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2349,"impl-LazyJsonLineReader"],[2752,"impl-Display-for-Duration"],[2753,"impl-Debug-for-Duration"],[2759,"impl-Debug-for-JoinType"],[2760,"impl-Display-for-JoinType"],[2761,"impl-Display-for-JoinValidation"],[2762,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFAI+gAEABEAFwALACQAAQAoAA0ANwAFAD4ABgBGAAIASwAAAE0AEgBhABMAdgAAAHgAAwB9AA0AjAALAJkAAgCdABoAuwAIAMUABADLAAMA0QAIANsAAQDeAAAA4AAbAP0AAAACAQAABQEBAAkBAAAPAQAAEQEAABwBAAAfAQAAJgEAACgBAQAtAQAAMAE3AGoBAABsAQAAbgEBAHMBAAB6ASkApwEAAMEBDADPAUgAGgIAABwCGwA5AgAAOwIAAEECAABDAg0AUgIgAHsCAAB+AgEAgwIAAIkCAACMAhkApwIAALcCAAC5AgsAxwIAAMkCCQDWAgIA2gIAAOACAADkAgAA5gIAAOsCAQDwAgUA+QIAAPsCCwAKAwEADgMbAEoDAgBOAwAAYQMAAGkDAAB2AwAAeQMFAIIDAACFAwAAlQMAAJgDAgCgAwIApAMDAK0DAQCxAwIAtwMBAMMDAADFAwEAzAMAAM4DAADWAwEA3AMBAN8DAADkAwIA/gMFAAUEEQAgBAAAJwQAAC4EAAAzBAAANQQAADcEAAA9BAAAQgQAAEQEAABGBAIATQQVAGQEBgBvBDcAqQQAAKsEHQDVBAAA1wQcAPcEAQAIBQAADAUBABEFEwAoBQEAKwUBAC4FAQAxBQQANwUyAGsFAwBwBQIAdQUCAHoFAwCCBQEAiwUCAJEFAACTBQAAoAUAAK8FAwC3BcMAfAYBAH8GGgCbBgEAngYlAMUGAQDIBgYA0wYAAOEGAADuBgEA9QYBAAAHAgAEBwMADQcDABUHHQA0BwAANgcCADsHCwBIBwMAUAcCAFQHAABXBwAAXAcCAGAHAQCABwMAjAcDAJMHAACVBw0ApgcBAKoHFQDBBwEAxgcRANoHAQDeBwAA5QcAAOgHGAAFCAIACQgHACUIAQAoCAAALAgBADcIAgA/CAAAQQgKAF0IAQBiCAEAZQgAAGcIAABsCAEAcggDAHcIAwB9CAAAfwgAAIEIBACOCAMAmwgEAKEIAAClCAEAqAgAALQIAADBCAEAxAgdAOQICQDxCAEA9AgJAP8IAAAHCQEAFgkBABwJAQAfCQEAKwkAAC0JAAA8CQUAQwkGAEsJAABNCQUAVQkAAFgJCgBkCQAAZwkAAGkJAQBtCQIAcgkAAHQJDgCGCQAAiQkCAI0JAwCTCQAAmQkBAJ8JAAChCQYAqwkCAK8JAACyCQkAvQkCAMIJAADECQAAygkTAOEJJQAJCiQAMgqLAL8KEwDbCgAA5goAAOgKEQD7CgAA/goRACILAQAmCwAAKQsCAC8LBQA2CwAAOQsAADsLAgA/CwEAQwsCAEkLFABfC6AA"}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNHONONNNNNNNNNNNNNNNNNNONEEPKPPGKKNMMMNNHHHNNHHNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Outer","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_outer_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_join_suffix_name","_left_join_from_series","_left_join_from_series","_outer_join_from_series","_outer_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","join","join_nulls","left_join","needs_checks","new","outer_join","private_left_join_multiple_keys","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[230,"polars_ops::prelude"],[232,"polars_ops::series"],[281,"polars_ops::chunked_array::binary"],[282,"polars_core::datatypes"],[283,"polars_ops::chunked_array::binary::namespace"],[284,"polars_ops::chunked_array::scatter"],[285,"polars_utils::index"],[286,"polars_core::series"],[287,"polars_error"],[288,"core::marker"],[289,"core::option"],[290,"core::iter::traits::collect"],[291,"polars_ops::chunked_array::list::namespace"],[292,"polars_core::datatypes::aliases"],[293,"polars_core::chunked_array::ops::sort::options"],[294,"polars_core::frame"],[295,"dyn_clone::sealed"],[296,"polars_ops::frame::join::hash_join"],[297,"polars_ops::frame::join::args"],[298,"alloc::string"],[299,"polars_ops::frame::join::cross_join"],[300,"core::fmt"],[301,"core::hash"],[302,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[303,"polars_arrow::array::primitive"],[304,"core::convert"],[305,"core::result"],[306,"core::any"],[307,"polars_ops::series::ops::arg_min_max"],[308,"polars_ops::series::ops"],[309,"polars_core::chunked_array::ops::search_sorted"],[310,"polars_ops::series::ops::various"],[311,"polars_ops::frame::join::general"],[312,"polars_ops::series::ops::clip"],[313,"polars_ops::series::ops::horizontal"],[314,"polars_ops::series::ops::index"],[315,"polars_ops::series::ops::negate"],[316,"polars_ops::series::ops::not"],[317,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,36,37,0,0,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,37,0,33,36,37,38,0,31,31,0,31,31,0,31,31,31,31,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,33,36,37,38,45,45,45,45,33,33,36,37,38,48,33,36,37,38,37,48,33,48,38,33,48,0,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,0,0,54,0,54,54,0,0,0,54,52,52,53,54,54,0,0,0,54,54,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,0,56,56,0,0,0,0,0,0,0,54,54,54,54,56,56],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}```````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}D`{d{Ch}}Db}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Dd}{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}DbBh{Al{{d{{l{{d{Bf}}}}}}}}}{{Af{Ch}}}}0{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}Db}{{Af{Ch}}}}0{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cl{}{}}000{{{d{Dh}}{d{Dj}}}Bh}`{{{d{Dn}}{d{Ch}}{Al{{d{Bf}}}}{Al{{E`{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dn}}{d{Ch}}{Al{{E`{BnC`}}}}Bh}{{Af{{E`{ChCh}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{C`{{d{c}}}{}}000{C`{{d{Dfc}}}{}}000{C`Cl}000{{{d{Db}}{d{Db}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{Dl}}{d{Dl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{DjDb}{cc{}}000{{{d{Db}}{d{Dfc}}}ClEh}{{{d{Dh}}{d{Dfc}}}ClEh}{{{d{Dj}}{d{Dfc}}}ClEh}{{{d{Dl}}{d{Dfc}}}ClEh}{{{d{Ej}}{d{Ad}}DlBh}{{Af{{E`{ElBh}}}}}}0{{{d{Ej}}{d{Ad}}DlBh}{{Af{{E`{{En{Ab}}{En{Ab}}}}}}}}0`{{}C`}000{{{d{F`}}{d{Ch}}ee}{{Af{Ch}}}{{Fb{Bf}}}{{An{}{{Aj{c}}}}}}{ce{}{}}000{{{d{Dj}}}Bh}{{{d{F`}}{d{Ch}}eeDb}{{Af{Ch}}}{{Fb{Bf}}}{{An{}{{Aj{c}}}}}}`3{{{d{Dl}}}Bh}=4{{{d{Ch}}{d{Ch}}Bh}{{Af{D`}}}}`{{{d{Db}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{DbDh}Db}`````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dfe}}}Cl{}{}}{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Dfc}}}{}}{C`Cl}{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DfEd}}}{{Fd{ClFn}}}}{cc{}}{{{d{Fl}}{d{Dfc}}}ClEh}{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{G`}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{G`}}BhBh}{{Af{Ch}}}}0","D":"Eb","p":[[10,"AsBinary",4,281],[1,"reference"],[8,"BinaryChunked",282],[10,"BinaryNameSpaceImpl",4,283],[1,"u8"],[1,"slice"],[8,"BooleanChunked",282],[10,"ChunkedSet",4,284],[8,"IdxSize",285],[5,"Series",286],[8,"PolarsResult",287],[10,"Copy",288],[17,"Item"],[6,"Option",289],[10,"IntoIterator",290],[10,"AsList",23],[8,"ListChunked",282],[10,"ListNameSpaceImpl",23,291],[1,"str"],[1,"bool"],[8,"StringChunked",282],[8,"IdxCa",292],[1,"i64"],[1,"usize"],[5,"SortOptions",293],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",294],[5,"Private",295],[1,"unit"],[10,"JoinDispatch",78,296],[8,"LeftJoinIds",78,297],[5,"JoinArgs",78,297],[5,"String",298],[0,"mut"],[6,"JoinCoalesce",78,297],[6,"JoinType",78,297],[6,"JoinValidation",78,297],[10,"CrossJoin",78,299],[1,"tuple"],[8,"ChunkJoinOptIds",78,297],[5,"Formatter",300],[8,"Result",300],[10,"Hasher",301],[10,"SeriesJoin",78,302],[8,"InnerJoinIds",78,297],[5,"PrimitiveArray",303],[10,"DataFrameJoinOps",78],[10,"AsRef",304],[6,"Result",305],[5,"TypeId",306],[10,"ArgAgg",232,307],[10,"SeriesSealed",232,308],[6,"SearchSortedSide",232,309],[5,"Error",300],[10,"SeriesMethods",232,310]],"r":[[4,281],[5,283],[6,284],[24,291],[78,297],[79,297],[82,299],[85,297],[86,297],[87,297],[88,296],[90,297],[91,297],[94,297],[100,302],[105,311],[108,311],[111,311],[141,296],[230,78],[231,74],[233,307],[236,309],[237,310],[238,308],[245,312],[246,312],[247,312],[250,313],[251,314],[265,314],[268,313],[269,313],[270,313],[271,315],[272,316],[273,317],[274,313]],"b":[[172,"impl-Debug-for-JoinType"],[173,"impl-Display-for-JoinType"],[174,"impl-Display-for-JoinValidation"],[175,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPAAEgAAAAgACwABAA8AAwAVAA8AKQA2AGQABgBtABkAiQAoALYADADIAAAAygAAAMwAAQDPABoA6wAFAPMAAgD5AAwABwEBAAsBDAA="}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::logical_plan::options"],[122,"polars_plan::logical_plan"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",31],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",31,121],[1,"bool"],[6,"Context",31,122],[5,"DefaultFunctionRegistry",31],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[23,127],[32,122],[35,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKKKPFCHHMMOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsMonthEnd","PolarsMonthStart","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","month_end","month_start","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[26,"polars_time::chunkedarray"],[28,"polars_time::chunkedarray::string"],[60,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[285,"polars_time::series"],[306,"chrono::naive::datetime"],[307,"polars_time::windows::duration"],[308,"polars_time::windows::group_by"],[309,"polars_core::datatypes::time_unit"],[310,"polars_arrow::legacy::time_zone"],[311,"core::option"],[312,"polars_core::chunked_array::logical::datetime"],[313,"polars_error"],[314,"polars_time::month_end"],[315,"polars_time::month_start"],[316,"polars_time::round"],[317,"polars_core::datatypes"],[318,"chrono::naive::time"],[319,"polars_core::chunked_array::logical::time"],[320,"polars_time::truncate"],[321,"polars_time::upsample"],[322,"polars_core::frame"],[323,"alloc::string"],[324,"polars_core::utils"],[325,"dyn_clone::sealed"],[326,"polars_time::chunkedarray::string::patterns"],[327,"core::fmt"],[328,"core::hash"],[329,"core::result"],[330,"core::any"],[331,"core::clone"],[332,"polars_time::windows::bounds"],[333,"polars_time::windows::window"],[334,"core::cmp"],[335,"polars_core::datatypes::dtype"],[336,"polars_core::frame::group_by::proxy"],[337,"alloc::vec"],[338,"core::ops::function"],[339,"polars_core::series"],[340,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,0,0,5,0,0,0,0,12,13,46,4,0,14,0,0,18,19,19,0,0,0,27,27,27,27,27,0,0,27,25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,0,41,0,0,34,34,34,34,34,34,34,34,34,0,34,34,34,34,37,34,34,34,41,34,34,5,0,0,0,44,45,0,45,0,5,44,45,5,5,44,45,0,45,0,45,45,45,0,45,43,4,5,44,45,46,4,4,4,49,43,4,5,44,45,46,49,43,4,5,44,45,46,43,4,5,44,45,46,43,4,5,44,45,46,4,4,4,4,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,0,0,4,5,44,45,4,4,4,5,5,5,44,44,44,45,45,45,43,4,4,5,44,45,49,43,4,5,44,45,46,46,46,46,46,0,0,4,5,44,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,4,4,4,4,4,4,4,4,4,46,49,46,4,4,4,46,46,46,43,4,5,44,45,46,4,4,4,46,46,46,46,4,46,4,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,45,4,4,0,0,57,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59],"f":"`````````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}{{{d{Ah}}{A`{{d{n}}}}}{{Ad{Ah}}}}{{{d{Aj}}{A`{{d{n}}}}}{{Ad{Aj}}}}```{{{d{Al}}{d{An}}h{A`{{d{n}}}}}{{Ad{Al}}}}`{{{d{b}}B`B`hj}{{Ad{Bb}}}}{{{d{Bd}}{A`{{d{n}}}}{d{An}}{d{b}}}{{Ad{Bd}}}}{{{d{Bf}}c{d{b}}hh}{{Ad{Bh}}}{{Bl{Bj}}}}0``````````{{{d{c}}Bn}C`{}}{{{d{Cb}}}{{d{An}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{Cf}}}Cf}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}{{{d{Cf}}{d{Cf}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cf}}{d{CdCj}}}Cl}{cc{}}{{{d{Cf}}{d{Cdc}}}C`Cn}`{{}Ch}{ce{}{}}{{{d{Cf}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{D`{e}}}{}{}}0{{{d{c}}}Db{}}````{{{d{c}}Bn}C`{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{{Dd{c}}}}}{{Dd{c}}}{DfDh}}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}?{{{d{b}}}{{A`{Cf}}}}>=`{{{d{Cd{Dd{c}}}}{d{b}}}A`Dh}{{{d{CdDj}}{d{{Dn{Dl}}}}{A`{l}}}{{A`{c}}}{}}`=<{{c{A`{l}}}{{Ad{{Eb{}{{E`{e}}}}}}}{}{}}=<````````````````````````;;;;;;{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00;;;;;;;:::::::{{{d{Ef}}}Ef}{{{d{h}}}h}{{{d{j}}}j}{{{d{Eh}}}Eh}{{{d{Ej}}}Ej}{{{d{El}}}El}>>>>>>{{{d{h}}{d{h}}}En}{{{d{c}}{d{e}}}En{}{}}{{{d{h}}}Ed}{{{d{h}}}Af}{{}Ej}{Ch{{d{c}}}{}}000000{Ch{{d{Cdc}}}{}}000000{ChC`}000000{{h{d{F`}}{d{b}}}{{Ad{C`}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{C`}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Eh}}{d{Eh}}}Af}{{{d{Ej}}{d{Ej}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Ef}}{d{CdCj}}}Cl}{{{d{h}}{d{CdCj}}}Cl}0{{{d{j}}{d{CdCj}}}Cl}{{{d{Eh}}{d{CdCj}}}Cl}{{{d{Ej}}{d{CdCj}}}Cl}{cc{}}000000{{{d{El}}Edj{A`{{d{n}}}}}{{Ad{Ef}}}}00{{{d{El}}Efjl{A`{{d{n}}}}Ej}{{Ad{Fb}}}}{{hh{d{{Dn{Ed}}}}jl{A`{n}}}{{Ad{Fd}}}}{{El{d{{Dn{Ed}}}}jl{d{{A`{Ff}}}}AfAfEj}{{Fj{Fd{Fh{Ed}}{Fh{Ed}}}}}}{{{d{h}}{d{Cdc}}}C`Cn}{{{d{j}}{d{Cdc}}}C`Cn}{{{d{Eh}}{d{Cdc}}}C`Cn}{{{d{Ej}}{d{Cdc}}}C`Cn}{{}Ch}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}Ed}1{{hEd}h}12{Edh}{{hhh}El}{{{d{CdFb}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{En}}}}{{{d{El}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bj{}}{{{d{h}}Ed{A`{{d{n}}}}ceg}{{Ad{Ed}}}{{Fn{Ed}{{Fl{Ed}}}}}{{Fn{Ed}{{Fl{f}}}}}{{Fn{f}{{Fl{Ed}}}}}}{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}44440404{c{{D`{e}}}{}{}}0000000000000{{{d{c}}}Db{}}000000{{{d{Ej}}}{{A`{G`}}}}>?``{{{d{Gb}}}{{d{Gd}}}}{{{d{Gf}}}{{Ad{Gh}}}}{{{d{Gf}}}{{Ad{Gj}}}}0{{{d{Gf}}}{{Ad{Gl}}}}22112{{{d{Gf}}}{{Ad{Gn}}}}322{{{d{Gf}}{d{b}}}{{Ad{Gd}}}}0334","D":"Gb","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",306],[5,"Duration",85,307],[6,"ClosedWindow",85,308],[6,"TimeUnit",309],[6,"Tz",310],[6,"Option",311],[8,"DatetimeChunked",312],[8,"PolarsResult",313],[1,"bool"],[10,"PolarsMonthEnd",0,314],[10,"PolarsMonthStart",0,315],[10,"PolarsRound",0,316],[8,"StringChunked",317],[5,"NaiveTime",318],[8,"TimeChunked",319],[10,"PolarsTruncate",0,320],[10,"PolarsUpsample",0,321],[5,"DataFrame",322],[5,"String",323],[10,"IntoVec",324],[5,"Private",325],[1,"unit"],[10,"AsString",28],[0,"mut"],[6,"Pattern",28,326],[1,"usize"],[5,"Formatter",327],[8,"Result",327],[10,"Hasher",328],[6,"Result",329],[5,"TypeId",330],[5,"DatetimeInfer",60],[10,"Clone",331],[10,"PolarsNumericType",317],[10,"StrpTimeParser",60],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",60],[1,"i64"],[5,"Bounds",85,332],[6,"Label",85,308],[6,"StartBy",85,308],[5,"Window",85,333],[6,"Ordering",334],[6,"DataType",335],[5,"BoundsIter",85,333],[8,"GroupsSlice",336],[8,"TimeZone",335],[5,"Vec",337],[1,"tuple"],[17,"Output"],[10,"Fn",338],[1,"u32"],[10,"AsSeries",285],[5,"Series",339],[10,"TemporalMethods",285],[8,"Int32Chunked",317],[8,"Int8Chunked",317],[8,"BooleanChunked",317],[8,"Int16Chunked",317]],"r":[[1,308],[2,307],[5,314],[6,315],[7,316],[8,320],[9,321],[11,333],[13,340],[14,340],[22,340],[26,28],[34,326],[86,332],[87,333],[88,308],[91,307],[93,308],[101,308],[103,285],[107,333],[170,307],[171,307],[205,308],[206,308]],"b":[[189,"impl-Display-for-Duration"],[190,"impl-Debug-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAFQAAAAsADwAHABgAAAAbABcANAACADgAEABKAAEATQATAGIACQBtAFUAygAAAMwAAQDQAAoA4gABAOYAAgDsAAIA8AABAPUADQAEAQAABgEaACUBAAA="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCQQCCCCCCCQCCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","float","floor_divmod","fmt","format_list","format_smartstring","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","from","from","get","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[39,"polars_utils::abs_diff"],[43,"polars_utils::aliases"],[59,"polars_utils::arena"],[117,"polars_utils::atomic"],[137,"polars_utils::binary_search"],[139,"polars_utils::cache"],[175,"polars_utils::cell"],[195,"polars_utils::clmul"],[199,"polars_utils::contention_pool"],[214,"polars_utils::cpuid"],[216,"polars_utils::float"],[222,"polars_utils::floor_divmod"],[224,"polars_utils::functions"],[228,"polars_utils::hashing"],[260,"polars_utils::idx_vec"],[304,"polars_utils::index"],[366,"polars_utils::io"],[368,"polars_utils::iter"],[381,"polars_utils::mem"],[382,"polars_utils::min_max"],[389,"polars_utils::nulls"],[394,"polars_utils::ord"],[396,"polars_utils::partitioned"],[415,"polars_utils::slice"],[429,"polars_utils::sort"],[431,"polars_utils::sync"],[454,"polars_utils::sys"],[468,"polars_utils::total_ord"],[518,"polars_utils::unwrap"],[520,"polars_utils::vec"],[533,"num_traits"],[534,"core::cmp"],[535,"core::marker"],[536,"core::fmt"],[537,"core::clone"],[538,"core::option"],[539,"core::hash"],[540,"core::default"],[541,"core::ops::function"],[542,"core::result"],[543,"core::any"],[544,"core::borrow"],[545,"alloc::sync"],[546,"alloc::vec"],[547,"core::convert"],[548,"core::ops::range"],[549,"core::iter::traits::collect"],[550,"polars_utils::iter::fallible"],[551,"core::slice::iter"],[552,"polars_error"],[553,"std::fs"],[554,"std::path"],[555,"polars_utils::iter::enumerate_idx"],[556,"core::error"],[557,"core::iter::traits::iterator"],[558,"hashbrown::map"],[559,"core::mem::maybe_uninit"],[560,"core::slice::index"],[561,"num_traits::cast"],[562,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,112,0,0,0,0,0,112,10,11,113,114,112,10,11,113,114,0,0,13,15,13,15,13,13,15,13,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,15,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,36,33,36,33,33,33,33,36,33,36,33,36,33,36,36,33,33,33,33,36,33,33,36,33,36,33,33,36,33,33,36,33,36,33,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,43,43,43,43,43,0,44,0,0,0,0,0,0,50,50,50,50,50,50,51,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,64,0,0,0,0,62,63,62,63,0,62,63,62,63,62,63,62,63,62,63,62,62,62,62,63,62,63,62,62,63,64,64,62,62,63,62,63,62,63,66,63,62,62,66,62,63,67,63,68,62,62,63,62,63,62,63,62,63,0,0,0,0,0,77,0,77,71,71,71,71,73,57,77,0,0,79,79,79,79,79,79,65,65,0,65,65,0,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,85,87,87,89,0,90,90,91,91,0,0,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,96,96,96,96,96,96,96,96,96,96,96,96,104,0,0,0,0,104,0,99,99,0,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,104,99,104,92,100,92,92,101,101,92,92,100,99,99,99,99,0,105,0,0,0,107,0,0,107,107,108,109,110,109,111],"f":"`````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bl{An}}}{}}2{{{Al{An}}{Al{Ahc}}}B`Bn}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bl{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bl{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}B`{}}{{{Al{Ah{Aj{c}}}}Ane}B`C`{{Cd{c}{{Cb{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cC`}{{{Al{c}}}e{}{}}0{c{{Cf{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Cf{B``}}}C`{{Ch{c}{{Cb{{Cf{c`}}}}}}}}{{{Al{c}}}Cj{}}0{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Cl}}}Cl}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}Cl}{{{Al{Cl}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhCl}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhCl}}}B`}{AbCl}{{{Al{c}}}e{}{}}{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}{{{Al{{Cn{c}}}}c}AbD`}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{ce}}}}}{{Db{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Db{ce}}}{DdDf}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dh{ceg}}}}cBf}e{DdDfBb}j{{Ch{c}{{Cb{e}}}}}}{cc{}}0{{{Al{{Db{eg}}}}{Al{c}}}{{Bl{{Al{g}}}}}{DdDfDj}{{Dl{c}}DdDf}{}}{{{Al{Ah{Db{eg}}}}{Al{c}}}{{Bl{{Al{Ahg}}}}}{DdDfDj}{{Dl{c}}DdDf}{}}{{{Al{Ah{Db{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Dl{c}}DdDf}{}{{Cd{{Al{e}}}{{Cb{g}}}}}}{{}Ab}0{{{Al{Ah{Db{ce}}}}ce}{{Al{Ahe}}}{DdDf}{}}{ce{}{}}0{{gAb}{{Dh{ceg}}}{DdDfBb}j{{Ch{c}{{Cb{e}}}}}}{Ab{{Db{ce}}}{DdDf}{}}{{{Al{c}}}e{}{}}{c{{Cf{e}}}{}{}}0{{{Al{Ah{Db{eg}}}}{Al{c}}k}{{Cf{{Al{Ahg}}i}}}{}{{Dl{c}}DdDf}{}{}{{Cd{{Al{e}}}{{Cb{{Cf{gi}}}}}}}}11{{{Al{c}}}Cj{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Dn{c}}}C`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{E`c{}}{cc{}}{c{{Dn{c}}}{}}{{{Al{{Dn{c}}}}}{}Dj}{{{Al{Ah{Dn{c}}}}}{{Al{Ahc}}}Dj}{{}Ab}{ce{}{}}{{{Dn{c}}}c{}}5{{}}{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}{{EbEb}Eb}0{EbEb}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Ed{c}}}}}cC`}>={Ab{{Ed{c}}}C`}{{{Al{{Ed{c}}}}c}B`C`}<<;{{}Bf}0`00{{{Al{Ef}}}Bf}10`{{EhEh}{{Ej{EhEh}}}}{{{El{c}}e}{{El{c}}}Bb{{Ch{c}{{Cb{c}}}}}}{{{Al{{Cn{e}}}}{Bl{Ab}}}{{En{c}}}Bb{{F`{{Cn{c}}}}}}{{AbAb{Fb{Ab}}}{{Fb{Ab}}}}{{{El{c}}g}{{Cf{{El{c}}e}}}Bb{}{{Ch{c}{{Cb{{Cf{ce}}}}}}}}``?>{{{Al{Fd}}}Fd}{{{Al{c}}{Al{Ahe}}}B`{}{}}?>{{{Al{Ff}}}Eb}{{{Al{Fd}}}Eb}?{{{Al{Fd}}{Al{Fd}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fd}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fd}}{Al{Ahc}}}B`Bn}{{EbAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fd}}}Bf}{{{Bl{{Al{{Cn{Fh}}}}}}Eb}Fd}2{{{Al{c}}}e{}{}}{{{Al{Fd}}}c{}};7{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}{Fdc{}}``{{{Al{Ah{Fj{c}}}}}{{Al{Ah{Cn{c}}}}}{}}0{{{Al{{Fj{c}}}}}{{Al{{Cn{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Fj{c}}}}}Ab{}}{{{Al{{Fj{c}}}}}{{Fj{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Fj{c}}}{}}{{{Al{{Fj{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Fj{c}}}}}B`{}}{AbB`}{{{Al{{Fj{c}}}}{Al{{Fj{c}}}}}BfFl}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{Fj{c}}}}e}B`{}{{G`{}{{Fn{c}}}}}}{{{Al{{Fj{c}}}}{Al{AhBh}}}Bjl}{{{En{c}}}{{Fj{c}}}{}}{cc{}}{{{Al{{Cn{c}}}}}{{Fj{c}}}Bb}{g{{Cf{ic}}}{}{}{{Gb{c}{{Fn{e}}}}}{}}{e{{Fj{c}}}{}{{G`{}{{Fn{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{Fj{c}}}}}Bf{}}{{{Al{{Fj{c}}}}}{{Gd{c}}}{}}{{{Al{Ah{Fj{c}}}}}{{Gf{c}}}{}}{{{Al{{Fj{c}}}}}Ab{}}{{}{{Fj{c}}}{}}{{{Al{Ah{Fj{c}}}}}{{Bl{c}}}{}}{{{Al{Ah{Fj{c}}}}c}B`{}}0{{{Al{Ah{Fj{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}{Ab{{Fj{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Cn{Gh}}}}Gh}{{Gj{B`}}}}{{{Al{Gl}}}Gl}{{{Al{Gn}}}Gn}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Gl}}{Al{Gl}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Gn{{Ej{GhGh}}}}{{{Al{Gl}}{Al{AhBh}}}Bj}{{{Al{Gn}}{Al{AhBh}}}Bj}{cc{}}{GhGl}1{{{Al{{H`{}{{Fn{c}}}}}}Ab}cHb}0{{{Al{Gl}}}Gh}{{}Ab}0`{{{Al{AhGn}}}{{Al{AhEb}}}}{ce{}{}}0{{{Al{Hd}}}Bf}{{{Al{Gn}}}Bf}{{{Al{Gl}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hd}}}Ab}{{}Gl}{{}Gn}{{{Al{Hf}}}Ab}{{GhGh}Gn}{{HhEb}Gh}{{{Al{Gl}}}{{Bl{Gh}}}}{{{Al{c}}}e{}{}}0{c{{Cf{e}}}{}{}}000{{{Al{c}}}Cj{}}0{c{{Gj{Hj}}}{{F`{Hl}}}}0``````{Hn{{`{HnGh}}}}0{Hn{{`{HnI`}}}}0{g{{Cf{Ibc}}}Id{}{{Gb{c}{{Fn{e}}}}}}{{{Al{AhGb}}}{{Cf{B`c}}}Id}{{{Ij{}{{If{c}}{Ih{e}}}}}e{}{{Il{}{{Fn{c}}}}}}{{{Al{{Cn{c}}}}}{{Al{Ah{Cn{c}}}}}j}`{{InIn}In}000{{{Al{In}}{Al{In}}}Bf}0```{{{Al{{Hb{}{{J`{c}}}}}}}Bf{}}{{{Hb{}{{J`{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEf}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jb{ceg}}}}}{{Al{{Cn{{Jd{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jb{ceg}}}}}{{Al{Ah{En{{Jd{ceg}}}}}}}{}{}{}}{ce{}{}}{{{En{{Jd{ceg}}}}}{{Jb{ceg}}}{}{}{}}{{{Al{{Jb{ceg}}}}Eb}{{Jf{ceg}}}{}{}{}}{{{Al{{Jb{ceg}}}}Eb}{{Ej{{Jf{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jb{ceg}}}}Eb}{{Ej{{Jh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jb{ceg}}}}Eb}{{Jh{ceg}}}{}{}{}}{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}`````{{{Al{Jj}}}{{Al{{Cn{{Jl{c}}}}}}}{}}{{{Al{Jn}}e}Al{}{{K`{{Cn{c}}}}}}{{{Al{AhJn}}e}{{Al{Ah}}}{}{{K`{{Cn{c}}}}}}{{{Al{Kb}}}Bf}{{{Al{{Cn{Fh}}}}}Eb}{{{Al{Kd}}}{{Bl{{Al{c}}}}}{}}0{{{Al{Kf}}{Fb{Ab}}}Kf}0{{e{Al{Ah{En{Fh}}}}Ab}{{Al{Ah{Cn{g}}}}}{Khj}{{G`{}{{Fn{c}}}}}{Kjj}}{{{Al{Kl}}{Al{{Cn{{Ej{GhGh}}}}}}{Al{Ah{En{Gh}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Kn{c}}}}}{{Kn{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Kn{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{Kn{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{}{{Kn{c}}}{}}0{{{Al{{Kn{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{Kn{c}}}}}Bf{}}44{{{Al{c}}}e{}{}}{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{L`}}}Eb};87443```````21{LbLb}{LdLd}{{{Al{{Lf{c}}}}}{{Lf{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{{Lf{c}}}}{Al{{Lf{c}}}}}BdKh}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lf{c}}}}}EbFf}{AbB`}{{{Al{{Lf{c}}}}{Al{{Lf{c}}}}}BfLh}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Lf{c}}}}{Al{{Lf{c}}}}}BfKh}0{{{Al{{Lf{c}}}}{Al{Ahe}}}B`LjBn}{{}Ab}{ce{}{}}{{{Al{{Lf{c}}}}}BfHb}447{{{Al{{Lf{c}}}}{Al{{Lf{c}}}}}{{Bl{Bd}}}Kh}2{{{Al{c}}}e{}{}}{{{Al{{M`{}{{Ll{c}}{Ln{e}}}}}}}c{}{}}{{{Al{Kh}}{Al{Kh}}}Bd}{{{Al{Lh}}{Al{Lh}}}Bf}{{{Al{Kh}}{Al{Kh}}}Bf}0{{{Al{Lj}}{Al{Ahc}}}B`Bn}{{{Al{{Cn{Lj}}}}{Al{Ahc}}}B`Bn}223{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}{{{Lf{c}}}eHb{}}`{Mbc{}}``````{{{Al{{Mf{}{{Md{c}}}}}}g}{{En{e}}}{}{}{{Ch{{Al{c}}}{{Cb{e}}}}}}{{{Mf{}{{Md{c}}}}g}{{En{e}}}{}{}{{Ch{c}{{Cb{e}}}}}}{{{Al{AhMh}}Abc}B`j}{Mj{{Ej{AbAb}}}}{{{Al{AhMl}}c}B`{}}{{{Al{Mj}}}{{Ej{AbAb}}}}{{AbLd}Mn}","D":"Ib","p":[[17,"Abs"],[10,"AbsDiff",39],[10,"Num",533],[10,"PartialOrd",534],[10,"Copy",535],[10,"Debug",536],[10,"Send",535],[10,"Sync",535],[1,"usize"],[8,"PlHashMap",43],[8,"PlHashSet",43],[0,"mut"],[5,"Arena",59],[1,"reference"],[5,"Node",59],[1,"unit"],[10,"Clone",537],[6,"Ordering",534],[1,"bool"],[5,"Formatter",536],[8,"Result",536],[6,"Option",538],[10,"Hasher",539],[10,"Default",540],[17,"Output"],[10,"FnOnce",541],[6,"Result",542],[10,"FnMut",541],[5,"TypeId",543],[5,"SyncCounter",117],[1,"slice"],[10,"Ord",534],[5,"FastFixedCache",139],[10,"Hash",539],[10,"Eq",534],[5,"FastCachedFunc",139],[10,"Sized",535],[10,"Borrow",544],[5,"SyncUnsafeCell",175],[1,"never"],[1,"u64"],[5,"LowContentionPool",199],[10,"IsFloat",216],[10,"FloorDivMod",222],[1,"tuple"],[5,"Arc",545],[5,"Vec",546],[10,"AsRef",547],[5,"Range",548],[5,"BytesHash",228],[10,"DirtyHash",228],[1,"u8"],[5,"UnitVec",260],[10,"PartialEq",534],[17,"Item"],[10,"IntoIterator",549],[10,"FallibleIterator",368,550],[5,"Iter",551],[5,"IterMut",551],[8,"IdxSize",304],[8,"PolarsResult",552],[5,"NullableIdxSize",304],[5,"ChunkId",304],[10,"Indexable",304],[10,"IsNull",389],[10,"Bounded",304],[10,"NullCount",304],[10,"ToIdx",304],[5,"File",553],[5,"Path",554],[10,"EnumerateIdxTrait",368,555],[1,"u32"],[10,"FromFallibleIterator",368,550],[10,"Error",556],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",368],[10,"Iterator",557],[10,"MinMax",382],[17,"Inner"],[5,"PartitionedHashMap",396],[5,"HashMap",558],[5,"RawEntryBuilder",558],[5,"RawEntryBuilderMut",558],[10,"Slice2Uninit",415],[20,"MaybeUninit",559],[10,"GetSaferUnchecked",415],[10,"SliceIndex",560],[10,"SortedSlice",415],[10,"Extrema",415],[10,"SliceAble",415],[10,"TotalOrd",468],[10,"FromPrimitive",561],[5,"ThreadPool",562],[5,"SyncPtr",431],[5,"MemInfo",454],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",468],[10,"TotalEq",468],[10,"TotalHash",468],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",468],[10,"UnwrapUncheckedRelease",518],[17,"ItemIn"],[10,"ConvertVec",520],[10,"ResizeFaster",520],[10,"IntoRawParts",520],[10,"PushUnchecked",520],[10,"CapacityByFactor",520],[10,"InitHashMaps",43],[8,"PlIndexMap",43],[8,"PlIndexSet",43]],"r":[[0,304],[1,304],[368,555],[369,550],[370,550]],"b":[[283,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[285,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMwBNAAAAAgACgBNAFoAAgBeAAIAYwASAHcACQCCAAAAhQAEAI0ADgCeAAUApgAJALEAAQC0AAMAvAAAAMEADADPAAEA0gAGANoACgDmAA4A9gACAPoACwAHARUAHgEDACMBBgArASQAUQEAAFMBAABVAQQAXAEXAHUBAAB3AQYAfwELAI0BBQCUAQIAmAENAKgBBACuAQAAsQEFALgBAQC7AQMAwAEAAMIBBQDJAQQA0AEAANIBAwDaAQMA4AELAO0BAwDyARUACQIEAA8CAwAUAgEA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
